[18:48:13] [Controller][INFO] -> LOG SEVERITY: HIGH

[18:48:13] [Controller][INFO] -> CONTROLLER LAUNCHED

[18:48:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:15] [Controller][INFO] -> --ACTIONS: [[<Command.START: -1>, None]]
[18:48:15] [Controller][INFO] -> --ACTION: [<Command.START: -1>, None]
[18:48:15] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:15][NOHEADER] -> {'root': {}}

[18:48:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][INFO] -> --Available actions: [[<Command.START: -1>, None]]
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.INITIAL)
[18:48:15] [Controller][DEBUG] -> --Performing action: [<Command.START: -1>, None]

[18:48:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:15] [Controller][DEBUG] ->  ** COMMAND START ** 
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.INITIAL)

[18:48:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:15] [Controller][INFO] -> --ACTIONS: [[<Command.START: -1>, None]]
[18:48:15] [Controller][INFO] -> --ACTION: [<Command.START: -1>, None]
[18:48:15] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]

[18:48:15] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:48:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:15][NOHEADER] -> {'root': {}}

[18:48:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: root, Type: Type.EXPLORED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][INFO] -> --Available actions: [[<Command.START: -1>, None]]
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:48:15] [Controller][DEBUG] -> --Performing action: [<Command.START: -1>, None]

[18:48:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:15] [Controller][DEBUG] ->  ** COMMAND START ** 
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)

[18:48:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:15] [Controller][DEBUG] -> Control policy EXPLORING
[18:48:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:48:15] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.EXPLORED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]

[18:48:15] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:48:15] [Controller][INFO] -> ADDED MID
[18:48:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:15][NOHEADER] -> {'root': {'M_n2': '(M , N , O)'}, 'M_n2': {}}

[18:48:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:48:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:48:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:48:15] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:15][NOHEADER] -> {'root': {'M_n2': '(M , N , O)'}, 'M_n2': {}}

[18:48:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:48:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:48:15] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:15][NOHEADER] -> {'root': {'M_n2': '(M , N , O)'}, 'M_n2': {}}

[18:48:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:48:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:48:16] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:16][NOHEADER] -> {'root': {'M_n2': '(M , N , O)'}, 'M_n2': {}}

[18:48:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:48:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:48:16] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:16][NOHEADER] -> {'root': {'M_n2': '(M , N , O)'}, 'M_n2': {}}

[18:48:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:48:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:48:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:16] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:48:16] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:48:16] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:16][NOHEADER] -> {'root': {'M_n2': '(M , N , O)'}, 'M_n2': {}}

[18:48:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:48:16] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:48:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:16] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:48:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:16] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:48:16] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:48:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:48:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:17] [Controller][DEBUG] -> Control policy EXPLORING
[18:48:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:17] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:48:17] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:48:17] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n2, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]

[18:48:17] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:48:17] [Controller][INFO] -> ADDED LEFT
[18:48:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}

[18:48:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:17] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:48:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:48:17] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:48:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:17] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:48:17] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:48:17] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.3708°

[18:48:20] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:48:20] [Controller][INFO] ->  ~~ perfect ~~ 
[18:48:20] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -179.4127
[18:48:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:48:20] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}

[18:48:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:48:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}

[18:48:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}

[18:48:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}

[18:48:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}

[18:48:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:22] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:22] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:48:22] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:48:22] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:22] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:22][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}

[18:48:22] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]
[18:48:22] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:48:22] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:22] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:48:22] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:22] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:48:22] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:48:22] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:48:22] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:23] [Controller][DEBUG] -> Control policy EXPLORING
[18:48:23] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:23] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:48:23] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:48:23] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.OBSERVED, Action: 180.0, Parent: M_n2, Left: None, Mid: None, Right: None ]

[18:48:23] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:48:23] [Controller][INFO] -> ADDED RIGHT
[18:48:23] [Controller][INFO] -> ADDED LEFT
[18:48:23] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:23][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:23] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:23] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:48:23] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:48:23] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:48:23] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:23] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:48:23] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:48:23] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.67°

[18:48:26] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:48:26] [Controller][INFO] ->  ~~ perfect ~~ 
[18:48:26] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.471
[18:48:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:48:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:48:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:48:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:48:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:48:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:48:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:48:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:48:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:28] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:48:28] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:28] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:48:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:28] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:48:28] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:28] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:48:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:28] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:48:28] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:28] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:48:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:28] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:48:28] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , O)'}, 'L_n5': {}, 'R_n4': {}}

[18:48:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:48:28] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:48:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:28] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:48:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:28] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:48:29] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:48:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:48:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:29] [Controller][DEBUG] -> Control policy EXPLORING
[18:48:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:29] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:48:29] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:48:29] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.OBSERVED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]

[18:48:29] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:48:29] [Controller][INFO] -> ADDED RIGHT
[18:48:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:29] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:48:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:48:29] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:48:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:29] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:48:29] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:48:29] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.8494°

[18:48:33] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:48:33] [Controller][INFO] ->  ~~ perfect ~~ 
[18:48:33] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.5515
[18:48:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:48:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:34] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:48:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:34] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:35] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:35] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:35] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:35] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:35] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:36] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:36] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:36] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:36] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:36] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:36] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:37] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:37] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:37] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:37] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:48:37] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14974771440029144
[18:48:37] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:37] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:48:37] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:48:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:37] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:48:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:48:37] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:48:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:48:37] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:48:37] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 85.6254°

[18:48:40] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:48:40] [Controller][ERROR] ->  !! bad orientation !! 
[18:48:40] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 87.1954

[18:48:40] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:48:40] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:48:40] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.8369°
[18:48:40] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:48:40] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.8369, 87.1631, 90.0]

[18:48:40] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:48:40] [Controller][INFO] ->  ~~ perfect ~~ 
[18:48:40] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 89.669

[18:48:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:48:41] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.7147°

[18:48:43] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:48:43] [Controller][INFO] ->  ~~ perfect ~~ 
[18:48:43] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.5136
[18:48:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:48:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:48] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:48:48] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:48:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}

[18:48:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]
[18:48:48] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:48:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:48] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:48:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:48] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:48:48] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:48:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:48:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:49] [Controller][DEBUG] -> Control policy EXPLORING
[18:48:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:49] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.OBSERVED, Action: 180.0, Parent: L_n5, Left: None, Mid: None, Right: None ]

[18:48:49] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:48:49] [Controller][INFO] -> ADDED RIGHT
[18:48:49] [Controller][INFO] -> ADDED MID
[18:48:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:49] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:48:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:48:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:48:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:51] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:51] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:51] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:51] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:51] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:51] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:51] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:51] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:52] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:52] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:52] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:52] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:52] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:52] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:52] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:52] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:52] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:52] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:52] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:52] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:53] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:53] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:53] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:53][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:53] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:53] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:53] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:53] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:53] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:53] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:53] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:53][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:53] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:53] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:53] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:53] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:53] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:53] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:53] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:53][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:53] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:53] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:53] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:53] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:54] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:54] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:54] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:54][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:54] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:54] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:54] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:54] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:54] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:54] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:54][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:54] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:54] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:54] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:54] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:54] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:54] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:54][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:54] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:54] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:54] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:55] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:55] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:55] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:48:55] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:48:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:48:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:48:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:48:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:55] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:55] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:48:55] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:48:55] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:48:55] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:48:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:48:55] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:48:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:55] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:48:55] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:48:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:48:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:48:56] [Controller][DEBUG] -> Control policy EXPLORING
[18:48:56] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:48:56] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:48:56] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:48:56] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.OBSERVED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: None ]

[18:48:56] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:48:56] [Controller][INFO] -> ADDED RIGHT
[18:48:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:48:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:48:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:48:56] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:48:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:48:56] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:48:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:48:56] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:48:56] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:48:56] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.4739°

[18:49:0] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:0] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:0] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.2874
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:49:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:1] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:1][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:49:1] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:1] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:1][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:1] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:1] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:1][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:1] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:1] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:1][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:1] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:1] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:49:2] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14743635058403015
[18:49:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:2] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:49:2] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:49:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:2] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:2][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:2] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:49:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:49:2] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:49:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:49:2] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:2] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.6471°

[18:49:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:4] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:4] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -1.0195

[18:49:5] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:5] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.2289°

[18:49:7] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:7] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:7] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.5984
[18:49:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:49:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:10] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:11] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:11] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:11] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:11] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:11][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:11] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:11] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:11] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:11] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:11] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:49:11] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:49:11] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:11][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]
[18:49:11] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:49:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:11] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:49:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:11] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:49:11] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:49:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:49:12] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:12] [Controller][DEBUG] -> Control policy EXPLORING
[18:49:12] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:12] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:49:12] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]
[18:49:12] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.OBSERVED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: None ]

[18:49:12] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:49:12] [Controller][INFO] -> ADDED RIGHT
[18:49:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:12][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:12] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:49:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:49:12] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]

[18:49:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:12] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:49:12] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:12] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.0641°

[18:49:14] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:15] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:15] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -1.9391
[18:49:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:49:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:49:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:49:17] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14739136397838593
[18:49:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:17] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:49:17] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:49:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:17] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:49:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:49:17] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:49:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:49:17] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:17] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 84.6701°

[18:49:21] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:21] [Controller][ERROR] ->  !! bad orientation !! 
[18:49:21] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -92.1408

[18:49:21] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:49:21] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:21] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.1519°
[18:49:21] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:49:21] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.1519, -92.1519, -90.0]

[18:49:22] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:22] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:22] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -90.4719

[18:49:22] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:22] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.7839°

[18:49:25] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:25] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:25] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 1.3433
[18:49:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:49:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:29] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:29] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:29] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:29] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:29] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:29] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:49:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:29] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:49:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:29] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:49:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:29] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:49:29] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]
[18:49:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]
[18:49:29] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:49:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:29] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]

[18:49:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:29] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:49:29] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:49:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:49:30] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:30] [Controller][DEBUG] -> Control policy EXPLORING
[18:49:30] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:30] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:49:30] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:49:30] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.OBSERVED, Action: 0.0, Parent: R_n9, Left: None, Mid: None, Right: None ]

[18:49:30] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:49:30] [Controller][INFO] -> ADDED LEFT
[18:49:30] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:30][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:30] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:49:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:49:30] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:49:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:30] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:49:30] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:30] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.5648°

[18:49:33] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:33] [Controller][ERROR] ->  !! bad orientation !! 
[18:49:33] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 92.1547

[18:49:33] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:49:33] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:33] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.1638°
[18:49:33] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:49:33] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.1638, 92.1638, 90.0]

[18:49:33] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:33] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:33] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.4101
[18:49:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:49:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:34] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:49:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:34] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:34] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:49:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:49:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:35] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:49:35] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14913000166416168
[18:49:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:35] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:49:35] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:49:35] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:35] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:49:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:49:35] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:49:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:49:35] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:35] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.8956°

[18:49:38] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:38] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:38] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -1.9572

[18:49:38] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:38] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.9856°

[18:49:41] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:41] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:41] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 91.318
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:49:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:49:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:49:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:49:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:49:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:49:45] [Controller][INFO] -> --ACTIONS: [[<Command.STOP: 0>, None]]
[18:49:45] [Controller][INFO] -> --ACTION: [<Command.STOP: 0>, None]
[18:49:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , O)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:45] [Controller][INFO] -> --Available actions: [[<Command.STOP: 0>, None]]
[18:49:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:49:45] [Controller][DEBUG] -> --Performing action: [<Command.STOP: 0>, None]

[18:49:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:45] [Controller][DEBUG] ->  ** COMMAND STOP ** 
[18:49:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[18:49:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:49:45] [Controller][DEBUG] -> Control policy EXPLORING
[18:49:45] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:49:45] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:49:45] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:49:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]

[18:49:45] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:49:45] [Controller][INFO] -> *** DEAD END NODE DETECTED ***

[18:49:45] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:49:45] [Controller][WARNING] ->  --CURRENT NODE: [ Name: L_n11, Type: Type.DEAD_END, Action: 90.0, Parent: R_n10, Left: None, Mid: None, Right: None ]
[18:49:45] [Controller][WARNING] ->  --PARENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:49:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:49:45] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:49:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:49:45] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:49:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:49:45] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:49:45] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:45] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 179.7768°

[18:49:51] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:51] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:51] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -90.9029
[18:49:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[18:49:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:49:52] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14729778468608856
[18:49:52] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:49:52] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:49:52] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:49:52] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:49:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:49:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:49:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:49:52] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:49:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:49:52] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:49:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:49:52] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:52] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.987°

[18:49:56] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:49:57] [Controller][INFO] ->  ~~ perfect ~~ 
[18:49:57] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.4324

[18:49:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:49:57] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.792°

[18:50:2] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:2] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:2] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.79
[18:50:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:50:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:5] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[18:50:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:6] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:6] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:6] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:7] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:50:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:7] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:50:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:7] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:50:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:7] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:50:8] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:50:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:50:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:8] [Controller][DEBUG] -> Control policy ESCAPING
[18:50:8] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:8] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:50:8] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:50:8] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n10, Type: Type.EXPLORED, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]

[18:50:8] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:50:8] [Controller][INFO] -> *** ALL CHILDREN ARE DEAD END NODES ***

[18:50:8] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:50:8] [Controller][WARNING] ->  --CURRENT NODE: [ Name: R_n10, Type: Type.DEAD_END, Action: 0.0, Parent: R_n9, Left: L_n11, Mid: None, Right: None ]
[18:50:8] [Controller][WARNING] ->  --PARENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:8] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:50:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:50:8] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:50:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:8] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:50:9] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:9] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.4541°

[18:50:13] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:13] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:13] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.0886
[18:50:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:50:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:50:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:50:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:50:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:15] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:15] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:15] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:16] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:16] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:16] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:17] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:17] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:50:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:50:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:50:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:50:17] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14854013919830322
[18:50:17] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:17] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:50:17] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:50:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:17] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:50:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:50:17] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:50:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:50:17] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:17] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.4619°

[18:50:21] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:21] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:21] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.1645

[18:50:21] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:21] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.9258°

[18:50:25] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:25] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:25] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -179.4286
[18:50:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:50:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:28] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:28] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:50:28] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:50:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:28] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:50:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:28] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:50:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:28] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:50:29] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:50:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:50:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:29] [Controller][DEBUG] -> Control policy ESCAPING
[18:50:29] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:29] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:50:29] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:50:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n9, Type: Type.EXPLORED, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]

[18:50:29] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:50:29] [Controller][INFO] -> *** ALL CHILDREN ARE DEAD END NODES ***

[18:50:29] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:50:29] [Controller][WARNING] ->  --CURRENT NODE: [ Name: R_n9, Type: Type.DEAD_END, Action: 90.0, Parent: M_n8, Left: None, Mid: None, Right: R_n10 ]
[18:50:29] [Controller][WARNING] ->  --PARENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:29] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:50:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:50:29] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:50:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:29] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:50:29] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:29] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.9246°

[18:50:34] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:34] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:34] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -89.2062
[18:50:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:50:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:35] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:35] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:50:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:35] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:35] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:50:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:35] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:35] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:50:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:35] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:35] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:35] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:35] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:35] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:36] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:50:36] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:50:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:50:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:36] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:50:36] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:50:36] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:36] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:50:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:36] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:50:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:36] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:50:36] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:50:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:50:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:37] [Controller][DEBUG] -> Control policy ESCAPING
[18:50:37] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:37] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:50:37] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]
[18:50:37] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n8, Type: Type.EXPLORED, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]

[18:50:37] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:50:37] [Controller][INFO] -> *** ALL CHILDREN ARE DEAD END NODES ***

[18:50:37] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:50:37] [Controller][WARNING] ->  --CURRENT NODE: [ Name: M_n8, Type: Type.DEAD_END, Action: 180.0, Parent: R_n6, Left: None, Mid: None, Right: R_n9 ]
[18:50:37] [Controller][WARNING] ->  --PARENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:37] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:50:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:50:37] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]

[18:50:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:37] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:50:37] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:37] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.1402°

[18:50:41] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:42] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:42] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 1.5393
[18:50:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:50:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:50:42] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.11098300665616989
[18:50:42] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:42] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:50:42] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:50:42] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:42] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:42][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:42] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:42] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:50:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:50:42] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:50:42] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:50:42] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:42] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 91.5738°

[18:50:46] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:46] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:46] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -91.1293

[18:50:47] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:47] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.6478°

[18:50:51] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:51] [Controller][INFO] ->  ~~ perfect ~~ 
[18:50:51] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 1.8564
[18:50:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:50:54] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:54] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:54] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:54] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:54] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:54][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:54] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:50:54] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:54] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:55] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:50:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:55] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:50:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:55] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:50:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:50:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:55] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:55] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:50:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:50:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:50:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:50:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:50:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:50:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:50:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:50:57] [Controller][WARNING] -> ALERT: WALL ON THE LEFT. VALUE: 0.14722184836864471
[18:50:57] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:50:57] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:50:57] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:50:57] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:50:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:50:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:50:57] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:50:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:50:57] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:50:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:50:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:50:57] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 88.4026°

[18:50:59] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:50:59] [Controller][ERROR] ->  !! bad orientation !! 
[18:50:59] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 93.1806

[18:50:59] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:51:0] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:0] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 3.1743°
[18:51:0] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:51:0] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-3.1743, 93.1743, 90.0]

[18:51:0] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:0] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:0] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.4691

[18:51:0] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:0] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 90.5218°

[18:51:3] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:3] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:3] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.7117
[18:51:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:51:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:8] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:8] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:8] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:8] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:8] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:8] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:8] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:8] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:8] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:8] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:8] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:8] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:51:8] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:8] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:51:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:8] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:8] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:8] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]
[18:51:8] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:8] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:51:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:8] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]

[18:51:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:8] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:51:9] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:51:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:51:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:9] [Controller][DEBUG] -> Control policy ESCAPING
[18:51:9] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:9] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:51:9] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:51:9] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]

[18:51:9] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:51:9] [Controller][WARNING][DEBUG] -> No leaf or DEAD END children
[18:51:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:9][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:9] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:51:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:51:9] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:51:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:9] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:51:9] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:9] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 92.8854°

[18:51:13] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:13] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:13] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.4137
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:51:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:51:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:51:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:51:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:51:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:51:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:51:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:51:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:51:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:51:15] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.12408150732517242
[18:51:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:15] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:51:15] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:51:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:15] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:51:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:51:15] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:51:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:51:15] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:15] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.4642°

[18:51:17] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:17] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:17] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.8342

[18:51:18] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:18] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.9618°

[18:51:21] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:21] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:21] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 91.218
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:51:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:24] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:24] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:24] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:24] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:26] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:26] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:26] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:26] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:26] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:26] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:26] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:26] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:26] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:26] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:26] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:28] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:28] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:28] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:28] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:28] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:28] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:28] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:51:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:28] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:51:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:51:28] [Controller][INFO] -> --ACTIONS: [[<Command.STOP: 0>, None]]
[18:51:28] [Controller][INFO] -> --ACTION: [<Command.STOP: 0>, None]
[18:51:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:28] [Controller][INFO] -> --Available actions: [[<Command.STOP: 0>, None]]
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:28] [Controller][DEBUG] -> --Performing action: [<Command.STOP: 0>, None]

[18:51:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:28] [Controller][DEBUG] ->  ** COMMAND STOP ** 
[18:51:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[18:51:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:29] [Controller][DEBUG] -> Control policy EXPLORING
[18:51:29] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:29] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:51:29] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:51:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n7, Type: Type.OBSERVED, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]

[18:51:29] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:51:29] [Controller][INFO] -> *** DEAD END NODE DETECTED ***

[18:51:29] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:51:29] [Controller][WARNING] ->  --CURRENT NODE: [ Name: R_n7, Type: Type.DEAD_END, Action: 90.0, Parent: R_n6, Left: None, Mid: None, Right: None ]
[18:51:29] [Controller][WARNING] ->  --PARENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:29] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:51:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:51:29] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:51:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:29] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:51:29] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:29] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 178.5792°

[18:51:34] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:34] [Controller][ERROR] ->  !! bad orientation !! 
[18:51:34] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -92.247

[18:51:34] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:51:34] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:34] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.3306°
[18:51:34] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:51:34] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.3306, -92.3306, -90.0]

[18:51:35] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:35] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:35] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -90.6639
[18:51:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[18:51:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[18:51:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:36] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:36] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:36] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:36][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:36] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:36] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:36] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:37] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:37] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:37] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:37] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:37] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:37] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:37] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:37] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:37] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:37] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:37] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:37] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:37] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:51:38] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14313162863254547
[18:51:38] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:38] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:51:38] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:51:38] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:38] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:51:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:51:38] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:51:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:51:38] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:38] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 84.8103°

[18:51:41] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:41] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:41] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.2398

[18:51:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:41] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.9105°

[18:51:44] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:44] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:44] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -89.3984
[18:51:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:51:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:48] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:48] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:48] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:48] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:49] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:49] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:49] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:49] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:49] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:50] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:50] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:50] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:51:50] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:51:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:51:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:51:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:51:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:51:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:51:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:51:51] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.1476617455482483
[18:51:51] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:51:51] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:51:51] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:51:51] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:51:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:51:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:51:51] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:51:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:51:51] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:51:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:51:51] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:51] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 86.9469°

[18:51:54] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:51:54] [Controller][INFO] ->  ~~ perfect ~~ 
[18:51:54] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.1935

[18:51:55] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:51:55] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 92.2515°

[18:52:0] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:0] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:0] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.3341
[18:52:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:52:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:3] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:52:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:52:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:52:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:52:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:52:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:52:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:3] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:52:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:52:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:52:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:52:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:52:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:52:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:3] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:3] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:52:3] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:52:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:52:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:52:3] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:52:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:3] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:52:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:3] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:52:4] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:52:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:52:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:5] [Controller][DEBUG] -> Control policy ESCAPING
[18:52:5] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:5] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:52:5] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]
[18:52:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n6, Type: Type.EXPLORED, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]

[18:52:5] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:52:5] [Controller][INFO] -> *** ALL CHILDREN ARE DEAD END NODES ***

[18:52:5] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:52:5] [Controller][WARNING] ->  --CURRENT NODE: [ Name: R_n6, Type: Type.DEAD_END, Action: 180.0, Parent: L_n5, Left: None, Mid: M_n8, Right: R_n7 ]
[18:52:5] [Controller][WARNING] ->  --PARENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:5] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:52:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:52:5] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]

[18:52:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:5] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:52:5] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:5] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.7152°

[18:52:8] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:8] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:8] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 1.2463
[18:52:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:52:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:9] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:9] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:9] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:9][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:9] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:52:9] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:9] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:9] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:9] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:9][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:9] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:52:9] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:9] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:9] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:9] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:9][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:9] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:52:9] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:10] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:52:10] [Controller][WARNING] -> ALERT: WALL ON THE LEFT. VALUE: 0.14613236486911774
[18:52:10] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:10] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:52:10] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:52:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:10] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:52:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:52:10] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:52:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:52:10] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:10] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.9748°

[18:52:12] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:12] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:12] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 91.8375

[18:52:13] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:13] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 92.3752°

[18:52:15] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:15] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:15] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -1.5753
[18:52:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:52:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:20] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:20] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:20] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:20][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:20] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:20] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:20] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:20] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:20] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:20] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:20][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:20] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:20] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:20] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:52:20] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14904530346393585
[18:52:20] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:20] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:52:20] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:52:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:20][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:20] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:52:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:52:20] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:52:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:52:20] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:20] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.938°

[18:52:23] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:23] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:23] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -91.8944

[18:52:24] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:24] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.9596°

[18:52:27] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:27] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:27] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 1.9905
[18:52:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:52:30] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:30] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:30] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:30] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:30] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:30] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:30][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:30] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:30] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:30] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:30] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:30] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:30] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:30] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:30] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:30] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:30][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:30] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:30] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:30] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:30] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:31] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:31] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:31] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:31] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:31] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:32] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:52:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:52:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:52:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:32] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:32] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:52:32] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]
[18:52:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:32] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:52:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:32] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]

[18:52:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:32] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:52:32] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:52:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:52:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:33] [Controller][DEBUG] -> Control policy ESCAPING
[18:52:33] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:33] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:52:33] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:52:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n5, Type: Type.EXPLORED, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]

[18:52:33] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:52:33] [Controller][INFO] -> *** ALL CHILDREN ARE DEAD END NODES ***

[18:52:33] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:52:33] [Controller][WARNING] ->  --CURRENT NODE: [ Name: L_n5, Type: Type.DEAD_END, Action: -90.0, Parent: L_n3, Left: None, Mid: None, Right: R_n6 ]
[18:52:33] [Controller][WARNING] ->  --PARENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:33] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:52:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:52:33] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:52:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:33] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:52:33] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:33] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 87.4358°

[18:52:36] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:36] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:36] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.9309
[18:52:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:52:37] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:52:37] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14221134781837463
[18:52:37] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:37] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:52:37] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:52:37] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:37][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:37] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:52:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:52:37] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:52:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:52:37] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:37] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 90.8444°

[18:52:40] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:40] [Controller][ERROR] ->  !! bad orientation !! 
[18:52:40] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -2.1015

[18:52:40] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:52:40] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:40] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.1402°
[18:52:40] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:52:40] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.1402, -2.1402, 0.0]

[18:52:40] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:40] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:40] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.5231

[18:52:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:41] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.9589°

[18:52:43] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:43] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:43] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 91.1522
[18:52:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:52:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:46] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:46] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:46] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:46] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:52:46] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:47] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:52:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:47] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:52:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:47] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:52:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:47] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:47] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:47] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:52:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]
[18:52:47] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:52:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:47] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:52:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:47] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:52:47] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:52:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:52:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:48] [Controller][DEBUG] -> Control policy ESCAPING
[18:52:48] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:52:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:48] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n3, Type: Type.EXPLORED, Action: 180.0, Parent: M_n2, Left: L_n5, Mid: None, Right: R_n4 ]

[18:52:48] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:52:48] [Controller][WARNING][DEBUG] -> No leaf or DEAD END children
[18:52:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:52:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:52:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:52:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:52:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:49] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:52:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:52:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:52:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:52:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:50] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:52:50] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}

[18:52:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]
[18:52:50] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:52:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:52:50] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:52:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:50] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:52:50] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:52:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:52:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:52:51] [Controller][DEBUG] -> Control policy EXPLORING
[18:52:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:51] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:52:51] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:52:51] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n4, Type: Type.OBSERVED, Action: 90.0, Parent: L_n3, Left: None, Mid: None, Right: None ]

[18:52:51] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:52:51] [Controller][INFO] -> ADDED LEFT
[18:52:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:52:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:52:51] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:52:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:52:51] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:52:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:52:51] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:52:51] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:51] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.3865°

[18:52:54] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:54] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:54] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.6833
[18:52:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:52:54] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:52:54] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.1497291922569275
[18:52:54] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:52:54] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:52:54] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:52:54] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:52:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:52:54][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:52:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:52:54] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:52:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:52:54] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:52:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:52:54] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:54] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 91.1515°

[18:52:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:52:57] [Controller][INFO] ->  ~~ perfect ~~ 
[18:52:57] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 89.1304

[18:52:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:52:57] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.1828°

[18:53:0] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:0] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:0] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -179.0871
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:53:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:3] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:53:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:53:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:3] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:53:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:3] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:53:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:3] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:53:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:4] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:4] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:4] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:4][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:53:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:4] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:4] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:4] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:4] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:4] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:4][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:53:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:4] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:4] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:4] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:53:4] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:53:4] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:4][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , O)'}, 'L_n12': {}}

[18:53:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]
[18:53:4] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:53:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:4] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:53:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:4] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:53:4] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:53:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:53:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:5] [Controller][DEBUG] -> Control policy EXPLORING
[18:53:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:5] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:53:5] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:53:5] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n12, Type: Type.OBSERVED, Action: 180.0, Parent: R_n4, Left: None, Mid: None, Right: None ]

[18:53:5] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:53:5] [Controller][INFO] -> ADDED LEFT
[18:53:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:5] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:53:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:53:5] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:53:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:5] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:53:5] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:5] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.7154°

[18:53:8] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:8] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:8] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.3513
[18:53:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:53:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:53:8] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.12940067052841187
[18:53:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:8] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:53:8] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:53:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:8] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:53:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:53:8] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:53:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:53:8] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:8] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 91.754°

[18:53:11] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:11] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:11] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 179.6972

[18:53:11] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:11] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.6443°

[18:53:14] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:14] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:14] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -89.0033
[18:53:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:53:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:53:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:17] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:17] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:17] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:17] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:19] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:53:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:19] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:19] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:53:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:19] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:53:20] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:53:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:20][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , O)'}, 'L_n13': {}}

[18:53:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]
[18:53:20] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:53:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:20] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:53:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:20] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:53:20] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:53:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:53:20] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:20] [Controller][DEBUG] -> Control policy EXPLORING
[18:53:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:20] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:53:20] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:53:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n13, Type: Type.OBSERVED, Action: -90.0, Parent: L_n12, Left: None, Mid: None, Right: None ]

[18:53:20] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:53:20] [Controller][INFO] -> ADDED RIGHT
[18:53:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:20][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:20] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:53:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:53:20] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:53:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:20] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:53:21] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:21] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.2643°

[18:53:23] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:24] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:24] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.6307
[18:53:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:53:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:24] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:53:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:24] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:53:25] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.1462751030921936
[18:53:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:25] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:53:25] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:53:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:25] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:53:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:53:25] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:53:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:53:25] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:25] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.5257°

[18:53:27] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:27] [Controller][ERROR] ->  !! bad orientation !! 
[18:53:27] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 87.4332

[18:53:27] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:53:27] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:27] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.59°
[18:53:27] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:53:27] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.59, 87.41, 90.0]

[18:53:28] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:28] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:28] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 89.4998

[18:53:28] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:28] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.8222°

[18:53:31] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:31] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:31] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.2406
[18:53:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:53:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:34] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:53:34] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:53:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:53:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:34] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:53:34] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:53:34] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , O)'}, 'R_n14': {}}

[18:53:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]
[18:53:34] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:53:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:34] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:53:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:34] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:53:35] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:53:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:53:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:35] [Controller][DEBUG] -> Control policy EXPLORING
[18:53:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:35] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:53:35] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:53:35] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 180.0, Parent: L_n13, Left: None, Mid: None, Right: None ]

[18:53:35] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:53:35] [Controller][INFO] -> ADDED RIGHT
[18:53:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:35] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:53:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:53:35] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:53:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:35] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:53:35] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:35] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 92.0219°

[18:53:38] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:38] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:38] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.2569
[18:53:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:53:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:38] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:38] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:38] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:38] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:53:38] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:39] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:39] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:39] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:39] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:39] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:41] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:41] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:41] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:41] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:41][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:41] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:41] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:41] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:41] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:41] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:41] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:41][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:41] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:41] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:53:41] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14977754652500153
[18:53:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:41] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:53:41] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:53:41] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:41] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:41][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:41] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:53:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:53:41] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:53:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:53:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:41] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 85.5305°

[18:53:45] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:45] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:45] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.189

[18:53:45] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:45] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.3995°

[18:53:48] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:48] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:48] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 91.9899
[18:53:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:53:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:51] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:51] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:51] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:51] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:51] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:51] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:51] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:51] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:51] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:51] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:52] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:52] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:52] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:52] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:52] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:52] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:52] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:52] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:52] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:52] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:53:52] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:52][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:52] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:52] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:53:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:53] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:53] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:53:53] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:53:53] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:53][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , O)'}, 'R_n15': {}}

[18:53:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:53:53] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:53:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:53] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:53:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:53] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:53:53] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:53:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:53:53] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:53] [Controller][DEBUG] -> Control policy EXPLORING
[18:53:53] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:53] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:53:53] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]
[18:53:53] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]

[18:53:53] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:53:53] [Controller][INFO] -> ADDED RIGHT
[18:53:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:53][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:53] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:53:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:53:53] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]

[18:53:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:53] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:53:53] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:53] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.8064°

[18:53:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:57] [Controller][ERROR] ->  !! bad orientation !! 
[18:53:57] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -2.2873

[18:53:57] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:53:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:53:57] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.2858°
[18:53:57] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:53:57] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.2858, -2.2858, 0.0]

[18:53:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:53:57] [Controller][INFO] ->  ~~ perfect ~~ 
[18:53:57] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.4923
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:53:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:53:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:53:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:53:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:59] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:59][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:59] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:59] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:59][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:59] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:59] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:59][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:59] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:53:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:53:59] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:53:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:53:59][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:53:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:53:59] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:53:59] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:53:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:53:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:53:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:53:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:0] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:0] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:0][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:54:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:0] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:0] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:0] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:0] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:0][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:54:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:0] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:0] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:0] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:0] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:0][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:54:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:0] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:0] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:1] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:1] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:1][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:54:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:1] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:1] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:1] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:54:1] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]
[18:54:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:1][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , O)'}, 'R_n16': {}}

[18:54:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]
[18:54:1] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:54:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:1] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]

[18:54:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:1] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:54:1] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:54:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:54:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:2] [Controller][DEBUG] -> Control policy EXPLORING
[18:54:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:2] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:54:2] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:54:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n16, Type: Type.OBSERVED, Action: 0.0, Parent: R_n15, Left: None, Mid: None, Right: None ]

[18:54:2] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:54:2] [Controller][INFO] -> ADDED LEFT
[18:54:2] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:2][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:2] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:54:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:54:2] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:54:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:2] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:54:2] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:2] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 94.1764°

[18:54:6] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:6] [Controller][ERROR] ->  !! bad orientation !! 
[18:54:6] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 92.1395

[18:54:6] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:54:6] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:6] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.1567°
[18:54:6] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:54:6] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.1567, 92.1567, 90.0]

[18:54:7] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:7] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:7] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.4241
[18:54:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:54:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:7] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:54:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:8] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:8] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:8] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:8] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:8] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:8] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:8] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:8] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:8] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:8] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:8][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:8] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:8] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:8] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:9] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:9] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:9] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:9][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:9] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:9] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:9] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:9] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:9] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:9][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:9] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:9] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:9] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:9] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:9] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:9][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:9] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:9] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:10] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:54:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , O)'}, 'L_n17': {}}

[18:54:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]
[18:54:10] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:54:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:10] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:54:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:10] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:54:11] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:54:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:54:11] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:11] [Controller][DEBUG] -> Control policy EXPLORING
[18:54:11] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:11] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:54:11] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]
[18:54:11] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n17, Type: Type.OBSERVED, Action: 90.0, Parent: R_n16, Left: None, Mid: None, Right: None ]

[18:54:11] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:54:11] [Controller][INFO] -> ADDED RIGHT
[18:54:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:11][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:11] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:54:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:54:11] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]

[18:54:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:11] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:54:11] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:11] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.8985°

[18:54:15] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:15] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:15] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -1.9045
[18:54:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:54:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:54:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:54:16] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.12401749193668365
[18:54:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:16] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:54:16] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:54:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:16] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:54:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:54:16] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:54:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:54:16] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:16] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.0066°

[18:54:19] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:19] [Controller][ERROR] ->  !! bad orientation !! 
[18:54:19] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -92.1447

[18:54:19] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:54:19] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:19] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.2353°
[18:54:19] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:54:19] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.2353, -92.2353, -90.0]

[18:54:20] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:20] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:20] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -90.6251

[18:54:20] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:20] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.0545°

[18:54:24] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:24] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:24] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 1.4009
[18:54:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:54:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:54:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:54:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:54:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:28] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:54:28] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]
[18:54:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , O)'}, 'R_n18': {}}

[18:54:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]
[18:54:28] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:54:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:28] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]

[18:54:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:28] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:54:28] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:54:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:54:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:29] [Controller][DEBUG] -> Control policy EXPLORING
[18:54:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:29] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:54:29] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:54:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: L_n17, Left: None, Mid: None, Right: None ]

[18:54:29] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:54:29] [Controller][INFO] -> ADDED RIGHT
[18:54:29] [Controller][INFO] -> ADDED LEFT
[18:54:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:29] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:54:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:54:29] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:54:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:29] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:54:29] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:29] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.9848°

[18:54:32] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:32] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:32] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -91.5647
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:54:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:54:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:54:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:54:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:54:33] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.11058136075735092
[18:54:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:33] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:54:33] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:54:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:33] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:54:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:54:33] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:54:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:54:33] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:33] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.277°

[18:54:36] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:36] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:36] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 179.0286

[18:54:36] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:36] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.0848°

[18:54:39] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:39] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:39] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.5988
[18:54:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:54:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:43] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:43] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:43][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:43] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:43] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:43] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:43][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:43] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:43] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:43] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:43][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:43] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:43] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:43] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:43][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:43] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:43] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:43] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:43][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:43] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:43] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:44] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:44] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:44] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:44] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:44] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:44] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:44][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:44] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:44] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:46] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:46] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:46] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:46] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:46] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:46] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:46] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:46] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:46] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:46] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:46] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:46] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:46] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:54:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:54:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:54:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:54:48] [Controller][INFO] -> --ACTIONS: [[<Command.STOP: 0>, None]]
[18:54:48] [Controller][INFO] -> --ACTION: [<Command.STOP: 0>, None]
[18:54:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , O)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:48] [Controller][INFO] -> --Available actions: [[<Command.STOP: 0>, None]]
[18:54:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:48] [Controller][DEBUG] -> --Performing action: [<Command.STOP: 0>, None]

[18:54:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:48] [Controller][DEBUG] ->  ** COMMAND STOP ** 
[18:54:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[18:54:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:48] [Controller][DEBUG] -> Control policy EXPLORING
[18:54:48] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:48] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:54:48] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:54:48] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n19, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]

[18:54:48] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:54:48] [Controller][INFO] -> *** DEAD END NODE DETECTED ***

[18:54:48] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:54:48] [Controller][WARNING] ->  --CURRENT NODE: [ Name: R_n19, Type: Type.DEAD_END, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:54:48] [Controller][WARNING] ->  --PARENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:48] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:54:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:54:48] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:54:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:48] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:54:48] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:48] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 179.1145°

[18:54:54] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:54:54] [Controller][INFO] ->  ~~ perfect ~~ 
[18:54:54] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.3678
[18:54:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[18:54:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:55] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[18:54:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:55] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:55] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:55] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:55][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:55] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:55] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:55] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:56] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:56] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:56][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:56] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:56] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:57] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:57] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:57] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:57] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:57] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:57] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:57] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:57] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:58] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:58] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:54:58] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:54:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:54:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:54:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:54:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:54:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:54:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:54:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:54:58] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.1479797512292862
[18:54:58] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:54:58] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:54:58] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:54:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:54:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:54:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:54:58] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:54:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:54:58] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:54:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:54:59] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:54:59] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.6355°

[18:55:2] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:2] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:2] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.1707

[18:55:3] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:3] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.4719°

[18:55:6] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:6] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:6] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.9825
[18:55:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:55:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:10] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:10] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:10] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:10] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:10] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:10] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:10] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:10] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:10][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:10] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:10] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:10] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:11] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:11] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:11] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:11][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:11] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:11] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:11] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:11] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:11] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:11][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:11] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:11] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:11] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:11] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:11] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:11][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:11] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:11] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:11] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:11] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:11] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:11][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:11] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:11] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:11] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:12] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:12] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:12] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:12] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:12][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:12] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:12] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:12] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:12] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:12] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:12] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:12] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:12] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:12][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:12] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:12] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:12] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:12] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:12] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:12] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:12] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:12] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:12][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:12] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:12] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:12] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:12] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:13] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:13] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:13] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:13] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:13] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:13][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:13] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:13] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:13] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:13] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:13] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:13] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:13] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:13][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:13] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:13] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:13] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:13] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:55:13] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:55:13] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:13] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:13][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]
[18:55:13] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:55:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:13] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:55:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:13] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:55:13] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:55:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:55:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:14] [Controller][DEBUG] -> Control policy ESCAPING
[18:55:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:55:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: L_n17, Left: L_n20, Mid: None, Right: R_n19 ]

[18:55:14] [Controller][DEBUG] -> *** UPDATING TREE (MODE: ESCAPING) ***
[18:55:14] [Controller][WARNING][DEBUG] -> No leaf or DEAD END children
[18:55:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:55:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:55:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:55:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:16] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:55:16] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:55:16] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , O)', 'R_n19': '(R , S , D)'}, 'L_n20': {}, 'R_n19': {}}

[18:55:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[18:55:16] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:55:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:16] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:55:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:16] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:55:16] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:55:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:55:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:17] [Controller][DEBUG] -> Control policy EXPLORING
[18:55:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:17] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:55:17] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:55:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n20, Type: Type.OBSERVED, Action: 90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]

[18:55:17] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:55:17] [Controller][INFO] -> ADDED LEFT
[18:55:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:17] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:55:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:55:17] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:55:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:17] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:55:17] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:17] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 86.8823°

[18:55:20] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:20] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:20] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.4783
[18:55:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:55:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:55:21] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14702342450618744
[18:55:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:21] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:55:21] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:55:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:21] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:55:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:55:21] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:55:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:55:21] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:21] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 91.5007°

[18:55:24] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:24] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:24] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.2981

[18:55:24] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:24] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.4091°

[18:55:28] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:28] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:28] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.8743
[18:55:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:55:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:55:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:31] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:32] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:55:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:55:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:33] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:55:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , O)'}, 'L_n21': {}, 'R_n19': {}}

[18:55:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]
[18:55:33] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:55:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:33] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:55:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:33] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:55:33] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:55:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:55:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:34] [Controller][DEBUG] -> Control policy EXPLORING
[18:55:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:34] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:55:34] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:55:34] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n21, Type: Type.OBSERVED, Action: 180.0, Parent: L_n20, Left: None, Mid: None, Right: None ]

[18:55:34] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:55:34] [Controller][INFO] -> ADDED LEFT
[18:55:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:34] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:55:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:55:34] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:55:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:34] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:55:34] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:34] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 87.339°

[18:55:37] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:37] [Controller][ERROR] ->  !! bad orientation !! 
[18:55:37] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -87.9878

[18:55:37] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:55:37] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:37] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.0099°
[18:55:37] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:55:37] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.0099, -87.9901, -90.0]

[18:55:37] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:37] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:37] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -89.6479
[18:55:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:55:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:55:38] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.13374677300453186
[18:55:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:38] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:55:38] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:55:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:38] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:55:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:55:38] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:55:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:55:38] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:38] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 90.2587°

[18:55:40] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:40] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:40] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 179.4597

[18:55:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:41] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.3405°

[18:55:43] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:43] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:43] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.4034
[18:55:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:55:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:55:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:47] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:47] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:55:47] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:55:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:48] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:48] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:48] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:48] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:48] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:48][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:48] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:48] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:49] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:49] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:49] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:49] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:49] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:49][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:49] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:49] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:50] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:50] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:55:50] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:50] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:55:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:50] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:55:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:55:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:55:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:55:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:50] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:55:50] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:55:50] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:50] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:50][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:50] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:55:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:55:50] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:55:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:55:50] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:55:50] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:55:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:55:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:55:51] [Controller][WARNING] -> ALERT: WALL ON THE LEFT. VALUE: 0.14745551347732544
[18:55:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:55:51] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:55:51] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:55:51] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:55:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , O)'}, 'L_n22': {}, 'R_n19': {}}

[18:55:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]
[18:55:51] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:55:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:55:51] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:55:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:55:51] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:51] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 88.9819°

[18:55:54] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:54] [Controller][ERROR] ->  !! bad orientation !! 
[18:55:54] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 2.0189

[18:55:54] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:55:54] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:54] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.0185°
[18:55:54] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:55:54] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.0185, 2.0185, 0.0]

[18:55:54] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:54] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:54] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 0.6173

[18:55:54] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:55:54] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 90.6226°

[18:55:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:55:58] [Controller][INFO] ->  ~~ perfect ~~ 
[18:55:58] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -91.149
[18:56:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:56:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:1] [Controller][DEBUG] -> Control policy EXPLORING
[18:56:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:1] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:56:1] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:56:1] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n22, Type: Type.OBSERVED, Action: -90.0, Parent: L_n21, Left: None, Mid: None, Right: None ]

[18:56:1] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:56:1] [Controller][INFO] -> ADDED RIGHT
[18:56:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:1][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:1] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:56:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:56:1] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:56:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:1] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:56:1] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:1] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.793°

[18:56:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:4] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:4] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.8556
[18:56:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:56:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:4] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:4] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:4][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:4] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:56:4] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:6] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:6][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:6] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:6] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:7] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:7] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:7] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:56:7] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.14467878639698029
[18:56:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:7] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:56:7] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:56:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:7][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:7] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:56:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:56:7] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:56:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:56:7] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:7] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 85.5479°

[18:56:10] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:10] [Controller][ERROR] ->  !! bad orientation !! 
[18:56:10] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 87.8783

[18:56:10] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:56:10] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:10] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.1221°
[18:56:10] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:56:10] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.1221, 87.8779, 90.0]

[18:56:11] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:11] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:11] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 89.5124

[18:56:12] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:12] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.2403°

[18:56:15] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:15] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:15] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.1817
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:56:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:18] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:18] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:18] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:18] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:18] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:18][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:18] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:18] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:19] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:56:19] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:56:19] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:19][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , O)'}, 'R_n23': {}, 'R_n19': {}}

[18:56:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]
[18:56:19] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:56:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:19] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:56:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:19] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:56:19] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:56:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:56:19] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:20] [Controller][DEBUG] -> Control policy EXPLORING
[18:56:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:20] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:56:20] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:56:20] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n23, Type: Type.OBSERVED, Action: 180.0, Parent: L_n22, Left: None, Mid: None, Right: None ]

[18:56:20] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:56:20] [Controller][INFO] -> ADDED RIGHT
[18:56:20] [Controller][INFO] -> ADDED LEFT
[18:56:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:20][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:20] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:56:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:56:20] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:56:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:20] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:56:20] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:20] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 88.9593°

[18:56:23] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:23] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:23] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.822
[18:56:23] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:56:23] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:23] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:23] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:23] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:23] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:23] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:23][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:23] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:23] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:23] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:56:23] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:23] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:23] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:23] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:23] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:23] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:23] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:23] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:23] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:23] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:23][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:23] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:23] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:23] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:23] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:23] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:23] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:23] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:23] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:24] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:24] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:24] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:24] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:24] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:24] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:24][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:24] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:24] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:24] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:24] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:24] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:24] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:24] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:25] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:25] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:25] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:25] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:25] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:25] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:25][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:25] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:25] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:25] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:26] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:26] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:26] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:26] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:26] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:26] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:56:26] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:56:26] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , O)', 'R_n24': '(R , N , O)'}, 'L_n25': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]
[18:56:26] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:56:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:26] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:56:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:26] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:56:26] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:56:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:56:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:27] [Controller][DEBUG] -> Control policy EXPLORING
[18:56:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:27] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:56:27] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:56:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n25, Type: Type.OBSERVED, Action: -90.0, Parent: R_n23, Left: None, Mid: None, Right: None ]

[18:56:27] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:56:27] [Controller][INFO] -> ADDED RIGHT
[18:56:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , O)'}, 'R_n26': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:27] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:56:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:56:27] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:56:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:27] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:56:27] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:27] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 86.6497°

[18:56:30] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:30] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:30] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 178.4503
[18:56:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:56:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , O)'}, 'R_n26': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:56:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , O)'}, 'R_n26': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , O)'}, 'R_n26': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , O)'}, 'R_n26': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , O)'}, 'R_n26': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:32] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:56:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , O)'}, 'R_n26': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]
[18:56:32] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:56:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:32] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:56:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:32] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:56:33] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:56:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:56:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:33] [Controller][DEBUG] -> Control policy EXPLORING
[18:56:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:33] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:56:33] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]
[18:56:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n26, Type: Type.OBSERVED, Action: 180.0, Parent: L_n25, Left: None, Mid: None, Right: None ]

[18:56:33] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:56:33] [Controller][INFO] -> ADDED LEFT
[18:56:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , O)'}, 'L_n27': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:33] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]]
[18:56:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:56:33] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>]

[18:56:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:33] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:56:33] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:33] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 94.8742°

[18:56:37] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:37] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:37] [Controller][DEBUG] ->  >> interval: [-88.0, -92.0], curr_g: -88.6812
[18:56:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:56:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:38] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:38] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , O)'}, 'L_n27': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:38] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:56:38] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:38] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:38] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , O)'}, 'L_n27': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:38] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:38] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , O)'}, 'L_n27': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , O)'}, 'L_n27': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]
[18:56:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , O)'}, 'L_n27': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]

[18:56:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:39] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]
[18:56:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , O)'}, 'L_n27': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]
[18:56:39] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]
[18:56:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:39] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]

[18:56:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:39] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:56:40] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:56:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:56:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:40] [Controller][DEBUG] -> Control policy EXPLORING
[18:56:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:40] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:56:40] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:56:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: -90.0, Parent: R_n26, Left: None, Mid: None, Right: None ]

[18:56:40] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:56:40] [Controller][INFO] -> ADDED RIGHT
[18:56:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:40] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:56:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:56:40] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:56:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:40] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:56:40] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:40] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.5216°

[18:56:44] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:44] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:44] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: 179.3281
[18:56:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:56:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:56:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:56:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:56:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:45] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:45] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:45][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:45] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:45] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:46] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:46] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:46] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:46] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:46] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:46] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:46] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:56:46] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:46] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:56:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:46] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:56:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:56:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:56:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:46] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:56:46] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:56:46] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , O)'}, 'R_n28': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[18:56:46] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:56:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:56:46] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:56:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:46] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:56:46] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:56:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:56:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:56:47] [Controller][DEBUG] -> Control policy EXPLORING
[18:56:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:47] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:56:47] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:56:47] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n28, Type: Type.OBSERVED, Action: 180.0, Parent: L_n27, Left: None, Mid: None, Right: None ]

[18:56:47] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:56:47] [Controller][INFO] -> ADDED RIGHT
[18:56:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:47][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:56:47] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:56:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:56:47] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:56:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:56:47] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:56:47] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:47] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.8183°

[18:56:51] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:51] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:51] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.4871
[18:56:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:56:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:56:51] [Controller][WARNING] -> ALERT: WALL ON THE LEFT. VALUE: 0.12167549878358841
[18:56:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:56:51] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:56:51] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:56:51] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:56:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:56:51][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:56:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:56:51] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:56:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:56:51] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:56:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:56:51] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:51] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.4594°

[18:56:55] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:55] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:55] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.8833

[18:56:55] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:56:55] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 90.9093°

[18:56:59] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:56:59] [Controller][INFO] ->  ~~ perfect ~~ 
[18:56:59] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.8265
[18:57:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:57:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:57:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:3] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:3] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:57:3] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.1466919630765915
[18:57:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:3] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:57:3] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:57:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:3][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:3] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:57:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:57:3] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:57:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:57:3] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:3] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.0991°

[18:57:7] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:7] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:7] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: 0.1475

[18:57:7] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:7] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.8463°

[18:57:10] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:10] [Controller][ERROR] ->  !! bad orientation !! 
[18:57:10] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 92.0235

[18:57:10] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:57:10] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:10] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.0883°
[18:57:10] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:57:10] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.0883, 92.0883, 90.0]

[18:57:10] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:10] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:10] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.3324
[18:57:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:57:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:14] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:14][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:14] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:14] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:16] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:57:16] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:57:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , O)'}, 'R_n29': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]
[18:57:16] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:57:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:16] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:57:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:16] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:57:16] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:57:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:57:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:17] [Controller][DEBUG] -> Control policy EXPLORING
[18:57:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:17] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:57:17] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]
[18:57:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: R_n28, Left: None, Mid: None, Right: None ]

[18:57:17] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:57:17] [Controller][INFO] -> ADDED RIGHT
[18:57:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:17] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:57:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:57:17] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]

[18:57:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:17] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:57:17] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:17] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.4259°

[18:57:20] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:20] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:20] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -1.1328
[18:57:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:57:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:57:21] [Controller][WARNING] -> ALERT: WALL ON THE LEFT. VALUE: 0.14650921523571014
[18:57:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:21] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:57:21] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:57:21] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:21] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:57:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:57:21] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:57:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:57:21] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:21] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.2452°

[18:57:25] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:25] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:25] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 91.0886

[18:57:25] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:25] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 91.3141°

[18:57:28] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:28] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:28] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.981
[18:57:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:57:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:57:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:57:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:57:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:31] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:31] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:57:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:31][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:31] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:31] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:57:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:31] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:57:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:57:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:57:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:57:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:32] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:57:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:32] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:57:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:32] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]
[18:57:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:32][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , O)'}, 'R_n30': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]
[18:57:32] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:57:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:32] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]

[18:57:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:32] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:57:33] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:57:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:57:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:33] [Controller][DEBUG] -> Control policy EXPLORING
[18:57:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:33] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:57:33] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:57:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n30, Type: Type.OBSERVED, Action: 0.0, Parent: R_n29, Left: None, Mid: None, Right: None ]

[18:57:33] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:57:33] [Controller][INFO] -> ADDED LEFT
[18:57:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:33] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:57:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:57:33] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:57:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:33] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:57:33] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:33] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.958°

[18:57:37] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:37] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:37] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.8249
[18:57:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:57:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:38] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:38] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:38] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:57:38] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:38] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:38] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:38] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:38] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:38] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:38] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:38][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:38] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:38] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:38] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:39] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:39] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:57:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:39][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:39] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:57:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:39] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:57:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:40] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:57:40] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:57:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , O)'}, 'L_n31': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]
[18:57:40] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:57:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:40] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:57:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:40] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:57:40] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:57:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:57:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:41] [Controller][DEBUG] -> Control policy EXPLORING
[18:57:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:41] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:57:41] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:57:41] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n31, Type: Type.OBSERVED, Action: 90.0, Parent: R_n30, Left: None, Mid: None, Right: None ]

[18:57:41] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:57:41] [Controller][INFO] -> ADDED LEFT
[18:57:41] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:41][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:41] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:57:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:57:41] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:57:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:41] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:57:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:41] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.6299°

[18:57:45] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:45] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:45] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.6493
[18:57:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:57:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:57:46] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.12075717747211456
[18:57:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:46] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:57:46] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:57:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:46][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:46] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:57:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)
[18:57:46] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:57:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:57:46] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:46] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 91.2852°

[18:57:49] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:49] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:49] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 88.7574

[18:57:49] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:49] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.6055°

[18:57:53] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:57:53] [Controller][INFO] ->  ~~ perfect ~~ 
[18:57:53] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.3753
[18:57:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.JUNCTION)

[18:57:56] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:57:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:57:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:57:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:57:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:57:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:57:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:57:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:57] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:57:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:57][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:57] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:57:57] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:57:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:57:57] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:58] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:58] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:57:58] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:58] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:57:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:58] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:57:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:57:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:57:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:58] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:57:58] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:57:58] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:58][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , O)'}, 'L_n32': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]
[18:57:58] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:57:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:57:58] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:57:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:58] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:57:58] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:57:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:57:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:57:59] [Controller][DEBUG] -> Control policy EXPLORING
[18:57:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:57:59] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:57:59] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:57:59] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n32, Type: Type.OBSERVED, Action: 180.0, Parent: L_n31, Left: None, Mid: None, Right: None ]

[18:57:59] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:57:59] [Controller][INFO] -> ADDED RIGHT
[18:57:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:57:59][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:57:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:57:59] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:57:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:57:59] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:57:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:57:59] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:57:59] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:57:59] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.5983°

[18:58:3] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:3] [Controller][ERROR] ->  !! bad orientation !! 
[18:58:3] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 87.8412

[18:58:3] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:58:3] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:58:3] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.1523°
[18:58:3] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[18:58:3] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.1523, 87.8477, 90.0]

[18:58:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:4] [Controller][INFO] ->  ~~ perfect ~~ 
[18:58:4] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 89.6608
[18:58:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:58:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:4] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:4] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:4][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:4] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:58:4] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:5] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:5] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:5] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 

[18:58:5] [Controller][WARNING] -> ALERT: WALL ON THE RIGHT. VALUE: 0.1387816071510315
[18:58:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:5] [Controller][INFO] -> --ACTIONS: [[<Command.BALANCE: 4>, None]]
[18:58:5] [Controller][INFO] -> --ACTION: [<Command.BALANCE: 4>, None]
[18:58:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:5][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:5] [Controller][INFO] -> --Available actions: [[<Command.BALANCE: 4>, None]]
[18:58:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)
[18:58:5] [Controller][DEBUG] -> --Performing action: [<Command.BALANCE: 4>, None]

[18:58:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 

[18:58:5] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:58:5] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.5951°

[18:58:8] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:8] [Controller][INFO] ->  ~~ perfect ~~ 
[18:58:8] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.7665

[18:58:9] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:58:9] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.2531°

[18:58:12] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:12] [Controller][INFO] ->  ~~ perfect ~~ 
[18:58:12] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 90.3234
[18:58:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.BALANCING, Position.CORRIDOR)

[18:58:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:15] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:15] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:15][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:15] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:15] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:16] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:16] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:16] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:16] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:16] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:58:16] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:58:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:16][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , O)'}, 'R_n33': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]
[18:58:16] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:58:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:16] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:58:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:16] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:58:16] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:58:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:58:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:17] [Controller][DEBUG] -> Control policy EXPLORING
[18:58:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:17] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:58:17] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]
[18:58:17] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n33, Type: Type.OBSERVED, Action: 90.0, Parent: L_n32, Left: None, Mid: None, Right: None ]

[18:58:17] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:58:17] [Controller][INFO] -> ADDED RIGHT
[18:58:17] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:17][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , O)'}, 'R_n34': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:17] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>]]
[18:58:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:58:17] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.EAST: 0.0>]

[18:58:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:17] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:58:17] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:58:17] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.6066°

[18:58:20] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:20] [Controller][INFO] ->  ~~ perfect ~~ 
[18:58:20] [Controller][DEBUG] ->  >> interval: [2.0, -2.0], curr_g: -0.8494
[18:58:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:58:20] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:20] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:20] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:58:20] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:20][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , O)'}, 'R_n34': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:20] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:58:20] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:58:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:20] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:58:21] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , O)'}, 'R_n34': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:58:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:58:21] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , O)'}, 'R_n34': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:58:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:58:21] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , O)'}, 'R_n34': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:58:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:21] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.EAST: 0.0>]
[18:58:21] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , O)'}, 'R_n34': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:21] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.EAST: 0.0>]

[18:58:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:21] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:21] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]
[18:58:21] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:21][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , O)'}, 'R_n34': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]
[18:58:21] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]
[18:58:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:21] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]

[18:58:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:21] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:58:22] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:58:22] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:58:22] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:22] [Controller][DEBUG] -> Control policy EXPLORING
[18:58:22] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:22] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:58:22] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:58:22] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n34, Type: Type.OBSERVED, Action: 0.0, Parent: R_n33, Left: None, Mid: None, Right: None ]

[18:58:22] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:58:22] [Controller][INFO] -> ADDED LEFT
[18:58:22] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:22][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:22] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:22] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:58:22] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:58:22] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:58:22] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:22] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:58:22] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:58:22] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.0932°

[18:58:26] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:26] [Controller][INFO] ->  ~~ perfect ~~ 
[18:58:26] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 91.5613
[18:58:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:58:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:26] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:26] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:26] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:26][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:26] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:58:26] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:26] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:27] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:27] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:27][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:27] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:27] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:28] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:58:28] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]
[18:58:28] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:28] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:28][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , O)'}, 'L_n35': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]
[18:58:28] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]
[18:58:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:28] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]

[18:58:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:28] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:58:28] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:58:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:58:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:29] [Controller][DEBUG] -> Control policy EXPLORING
[18:58:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:29] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:58:29] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]
[18:58:29] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n35, Type: Type.OBSERVED, Action: 90.0, Parent: R_n34, Left: None, Mid: None, Right: None ]

[18:58:29] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:58:29] [Controller][INFO] -> ADDED LEFT
[18:58:29] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:29][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , O)'}, 'L_n36': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:29] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.WEST: 180.0>]]
[18:58:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:58:29] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.WEST: 180.0>]

[18:58:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:29] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:58:29] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:58:29] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.9658°

[18:58:32] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:32] [Controller][INFO] ->  ~~ perfect ~~ 
[18:58:32] [Controller][DEBUG] ->  >> interval: [-178, 178], curr_g: -178.8456
[18:58:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:58:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:58:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , O)'}, 'L_n36': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:58:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:58:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:58:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , O)'}, 'L_n36': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:58:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:33] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:33] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:58:33] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:33][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , O)'}, 'L_n36': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:33] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:33] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:58:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:58:34] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , O)'}, 'L_n36': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:58:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:34] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:34] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.WEST: 180.0>]
[18:58:34] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , O)'}, 'L_n36': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:34] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.WEST: 180.0>]]
[18:58:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:34] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.WEST: 180.0>]

[18:58:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:34] [Controller][INFO] -> --ACTIONS: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:58:34] [Controller][INFO] -> --ACTION: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]
[18:58:34] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:34][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , O)'}, 'L_n36': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]
[18:58:34] [Controller][INFO] -> --Available actions: [[<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]
[18:58:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:34] [Controller][DEBUG] -> --Performing action: [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]

[18:58:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:34] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:58:34] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:58:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:58:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:35] [Controller][DEBUG] -> Control policy EXPLORING
[18:58:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:35] [Controller][INFO] -> --ACTIONS: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:58:35] [Controller][INFO] -> --ACTION: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]
[18:58:35] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n36, Type: Type.OBSERVED, Action: 180.0, Parent: L_n35, Left: None, Mid: None, Right: None ]

[18:58:35] [Controller][DEBUG] -> *** UPDATING TREE (MODE: EXPLORING) ***
[18:58:35] [Controller][INFO] -> ADDED RIGHT
[18:58:35] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:35][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'R_n37': '(R , N , O)'}, 'R_n37': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:35] [Controller][INFO] -> --Available actions: [[<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]
[18:58:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:58:35] [Controller][DEBUG] -> --Performing action: [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]

[18:58:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:35] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:58:35] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:58:35] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 89.8487°

[18:58:39] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:58:39] [Controller][INFO] ->  ~~ perfect ~~ 
[18:58:39] [Controller][DEBUG] ->  >> interval: [92.0, 88.0], curr_g: 89.1877
[18:58:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:58:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'R_n37': '(R , N , O)'}, 'R_n37': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:58:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'R_n37': '(R , N , O)'}, 'R_n37': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'R_n37': '(R , N , O)'}, 'R_n37': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:58:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:58:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:58:40] [Controller][INFO] -> --ACTIONS: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][INFO] -> --ACTION: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]
[18:58:40] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:58:40][NOHEADER] -> {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'R_n37': '(R , N , O)'}, 'R_n37': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n37, Type: Type.OBSERVED, Action: 90.0, Parent: L_n36, Left: None, Mid: None, Right: None ]
[18:58:40] [Controller][INFO] -> --Available actions: [[<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:58:40] [Controller][DEBUG] -> --Performing action: [<Command.RUN: 1>, <Compass.NORTH: 90.0>]

[18:58:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:58:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:58:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:58:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[18:58:40] [Controller][INFO] ->  >> MAZE SOLVED << 

[18:58:40] [Controller][INFO] -> Tree: {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'FINAL': '(R , N , F)'}, 'FINAL': {}, 'R_n24': {}, 'R_n19': {}}

[18:58:40] [Controller][INFO] -> Trajectory: [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.SOUTH: -90.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>]

[18:58:40] [Controller][INFO] -> Performed commands: [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.BALANCE: 4>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]

[18:58:40] [Controller][INFO] -> Performed commands and actions: [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]
