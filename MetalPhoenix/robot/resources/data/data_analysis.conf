[Maze_1_SOEN_1]
maze_solved = True
execution_time_sec = 333.165655374527
intelligence = low
auto_balancing = off
priority_list = SUD, OVEST, EST, NORD
number_of_nodes = 37
number_of_dead_end = 8
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , O , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , O , D)'}, 'R_n6': {'M_n8': '(M , O , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , O , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , O , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , O , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , O , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , O , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , O , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , O , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , O , E)'}, 'L_n36': {'R_n37': '(R , N , F)'}, 'R_n37': {}, 'R_n24': {}, 'R_n19': {}}
performed_commands = [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, None, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, None, <Compass.SUD: -90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.SUD: -90.0>, None, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>]
trajectory = [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.SUD: -90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.SUD: -90.0>, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.SUD: -90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>, <Compass.EST: 0.0>, <Compass.NORD: 90.0>, <Compass.OVEST: 180.0>, <Compass.NORD: 90.0>]

[Maze_1_NWES_0]
maze_solved = True
execution_time_sec = 29.083
intelligence = low
auto_balancing = off
priority_list = NORTH, WEST, EAST, SOUTH
number_of_nodes = 5
number_of_dead_end = 0
tree_dict = {'root': {'M_n3': '(M , W , O)', 'R_n2': '(R , N , E)'}, 'M_n3': {}, 'R_n2': {'L_n4': '(L , W , E)'}, 'L_n4': {'FINAL': '(R , N , F)'}, 'FINAL': {}}
performed_commands = [<Compass.WEST: 180.0>, None, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, None, <Compass.NORTH: 90.0>]
trajectory = [<Compass.WEST: 180.0>, None, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, None, <Compass.NORTH: 90.0>]

[Maze_1_SWEN_1]
maze_solved = True
execution_time_sec = 625.9155
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 37
number_of_dead_end = 8
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'FINAL': '(R , N , F)'}, 'FINAL': {}, 'R_n24': {}, 'R_n19': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.SOUTH: -90.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.BALANCE: 4>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_0]
maze_solved = False
execution_time_sec = 145.2508
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 16
number_of_dead_end = 8
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {'M_n12': '(M , N , D)'}, 'M_n12': {}, 'R_n7': {}, 'R_n4': {'L_n13': '(L , W , E)'}, 'L_n13': {'L_n14': '(L , S , E)'}, 'L_n14': {'R_n15': '(R , W , E)'}, 'R_n15': {'R_n16': '(R , N , O)'}, 'R_n16': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_2]
maze_solved = False
execution_time_sec = 57.2436
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 12
number_of_dead_end = 1
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , E)'}, 'L_n11': {'M_n12': '(M , N , D)'}, 'M_n12': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]

[Maze_1_SWEN_3]
maze_solved = False
execution_time_sec = 45.9342
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 12
number_of_dead_end = 1
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , E)'}, 'L_n11': {'M_n12': '(M , N , D)'}, 'M_n12': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.RUN: 1>, <Command.STOP: 0>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None]]

[Maze_1_SWEN_4]
maze_solved = False
execution_time_sec = 22.4547
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 7
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'R_n7': '(R , N , O)'}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>]]

[Maze_1_SWEN_5]
maze_solved = False
execution_time_sec = 2.3437
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 3
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}
trajectory = [<Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_6]
maze_solved = False
execution_time_sec = 54.051
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 5
number_of_dead_end = 4
tree_dict = {'root': {'M_n2': '(M , W , D)'}, 'M_n2': {'R_n3': '(R , N , D)'}, 'R_n3': {'R_n4': '(R , E , D)'}, 'R_n4': {'L_n5': '(L , N , D)'}, 'L_n5': {}}
trajectory = [<Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>]]

[Maze_1_SWEN_7]
maze_solved = False
execution_time_sec = 32.458
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 5
number_of_dead_end = 1
tree_dict = {'root': {'M_n2': '(M , W , E)'}, 'M_n2': {'R_n3': '(R , N , E)'}, 'R_n3': {'R_n4': '(R , E , E)'}, 'R_n4': {'L_n5': '(L , N , D)'}, 'L_n5': {}}
trajectory = [<Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>]]

[Maze_1_SWEN_8]
maze_solved = False
execution_time_sec = 2.7722
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 2
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , W , O)'}, 'M_n2': {}}
trajectory = [<Compass.WEST: 180.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]

[Maze_1_SWEN_9]
maze_solved = False
execution_time_sec = 30.9382
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 5
number_of_dead_end = 1
tree_dict = {'root': {'M_n2': '(M , W , E)'}, 'M_n2': {'R_n3': '(R , N , E)'}, 'R_n3': {'R_n4': '(R , E , E)'}, 'R_n4': {'L_n5': '(L , N , D)'}, 'L_n5': {}}
trajectory = [<Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]

[Maze_1_SWEN_10]
maze_solved = False
execution_time_sec = 30.8543
intelligence = low
auto_balancing = off
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 5
number_of_dead_end = 1
tree_dict = {'root': {'M_n2': '(M , W , E)'}, 'M_n2': {'R_n3': '(R , N , E)'}, 'R_n3': {'R_n4': '(R , E , E)'}, 'R_n4': {'L_n5': '(L , N , D)'}, 'L_n5': {}}
trajectory = [<Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>]]

