[Maze_1_SWEN_1]
maze_solved = True
execution_time_sec = 625.9155
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 37
number_of_dead_end = 8
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'FINAL': '(R , N , F)'}, 'FINAL': {}, 'R_n24': {}, 'R_n19': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.SOUTH: -90.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.BALANCE: 4>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_NWES_0]
maze_solved = True
execution_time_sec = 334.5415
speed = 8.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = NORTH, WEST, EAST, SOUTH
number_of_nodes = 34
number_of_dead_end = 4
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , O)', 'R_n4': '(R , N , E)'}, 'L_n5': {}, 'R_n4': {'L_n6': '(L , W , E)'}, 'L_n6': {'L_n7': '(L , S , E)'}, 'L_n7': {'R_n8': '(R , W , E)'}, 'R_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , E)'}, 'L_n11': {'R_n12': '(R , E , E)'}, 'R_n12': {'L_n14': '(L , N , E)', 'R_n13': '(R , S , O)'}, 'L_n14': {'L_n15': '(L , W , E)'}, 'L_n15': {'L_n16': '(L , S , E)'}, 'L_n16': {'R_n17': '(R , W , E)'}, 'R_n17': {'L_n19': '(L , S , E)', 'R_n18': '(R , N , D)'}, 'L_n19': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n24': '(L , S , E)'}, 'L_n24': {'R_n25': '(R , W , E)'}, 'R_n25': {'R_n26': '(R , N , E)'}, 'R_n26': {'R_n27': '(R , E , E)'}, 'R_n27': {'L_n28': '(L , N , E)'}, 'L_n28': {'L_n29': '(L , W , E)'}, 'L_n29': {'R_n30': '(R , N , E)'}, 'R_n30': {'R_n31': '(R , E , E)'}, 'R_n31': {'L_n32': '(L , N , E)'}, 'L_n32': {'L_n33': '(L , W , E)'}, 'L_n33': {'FINAL': '(R , N , F)'}, 'FINAL': {}, 'R_n18': {'R_n20': '(R , E , D)'}, 'R_n20': {'L_n21': '(L , N , D)'}, 'L_n21': {'L_n22': '(L , W , D)'}, 'L_n22': {}, 'R_n13': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.EAST: 0.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_0]
maze_solved = False
execution_time_sec = 119.2564
speed = 8.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 11
number_of_dead_end = 4
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_2]
maze_solved = False
execution_time_sec = 25.9254
speed = 8.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 6
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]

[Maze_1_SWEN_3]
maze_solved = False
execution_time_sec = 29.3815
speed = 8.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 6
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]

[Maze_1_SWEN_4]
maze_solved = False
execution_time_sec = 69.8026
speed = 5.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 10
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , O)'}, 'R_n10': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>]]

[Maze_1_SWEN_5]
maze_solved = False
execution_time_sec = 40.5183
speed = 5.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 6
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , O)'}, 'R_n6': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]

[Maze_1_SWEN_6]
maze_solved = False
execution_time_sec = 77.4995
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 11
number_of_dead_end = 1
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , E)'}, 'R_n9': {'R_n10': '(R , E , E)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None]]

[Maze_1_SWEN_7]
maze_solved = False
execution_time_sec = 9.9214
speed = 5.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 3
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , O)'}, 'L_n3': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]

[Maze_1_SWEN_8]
maze_solved = False
execution_time_sec = 38.4484
speed = 5.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 8
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , O)', 'R_n7': '(R , N , O)'}, 'M_n8': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>]]

[Maze_1_SWEN_9]
maze_solved = False
execution_time_sec = 2.1545
speed = 5.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 1
number_of_dead_end = 0
tree_dict = {'root': {}}
trajectory = []
performed_commands = []
performed_com_actions = []

[Maze_1_SWEN_10]
maze_solved = False
execution_time_sec = 65.4367
speed = 5.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 9
number_of_dead_end = 0
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , E)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , O)'}, 'R_n9': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_11]
maze_solved = False
execution_time_sec = 140.263
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 11
number_of_dead_end = 4
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.BALANCE: 4>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_12]
maze_solved = False
execution_time_sec = 92.7913
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 11
number_of_dead_end = 4
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , E)', 'R_n4': '(R , N , O)'}, 'L_n5': {'R_n6': '(R , W , E)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , O)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]

[Maze_1_SWEN_13]
maze_solved = False
execution_time_sec = 493.2155
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 40
number_of_dead_end = 8
tree_dict = {'root': {'M_n2': '(M , N , E)'}, 'M_n2': {'L_n3': '(L , W , E)'}, 'L_n3': {'L_n5': '(L , S , D)', 'R_n4': '(R , N , E)'}, 'L_n5': {'R_n6': '(R , W , D)'}, 'R_n6': {'M_n8': '(M , W , D)', 'R_n7': '(R , N , D)'}, 'M_n8': {'R_n9': '(R , N , D)'}, 'R_n9': {'R_n10': '(R , E , D)'}, 'R_n10': {'L_n11': '(L , N , D)'}, 'L_n11': {}, 'R_n7': {}, 'R_n4': {'L_n12': '(L , W , E)'}, 'L_n12': {'L_n13': '(L , S , E)'}, 'L_n13': {'R_n14': '(R , W , E)'}, 'R_n14': {'R_n15': '(R , N , E)'}, 'R_n15': {'R_n16': '(R , E , E)'}, 'R_n16': {'L_n17': '(L , N , E)'}, 'L_n17': {'R_n18': '(R , E , E)'}, 'R_n18': {'L_n20': '(L , N , E)', 'R_n19': '(R , S , D)'}, 'L_n20': {'L_n21': '(L , W , E)'}, 'L_n21': {'L_n22': '(L , S , E)'}, 'L_n22': {'R_n23': '(R , W , E)'}, 'R_n23': {'L_n25': '(L , S , E)', 'R_n24': '(R , N , O)'}, 'L_n25': {'R_n26': '(R , W , E)'}, 'R_n26': {'L_n27': '(L , S , E)'}, 'L_n27': {'R_n28': '(R , W , E)'}, 'R_n28': {'R_n29': '(R , N , E)'}, 'R_n29': {'R_n30': '(R , E , E)'}, 'R_n30': {'L_n31': '(L , N , E)'}, 'L_n31': {'L_n32': '(L , W , E)'}, 'L_n32': {'R_n33': '(R , N , E)'}, 'R_n33': {'R_n34': '(R , E , E)'}, 'R_n34': {'L_n35': '(L , N , E)'}, 'L_n35': {'L_n36': '(L , W , E)'}, 'L_n36': {'R_n37': '(R , N , E)'}, 'R_n37': {'L_n39': '(L , W , O)', 'M_n40': '(M , N , O)', 'R_n38': '(R , E , O)'}, 'L_n39': {}, 'M_n40': {}, 'R_n38': {}, 'R_n24': {}, 'R_n19': {}}
trajectory = [<Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.SOUTH: -90.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.SOUTH: -90.0>, <Compass.NORTH: 90.0>, <Compass.EAST: 0.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.EAST: 0.0>, <Compass.SOUTH: -90.0>, <Compass.NORTH: 90.0>, <Compass.WEST: 180.0>, <Compass.NORTH: 90.0>, <Compass.SOUTH: -90.0>, <Compass.WEST: 180.0>, <Compass.EAST: 0.0>, <Compass.SOUTH: -90.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.BALANCE: 4>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.STOP: 0>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>, <Command.ROTATE: 2>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>, <Command.RUN: 1>]
performed_com_actions = [[<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.SOUTH: -90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.WEST: 180.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.BALANCE: 4>, None], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.STOP: 0>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.NORTH: 90.0>], [<Command.ROTATE: 2>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.WEST: 180.0>], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.RUN: 1>, <Compass.SOUTH: -90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_SWEN_14]
maze_solved = False
execution_time_sec = 7.8873
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = SOUTH, WEST, EAST, NORTH
number_of_nodes = 4
number_of_dead_end = 0
tree_dict = {'root': {'L_n2': '(L , N , O)', 'M_n3': '(M , E , E)'}, 'L_n2': {}, 'M_n3': {'R_n4': '(R , S , O)'}, 'R_n4': {}}
trajectory = [<Compass.EAST: 0.0>]
performed_commands = [<Command.ROTATE: 2>, <Command.START: -1>, <Command.RUN: 1>, <Command.GO_TO_JUNCTION: 3>]
performed_com_actions = [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.START: -1>, None], [<Command.RUN: 1>, <Compass.EAST: 0.0>], [<Command.GO_TO_JUNCTION: 3>, <Compass.EAST: 0.0>]]

[Maze_1_NWES_1]
maze_solved = True
execution_time_sec = 11.213
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = NORTH, WEST, EAST, SOUTH
number_of_nodes = 3
number_of_dead_end = 0
tree_dict = {'root': {'FINAL': '(L , N , F)', 'M_n3': '(M , E , O)'}, 'FINAL': {}, 'M_n3': {}}
trajectory = [<Compass.EAST: 0.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.ROTATE: 2>, <Command.START: -1>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.START: -1>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_NWES_2]
maze_solved = True
execution_time_sec = 11.8521
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = NORTH, WEST, EAST, SOUTH
number_of_nodes = 3
number_of_dead_end = 0
tree_dict = {'root': {'FINAL': '(L , N , F)', 'M_n3': '(M , E , O)'}, 'FINAL': {}, 'M_n3': {}}
trajectory = [<Compass.EAST: 0.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.ROTATE: 2>, <Command.START: -1>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.START: -1>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_NWES_3]
maze_solved = False
execution_time_sec = 9.4981
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = NORTH, WEST, EAST, SOUTH
number_of_nodes = 3
number_of_dead_end = 0
tree_dict = {'root': {'L_n2': '(L , N , O)', 'M_n3': '(M , E , O)'}, 'L_n2': {}, 'M_n3': {}}
trajectory = [<Compass.EAST: 0.0>]
performed_commands = [<Command.ROTATE: 2>, <Command.START: -1>]
performed_com_actions = [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.START: -1>, None]]

[Maze_1_NWES_4]
maze_solved = True
execution_time_sec = 11.784
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = NORTH, WEST, EAST, SOUTH
number_of_nodes = 3
number_of_dead_end = 0
tree_dict = {'root': {'FINAL': '(L , N , F)', 'M_n3': '(M , E , O)'}, 'FINAL': {}, 'M_n3': {}}
trajectory = [<Compass.EAST: 0.0>, <Compass.NORTH: 90.0>]
performed_commands = [<Command.ROTATE: 2>, <Command.START: -1>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.START: -1>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

[Maze_1_NWES_5]
maze_solved = True
execution_time_sec = 11.8635
speed = 10.0
rotation_speed = 2.0
safe_distance = 0.2
safe_side_distance = 0.12
max_rotations_attempts = 20
intelligence = low
auto_balancing = on
priority_list = NORTH, WEST, EAST, SOUTH
number_of_nodes = 3
number_of_dead_end = 0
tree_dict = {'root': {'FINAL': '(L , N , F)', 'M_n3': '(M , E , O)'}, 'FINAL': {}, 'M_n3': {}}
trajectory = [<Compass.NORTH: 90.0>]
performed_commands = [<Command.ROTATE: 2>, <Command.START: -1>, <Command.ROTATE: 2>, <Command.RUN: 1>]
performed_com_actions = [[<Command.ROTATE: 2>, <Compass.EAST: 0.0>], [<Command.START: -1>, None], [<Command.ROTATE: 2>, <Compass.NORTH: 90.0>], [<Command.RUN: 1>, <Compass.NORTH: 90.0>]]

