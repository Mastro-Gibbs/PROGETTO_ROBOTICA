[10:24:6] [PhysicalBody] -> Coppelia connection started!


[10:24:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:7] [Controller] -> --MODE: Mode.EXPLORING
[10:24:7] [Controller] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[10:24:7] [Controller] -> --ACTIONS: [<Command.START: -1>]
[10:24:7] [Controller] -> --CURRENT TREE: {'root': {}}
[10:24:7] [Controller] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[10:24:7] [Controller] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)
[10:24:7] [Controller] -> --Available actions: [<Command.START: -1>]
[10:24:7] [Controller] -> --Performing action: Command.START

[10:24:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:7] [Controller] ->  ** COMMAND START ** 
[10:24:7] [Controller] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)

[10:24:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:8] [Controller] -> --MODE: Mode.EXPLORING
[10:24:8] [Controller] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[10:24:8] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:24:8] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:8] [Controller] -> ADDED MID

[10:24:8] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}
[10:24:8] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:8] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[10:24:8] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:24:8] [Controller] -> --Performing action: 90.0

[10:24:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:8] [Controller] ->  ** COMMAND RUN ** 
[10:24:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:8] [Controller] -> --MODE: Mode.EXPLORING
[10:24:8] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:8] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}
[10:24:8] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:8] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:8] [Controller] -> --Performing action: Command.RUN

[10:24:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:8] [Controller] ->  ** COMMAND RUN ** 
[10:24:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:8] [Controller] -> --MODE: Mode.EXPLORING
[10:24:8] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:8] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}
[10:24:8] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:8] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:8] [Controller] -> --Performing action: Command.RUN

[10:24:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:8] [Controller] ->  ** COMMAND RUN ** 
[10:24:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:9] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:9] [Controller] -> --MODE: Mode.EXPLORING
[10:24:9] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:9] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:9] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}
[10:24:9] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:9] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:9] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:9] [Controller] -> --Performing action: Command.RUN

[10:24:9] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:9] [Controller] ->  ** COMMAND RUN ** 
[10:24:9] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:9] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:9] [Controller] -> --MODE: Mode.EXPLORING
[10:24:9] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:9] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:9] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}
[10:24:9] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:9] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:9] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:9] [Controller] -> --Performing action: Command.RUN

[10:24:9] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:9] [Controller] ->  ** COMMAND RUN ** 
[10:24:9] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:9] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:9] [Controller] -> --MODE: Mode.EXPLORING
[10:24:9] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:9] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:9] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}
[10:24:9] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:9] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:9] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:9] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:9] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:9] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:10] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:10] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:10] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:10] [Controller] -> --MODE: Mode.EXPLORING
[10:24:10] [Controller] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[10:24:10] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:24:10] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:10] [Controller] -> ADDED LEFT

[10:24:10] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:10] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}
[10:24:10] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:10] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:10] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:24:10] [Controller] -> --Performing action: 180.0

[10:24:10] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:10] [Controller] ->  ** COMMAND ROTATE ** 

[10:24:10] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:10] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 91.0007Â°

[10:24:13] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:13] [Controller] ->  ~~ perfect ~~ 
[10:24:13] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -178.4259
[10:24:13] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:24:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:13] [Controller] -> --MODE: Mode.EXPLORING
[10:24:13] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:13] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:24:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}
[10:24:13] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:13] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:24:13] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:24:13] [Controller] -> --Performing action: 180.0

[10:24:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:13] [Controller] ->  ** COMMAND RUN ** 
[10:24:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:13] [Controller] -> --MODE: Mode.EXPLORING
[10:24:13] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}
[10:24:13] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:13] [Controller] -> --Performing action: Command.RUN

[10:24:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:13] [Controller] ->  ** COMMAND RUN ** 
[10:24:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:14] [Controller] -> --MODE: Mode.EXPLORING
[10:24:14] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}
[10:24:14] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:14] [Controller] -> --Performing action: Command.RUN

[10:24:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:14] [Controller] ->  ** COMMAND RUN ** 
[10:24:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:14] [Controller] -> --MODE: Mode.EXPLORING
[10:24:14] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}
[10:24:14] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:14] [Controller] -> --Performing action: Command.RUN

[10:24:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:14] [Controller] ->  ** COMMAND RUN ** 
[10:24:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:14] [Controller] -> --MODE: Mode.EXPLORING
[10:24:14] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}
[10:24:14] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:14] [Controller] -> --Performing action: Command.RUN

[10:24:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:14] [Controller] ->  ** COMMAND RUN ** 
[10:24:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:15] [Controller] -> --MODE: Mode.EXPLORING
[10:24:15] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:15] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}
[10:24:15] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:15] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:15] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:15] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:15] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:16] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:16] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:16] [Controller] -> --MODE: Mode.EXPLORING
[10:24:16] [Controller] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[10:24:16] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>, <Compass.OVEST: 180.0>]

[10:24:16] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:16] [Controller] -> ADDED LEFT
[10:24:16] [Controller] -> ADDED MID

[10:24:16] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:16] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}
[10:24:16] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:16] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:16] [Controller] -> --Available actions: [<Compass.SUD: -90.0>, <Compass.OVEST: 180.0>]
[10:24:16] [Controller] -> --Performing action: 180.0

[10:24:16] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:16] [Controller] ->  ** COMMAND RUN ** 
[10:24:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:16] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:16] [Controller] -> --MODE: Mode.EXPLORING
[10:24:16] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:16] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:16] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}
[10:24:16] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:16] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:16] [Controller] -> --Performing action: Command.RUN

[10:24:16] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:16] [Controller] ->  ** COMMAND RUN ** 
[10:24:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:16] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:16] [Controller] -> --MODE: Mode.EXPLORING
[10:24:16] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:16] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:16] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}
[10:24:16] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:16] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:16] [Controller] -> --Performing action: Command.RUN

[10:24:16] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:16] [Controller] ->  ** COMMAND RUN ** 
[10:24:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:17] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:17] [Controller] -> --MODE: Mode.EXPLORING
[10:24:17] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:17] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:17] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}
[10:24:17] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:17] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:17] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:17] [Controller] -> --Performing action: Command.RUN

[10:24:17] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:17] [Controller] ->  ** COMMAND RUN ** 
[10:24:17] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:17] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:17] [Controller] -> --MODE: Mode.EXPLORING
[10:24:17] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:17] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:17] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}
[10:24:17] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:17] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:17] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:17] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:17] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:17] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:17] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:18] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:18] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:18] [Controller] -> --MODE: Mode.EXPLORING
[10:24:18] [Controller] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[10:24:18] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>]

[10:24:18] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:18] [Controller] -> ADDED RIGHT
[10:24:18] [Controller] -> ADDED MID

[10:24:18] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:18] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:18] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:18] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:18] [Controller] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>]
[10:24:18] [Controller] -> --Performing action: 90.0

[10:24:18] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:18] [Controller] ->  ** COMMAND ROTATE ** 

[10:24:18] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:18] [Controller] ->  >> Rotate clockwise (RIGHT) of 88.8127Â°

[10:24:21] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:21] [Controller] ->  !! bad orientation !! 
[10:24:21] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 86.6424

[10:24:21] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:24:21] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:21] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 3.4892Â°
[10:24:21] [Controller] ->  --ATTEMPT: 1 / 10
[10:24:21] [Controller] -> [Degrees_to_do, curr_g, final_g] = [3.4892, 86.5108, 90.0]

[10:24:22] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:22] [Controller] ->  ~~ perfect ~~ 
[10:24:22] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 89.4626
[10:24:22] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:24:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:22] [Controller] -> --MODE: Mode.EXPLORING
[10:24:22] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:22] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:24:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:22] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:22] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:24:22] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:24:22] [Controller] -> --Performing action: 90.0

[10:24:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:22] [Controller] ->  ** COMMAND RUN ** 
[10:24:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:22] [Controller] -> --MODE: Mode.EXPLORING
[10:24:22] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:22] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:22] [Controller] -> --Performing action: Command.RUN

[10:24:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:22] [Controller] ->  ** COMMAND RUN ** 
[10:24:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:23] [Controller] -> --MODE: Mode.EXPLORING
[10:24:23] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:23] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:23] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:23] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:23] [Controller] -> --Performing action: Command.RUN

[10:24:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:23] [Controller] ->  ** COMMAND RUN ** 
[10:24:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:23] [Controller] -> --MODE: Mode.EXPLORING
[10:24:23] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:23] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:23] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:23] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:23] [Controller] -> --Performing action: Command.RUN

[10:24:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:23] [Controller] ->  ** COMMAND RUN ** 
[10:24:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:23] [Controller] -> --MODE: Mode.EXPLORING
[10:24:23] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:23] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:23] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:23] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:23] [Controller] -> --Performing action: Command.RUN

[10:24:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:23] [Controller] ->  ** COMMAND RUN ** 
[10:24:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:24] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:24] [Controller] -> --MODE: Mode.EXPLORING
[10:24:24] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:24] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:24] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:24] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:24] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:24] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:24] [Controller] -> --Performing action: Command.RUN

[10:24:24] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:24] [Controller] ->  ** COMMAND RUN ** 
[10:24:24] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:24] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:24] [Controller] -> --MODE: Mode.EXPLORING
[10:24:24] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:24] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:24] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:24] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:24] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:24] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:24] [Controller] -> --Performing action: Command.RUN

[10:24:24] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:24] [Controller] ->  ** COMMAND RUN ** 
[10:24:24] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:24] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:24] [Controller] -> --MODE: Mode.EXPLORING
[10:24:24] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:24] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:24] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:24] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:24] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:24] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:24] [Controller] -> --Performing action: Command.RUN

[10:24:24] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:24] [Controller] ->  ** COMMAND RUN ** 
[10:24:24] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:25] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:25] [Controller] -> --MODE: Mode.EXPLORING
[10:24:25] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:25] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:25] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:25] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:25] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:25] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:25] [Controller] -> --Performing action: Command.RUN

[10:24:25] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:25] [Controller] ->  ** COMMAND RUN ** 
[10:24:25] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:25] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:25] [Controller] -> --MODE: Mode.EXPLORING
[10:24:25] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:25] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:25] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:25] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:25] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:25] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:25] [Controller] -> --Performing action: Command.RUN

[10:24:25] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:25] [Controller] ->  ** COMMAND RUN ** 
[10:24:25] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:25] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:25] [Controller] -> --MODE: Mode.EXPLORING
[10:24:25] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:25] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:25] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:25] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:25] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:25] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:25] [Controller] -> --Performing action: Command.RUN

[10:24:25] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:25] [Controller] ->  ** COMMAND RUN ** 
[10:24:25] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:26] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:26] [Controller] -> --MODE: Mode.EXPLORING
[10:24:26] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:26] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:26] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}
[10:24:26] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:26] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:26] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:26] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:26] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:26] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:26] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:26] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:27] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:27] [Controller] -> --MODE: Mode.EXPLORING
[10:24:27] [Controller] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[10:24:27] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:24:27] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:27] [Controller] -> ADDED LEFT

[10:24:27] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:27] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:27] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:27] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:27] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:24:27] [Controller] -> --Performing action: 180.0

[10:24:27] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:27] [Controller] ->  ** COMMAND ROTATE ** 

[10:24:27] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:27] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 93.6696Â°

[10:24:29] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:29] [Controller] ->  !! bad orientation !! 
[10:24:29] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -175.3549

[10:24:29] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:24:29] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:29] [Controller] ->  >> Rotate clockwise (RIGHT) of 4.8508Â°
[10:24:29] [Controller] ->  --ATTEMPT: 1 / 10
[10:24:29] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-4.8508, -175.1492, 180.0]

[10:24:31] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:31] [Controller] ->  ~~ perfect ~~ 
[10:24:31] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.4265
[10:24:31] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:24:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:31] [Controller] -> --MODE: Mode.EXPLORING
[10:24:31] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:31] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:24:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:31] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:31] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:24:31] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:24:31] [Controller] -> --Performing action: 180.0

[10:24:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:31] [Controller] ->  ** COMMAND RUN ** 
[10:24:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:31] [Controller] -> --MODE: Mode.EXPLORING
[10:24:31] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:31] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:31] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:31] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:31] [Controller] -> --Performing action: Command.RUN

[10:24:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:31] [Controller] ->  ** COMMAND RUN ** 
[10:24:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:32] [Controller] -> --MODE: Mode.EXPLORING
[10:24:32] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:32] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:32] [Controller] -> --Performing action: Command.RUN

[10:24:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:32] [Controller] ->  ** COMMAND RUN ** 
[10:24:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:32] [Controller] -> --MODE: Mode.EXPLORING
[10:24:32] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:32] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:32] [Controller] -> --Performing action: Command.RUN

[10:24:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:32] [Controller] ->  ** COMMAND RUN ** 
[10:24:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:32] [Controller] -> --MODE: Mode.EXPLORING
[10:24:32] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:32] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:32] [Controller] -> --Performing action: Command.RUN

[10:24:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:32] [Controller] ->  ** COMMAND RUN ** 
[10:24:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:33] [Controller] -> --MODE: Mode.EXPLORING
[10:24:33] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:33] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:33] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:33] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:33] [Controller] -> --Performing action: Command.RUN

[10:24:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:33] [Controller] ->  ** COMMAND RUN ** 
[10:24:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:33] [Controller] -> --MODE: Mode.EXPLORING
[10:24:33] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:33] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:33] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:33] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:33] [Controller] -> --Performing action: Command.RUN

[10:24:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:33] [Controller] ->  ** COMMAND RUN ** 
[10:24:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:33] [Controller] -> --MODE: Mode.EXPLORING
[10:24:33] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:33] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:33] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:33] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:33] [Controller] -> --Performing action: Command.RUN

[10:24:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:33] [Controller] ->  ** COMMAND RUN ** 
[10:24:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:34] [Controller] -> --MODE: Mode.EXPLORING
[10:24:34] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:34] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:34] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:34] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:34] [Controller] -> --Performing action: Command.RUN

[10:24:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:34] [Controller] ->  ** COMMAND RUN ** 
[10:24:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:34] [Controller] -> --MODE: Mode.EXPLORING
[10:24:34] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:34] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:34] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:34] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:34] [Controller] -> --Performing action: Command.RUN

[10:24:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:34] [Controller] ->  ** COMMAND RUN ** 
[10:24:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:34] [Controller] -> --MODE: Mode.EXPLORING
[10:24:34] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:34] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}
[10:24:34] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:34] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:34] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:34] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:35] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:35] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:36] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:36] [Controller] -> --MODE: Mode.EXPLORING
[10:24:36] [Controller] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[10:24:36] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]

[10:24:36] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:36] [Controller] -> ADDED RIGHT
[10:24:36] [Controller] -> ADDED LEFT

[10:24:36] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:36] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}
[10:24:36] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:36] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:36] [Controller] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[10:24:36] [Controller] -> --Performing action: 90.0

[10:24:36] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:36] [Controller] ->  ** COMMAND ROTATE ** 

[10:24:36] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:36] [Controller] ->  >> Rotate clockwise (RIGHT) of 89.3212Â°

[10:24:38] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:38] [Controller] ->  !! bad orientation !! 
[10:24:38] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 86.587

[10:24:38] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:24:38] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:38] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 3.5152Â°
[10:24:38] [Controller] ->  --ATTEMPT: 1 / 10
[10:24:38] [Controller] -> [Degrees_to_do, curr_g, final_g] = [3.5152, 86.4848, 90.0]

[10:24:39] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:39] [Controller] ->  ~~ perfect ~~ 
[10:24:39] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 89.4449
[10:24:39] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:24:39] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:39] [Controller] -> --MODE: Mode.EXPLORING
[10:24:39] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:39] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:24:39] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}
[10:24:39] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:39] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:24:39] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:24:39] [Controller] -> --Performing action: 90.0

[10:24:39] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:39] [Controller] ->  ** COMMAND RUN ** 
[10:24:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:40] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:40] [Controller] -> --MODE: Mode.EXPLORING
[10:24:40] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:40] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:40] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}
[10:24:40] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:40] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:40] [Controller] -> --Performing action: Command.RUN

[10:24:40] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:40] [Controller] ->  ** COMMAND RUN ** 
[10:24:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:40] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:40] [Controller] -> --MODE: Mode.EXPLORING
[10:24:40] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:40] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:40] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}
[10:24:40] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:40] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:40] [Controller] -> --Performing action: Command.RUN

[10:24:40] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:40] [Controller] ->  ** COMMAND RUN ** 
[10:24:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:40] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:40] [Controller] -> --MODE: Mode.EXPLORING
[10:24:40] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:40] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:40] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}
[10:24:40] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:40] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:40] [Controller] -> --Performing action: Command.RUN

[10:24:40] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:40] [Controller] ->  ** COMMAND RUN ** 
[10:24:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:41] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:41] [Controller] -> --MODE: Mode.EXPLORING
[10:24:41] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:41] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:41] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}
[10:24:41] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:41] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:41] [Controller] -> --Performing action: Command.RUN

[10:24:41] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:41] [Controller] ->  ** COMMAND RUN ** 
[10:24:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:41] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:41] [Controller] -> --MODE: Mode.EXPLORING
[10:24:41] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:41] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:41] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}
[10:24:41] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:41] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:41] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:41] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:41] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:41] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:42] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:42] [Controller] -> --MODE: Mode.EXPLORING
[10:24:42] [Controller] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[10:24:42] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]

[10:24:42] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:42] [Controller] -> ADDED RIGHT
[10:24:42] [Controller] -> ADDED LEFT

[10:24:42] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:42] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:42] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:42] [Controller] -> --Available actions: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[10:24:42] [Controller] -> --Performing action: 180.0

[10:24:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:42] [Controller] ->  ** COMMAND ROTATE ** 

[10:24:42] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:42] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 91.4854Â°

[10:24:44] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:44] [Controller] ->  !! bad orientation !! 
[10:24:44] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -177.9005

[10:24:44] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:24:44] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:44] [Controller] ->  >> Rotate clockwise (RIGHT) of 2.1272Â°
[10:24:44] [Controller] ->  --ATTEMPT: 1 / 10
[10:24:44] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-2.1272, -177.8728, 180.0]

[10:24:45] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:45] [Controller] ->  ~~ perfect ~~ 
[10:24:45] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.4587
[10:24:45] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:24:45] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:45] [Controller] -> --MODE: Mode.EXPLORING
[10:24:45] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:45] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:24:45] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:45] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:45] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:24:45] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:24:45] [Controller] -> --Performing action: 180.0

[10:24:45] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:45] [Controller] ->  ** COMMAND RUN ** 
[10:24:45] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:46] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:46] [Controller] -> --MODE: Mode.EXPLORING
[10:24:46] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:46] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:46] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:46] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:46] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:46] [Controller] -> --Performing action: Command.RUN

[10:24:46] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:46] [Controller] ->  ** COMMAND RUN ** 
[10:24:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:46] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:46] [Controller] -> --MODE: Mode.EXPLORING
[10:24:46] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:46] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:46] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:46] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:46] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:46] [Controller] -> --Performing action: Command.RUN

[10:24:46] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:46] [Controller] ->  ** COMMAND RUN ** 
[10:24:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:46] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:46] [Controller] -> --MODE: Mode.EXPLORING
[10:24:46] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:46] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:46] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:46] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:46] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:46] [Controller] -> --Performing action: Command.RUN

[10:24:46] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:46] [Controller] ->  ** COMMAND RUN ** 
[10:24:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:47] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:47] [Controller] -> --MODE: Mode.EXPLORING
[10:24:47] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:47] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:47] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:47] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:47] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:47] [Controller] -> --Performing action: Command.RUN

[10:24:47] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:47] [Controller] ->  ** COMMAND RUN ** 
[10:24:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:47] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:47] [Controller] -> --MODE: Mode.EXPLORING
[10:24:47] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:47] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:47] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:47] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:47] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:47] [Controller] -> --Performing action: Command.RUN

[10:24:47] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:47] [Controller] ->  ** COMMAND RUN ** 
[10:24:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:47] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:47] [Controller] -> --MODE: Mode.EXPLORING
[10:24:47] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:47] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:47] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:47] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:47] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:47] [Controller] -> --Performing action: Command.RUN

[10:24:47] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:47] [Controller] ->  ** COMMAND RUN ** 
[10:24:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:48] [Controller] -> --MODE: Mode.EXPLORING
[10:24:48] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:48] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:48] [Controller] -> --Performing action: Command.RUN

[10:24:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:48] [Controller] ->  ** COMMAND RUN ** 
[10:24:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:48] [Controller] -> --MODE: Mode.EXPLORING
[10:24:48] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:48] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:48] [Controller] -> --Performing action: Command.RUN

[10:24:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:48] [Controller] ->  ** COMMAND RUN ** 
[10:24:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:48] [Controller] -> --MODE: Mode.EXPLORING
[10:24:48] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:48] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:48] [Controller] -> --Performing action: Command.RUN

[10:24:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:48] [Controller] ->  ** COMMAND RUN ** 
[10:24:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:49] [Controller] -> --MODE: Mode.EXPLORING
[10:24:49] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:49] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}
[10:24:49] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:49] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:49] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:49] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:49] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:49] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:50] [Controller] -> --MODE: Mode.EXPLORING
[10:24:50] [Controller] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[10:24:50] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]

[10:24:50] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:50] [Controller] -> ADDED RIGHT
[10:24:50] [Controller] -> ADDED LEFT

[10:24:50] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}
[10:24:50] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:50] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:50] [Controller] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[10:24:50] [Controller] -> --Performing action: 90.0

[10:24:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:50] [Controller] ->  ** COMMAND ROTATE ** 

[10:24:50] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:50] [Controller] ->  >> Rotate clockwise (RIGHT) of 88.1119Â°

[10:24:52] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:52] [Controller] ->  !! bad orientation !! 
[10:24:52] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 86.7948

[10:24:52] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:24:52] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:52] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 3.2653Â°
[10:24:52] [Controller] ->  --ATTEMPT: 1 / 10
[10:24:52] [Controller] -> [Degrees_to_do, curr_g, final_g] = [3.2653, 86.7347, 90.0]

[10:24:53] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:53] [Controller] ->  ~~ perfect ~~ 
[10:24:53] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 89.4196
[10:24:53] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:24:53] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:53] [Controller] -> --MODE: Mode.EXPLORING
[10:24:53] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:53] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:24:53] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}
[10:24:53] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:53] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:24:53] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:24:53] [Controller] -> --Performing action: 90.0

[10:24:53] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:53] [Controller] ->  ** COMMAND RUN ** 
[10:24:53] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:54] [Controller] -> --MODE: Mode.EXPLORING
[10:24:54] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:54] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}
[10:24:54] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:24:54] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:54] [Controller] -> --Performing action: Command.RUN

[10:24:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:54] [Controller] ->  ** COMMAND RUN ** 
[10:24:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:24:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:54] [Controller] -> --MODE: Mode.EXPLORING
[10:24:54] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:54] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}
[10:24:54] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:54] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:54] [Controller] -> --Performing action: Command.RUN

[10:24:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:54] [Controller] ->  ** COMMAND RUN ** 
[10:24:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:54] [Controller] -> --MODE: Mode.EXPLORING
[10:24:54] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:54] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:24:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}
[10:24:54] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:54] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:24:54] [Controller] -> --Performing action: Command.RUN

[10:24:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:54] [Controller] ->  ** COMMAND RUN ** 
[10:24:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:24:55] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:55] [Controller] -> --MODE: Mode.EXPLORING
[10:24:55] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:55] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:24:55] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}
[10:24:55] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:24:55] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:24:55] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:24:55] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:55] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:24:55] [Controller] ->  ** STATE SENSING ARISE ** 
[10:24:55] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:24:56] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:24:56] [Controller] -> --MODE: Mode.EXPLORING
[10:24:56] [Controller] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[10:24:56] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]

[10:24:56] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:24:56] [Controller] -> ADDED RIGHT

[10:24:56] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:24:56] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:24:56] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:24:56] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:24:56] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:24:56] [Controller] -> --Performing action: 0.0

[10:24:56] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:24:56] [Controller] ->  ** COMMAND ROTATE ** 

[10:24:56] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:56] [Controller] ->  >> Rotate clockwise (RIGHT) of 87.7289Â°

[10:24:58] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:58] [Controller] ->  !! bad orientation !! 
[10:24:58] [Controller] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -3.726

[10:24:58] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:24:58] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:24:58] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 3.7475Â°
[10:24:58] [Controller] ->  --ATTEMPT: 1 / 10
[10:24:58] [Controller] -> [Degrees_to_do, curr_g, final_g] = [3.7475, -3.7475, 0.0]

[10:24:59] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:24:59] [Controller] ->  ~~ perfect ~~ 
[10:24:59] [Controller] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -0.4797
[10:24:59] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:25:0] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:0] [Controller] -> --MODE: Mode.EXPLORING
[10:25:0] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:0] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]
[10:25:0] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:0] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:0] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:25:0] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:25:0] [Controller] -> --Performing action: 0.0

[10:25:0] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:0] [Controller] ->  ** COMMAND RUN ** 
[10:25:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:0] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:0] [Controller] -> --MODE: Mode.EXPLORING
[10:25:0] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:0] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:0] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:0] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:0] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:0] [Controller] -> --Performing action: Command.RUN

[10:25:0] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:0] [Controller] ->  ** COMMAND RUN ** 
[10:25:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:0] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:0] [Controller] -> --MODE: Mode.EXPLORING
[10:25:0] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:0] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:0] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:0] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:0] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:0] [Controller] -> --Performing action: Command.RUN

[10:25:0] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:0] [Controller] ->  ** COMMAND RUN ** 
[10:25:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:1] [Controller] -> --MODE: Mode.EXPLORING
[10:25:1] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:1] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:1] [Controller] -> --Performing action: Command.RUN

[10:25:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:1] [Controller] ->  ** COMMAND RUN ** 
[10:25:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:1] [Controller] -> --MODE: Mode.EXPLORING
[10:25:1] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:1] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:1] [Controller] -> --Performing action: Command.RUN

[10:25:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:1] [Controller] ->  ** COMMAND RUN ** 
[10:25:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:1] [Controller] -> --MODE: Mode.EXPLORING
[10:25:1] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:1] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:1] [Controller] -> --Performing action: Command.RUN

[10:25:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:1] [Controller] ->  ** COMMAND RUN ** 
[10:25:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:2] [Controller] -> --MODE: Mode.EXPLORING
[10:25:2] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:2] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:2] [Controller] -> --Performing action: Command.RUN

[10:25:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:2] [Controller] ->  ** COMMAND RUN ** 
[10:25:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:2] [Controller] -> --MODE: Mode.EXPLORING
[10:25:2] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:2] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:2] [Controller] -> --Performing action: Command.RUN

[10:25:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:2] [Controller] ->  ** COMMAND RUN ** 
[10:25:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:2] [Controller] -> --MODE: Mode.EXPLORING
[10:25:2] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:2] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:2] [Controller] -> --Performing action: Command.RUN

[10:25:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:2] [Controller] ->  ** COMMAND RUN ** 
[10:25:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:3] [Controller] -> --MODE: Mode.EXPLORING
[10:25:3] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:3] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:3] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:3] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:3] [Controller] -> --Performing action: Command.RUN

[10:25:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:3] [Controller] ->  ** COMMAND RUN ** 
[10:25:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:3] [Controller] -> --MODE: Mode.EXPLORING
[10:25:3] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:3] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:3] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:3] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:3] [Controller] -> --Performing action: Command.RUN

[10:25:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:3] [Controller] ->  ** COMMAND RUN ** 
[10:25:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:3] [Controller] -> --MODE: Mode.EXPLORING
[10:25:3] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:3] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:3] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:3] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:3] [Controller] -> --Performing action: Command.RUN

[10:25:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:3] [Controller] ->  ** COMMAND RUN ** 
[10:25:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:4] [Controller] -> --MODE: Mode.EXPLORING
[10:25:4] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:4] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:4] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:4] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:4] [Controller] -> --Performing action: Command.RUN

[10:25:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:4] [Controller] ->  ** COMMAND RUN ** 
[10:25:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:4] [Controller] -> --MODE: Mode.EXPLORING
[10:25:4] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:4] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:4] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:4] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:4] [Controller] -> --Performing action: Command.RUN

[10:25:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:4] [Controller] ->  ** COMMAND RUN ** 
[10:25:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:4] [Controller] -> --MODE: Mode.EXPLORING
[10:25:4] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:4] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:4] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:4] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:4] [Controller] -> --Performing action: Command.RUN

[10:25:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:4] [Controller] ->  ** COMMAND RUN ** 
[10:25:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:5] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:5] [Controller] -> --MODE: Mode.EXPLORING
[10:25:5] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:5] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:5] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}
[10:25:5] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:5] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:5] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:5] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:5] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:5] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:5] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:6] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:6] [Controller] -> --MODE: Mode.EXPLORING
[10:25:6] [Controller] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[10:25:6] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:25:6] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:6] [Controller] -> ADDED LEFT

[10:25:6] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:6] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:6] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:6] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:6] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:25:6] [Controller] -> --Performing action: 90.0

[10:25:6] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:6] [Controller] ->  ** COMMAND ROTATE ** 

[10:25:6] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:6] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 92.2981Â°

[10:25:7] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:7] [Controller] ->  !! bad orientation !! 
[10:25:7] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 93.4596

[10:25:7] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:25:8] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:8] [Controller] ->  >> Rotate clockwise (RIGHT) of 3.8294Â°
[10:25:8] [Controller] ->  --ATTEMPT: 1 / 10
[10:25:8] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-3.8294, 93.8294, 90.0]

[10:25:9] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:9] [Controller] ->  ~~ perfect ~~ 
[10:25:9] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 90.6945
[10:25:9] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:25:9] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:9] [Controller] -> --MODE: Mode.EXPLORING
[10:25:9] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:9] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:25:9] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:9] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:9] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:25:9] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:25:9] [Controller] -> --Performing action: 90.0

[10:25:9] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:9] [Controller] ->  ** COMMAND RUN ** 
[10:25:9] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:10] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:10] [Controller] -> --MODE: Mode.EXPLORING
[10:25:10] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:10] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:10] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:10] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:10] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:10] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:10] [Controller] -> --Performing action: Command.RUN

[10:25:10] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:10] [Controller] ->  ** COMMAND RUN ** 
[10:25:10] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:10] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:10] [Controller] -> --MODE: Mode.EXPLORING
[10:25:10] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:10] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:10] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:10] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:10] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:10] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:10] [Controller] -> --Performing action: Command.RUN

[10:25:10] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:10] [Controller] ->  ** COMMAND RUN ** 
[10:25:10] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:10] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:10] [Controller] -> --MODE: Mode.EXPLORING
[10:25:10] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:10] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:10] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:10] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:10] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:10] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:10] [Controller] -> --Performing action: Command.RUN

[10:25:10] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:10] [Controller] ->  ** COMMAND RUN ** 
[10:25:10] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:11] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:11] [Controller] -> --MODE: Mode.EXPLORING
[10:25:11] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:11] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:11] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:11] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:11] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:11] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:11] [Controller] -> --Performing action: Command.RUN

[10:25:11] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:11] [Controller] ->  ** COMMAND RUN ** 
[10:25:11] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:11] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:11] [Controller] -> --MODE: Mode.EXPLORING
[10:25:11] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:11] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:11] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:11] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:11] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:11] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:11] [Controller] -> --Performing action: Command.RUN

[10:25:11] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:11] [Controller] ->  ** COMMAND RUN ** 
[10:25:11] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:11] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:11] [Controller] -> --MODE: Mode.EXPLORING
[10:25:11] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:11] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:11] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}
[10:25:11] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:11] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:11] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:11] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:11] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:11] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:12] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:12] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:12] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:12] [Controller] -> --MODE: Mode.EXPLORING
[10:25:12] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[10:25:12] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>, <Compass.NORD: 90.0>]

[10:25:12] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:12] [Controller] -> ADDED LEFT
[10:25:12] [Controller] -> ADDED MID

[10:25:12] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:12] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , O )'}, 'L_n16': {}, 'M_n17': {}, 'R_n10': {}}
[10:25:12] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:12] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:12] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>, <Compass.NORD: 90.0>]
[10:25:12] [Controller] -> --Performing action: 90.0

[10:25:12] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:12] [Controller] ->  ** COMMAND RUN ** 
[10:25:12] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:13] [Controller] -> --MODE: Mode.EXPLORING
[10:25:13] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , O )'}, 'L_n16': {}, 'M_n17': {}, 'R_n10': {}}
[10:25:13] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:13] [Controller] -> --Performing action: Command.RUN

[10:25:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:13] [Controller] ->  ** COMMAND RUN ** 
[10:25:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:13] [Controller] -> --MODE: Mode.EXPLORING
[10:25:13] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , O )'}, 'L_n16': {}, 'M_n17': {}, 'R_n10': {}}
[10:25:13] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:13] [Controller] -> --Performing action: Command.RUN

[10:25:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:13] [Controller] ->  ** COMMAND RUN ** 
[10:25:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:13] [Controller] -> --MODE: Mode.EXPLORING
[10:25:13] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , O )'}, 'L_n16': {}, 'M_n17': {}, 'R_n10': {}}
[10:25:13] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:13] [Controller] -> --Performing action: Command.RUN

[10:25:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:13] [Controller] ->  ** COMMAND RUN ** 
[10:25:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:14] [Controller] -> --MODE: Mode.EXPLORING
[10:25:14] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:14] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , O )'}, 'L_n16': {}, 'M_n17': {}, 'R_n10': {}}
[10:25:14] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:14] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:14] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:14] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:14] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:14] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:15] [Controller] -> --MODE: Mode.EXPLORING
[10:25:15] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:25:15] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]

[10:25:15] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:15] [Controller] -> ADDED RIGHT
[10:25:15] [Controller] -> ADDED LEFT

[10:25:15] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:15] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:15] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:15] [Controller] -> --Available actions: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[10:25:15] [Controller] -> --Performing action: 180.0

[10:25:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:15] [Controller] ->  ** COMMAND ROTATE ** 

[10:25:15] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:15] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 88.2934Â°

[10:25:17] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:17] [Controller] ->  ~~ perfect ~~ 
[10:25:17] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -178.0761
[10:25:17] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:25:17] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:17] [Controller] -> --MODE: Mode.EXPLORING
[10:25:17] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:17] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:25:17] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:17] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:17] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:25:17] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:25:17] [Controller] -> --Performing action: 180.0

[10:25:17] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:17] [Controller] ->  ** COMMAND RUN ** 
[10:25:17] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:18] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:18] [Controller] -> --MODE: Mode.EXPLORING
[10:25:18] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:18] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:18] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:18] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:18] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:18] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:18] [Controller] -> --Performing action: Command.RUN

[10:25:18] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:18] [Controller] ->  ** COMMAND RUN ** 
[10:25:18] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:18] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:18] [Controller] -> --MODE: Mode.EXPLORING
[10:25:18] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:18] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:18] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:18] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:18] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:18] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:18] [Controller] -> --Performing action: Command.RUN

[10:25:18] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:18] [Controller] ->  ** COMMAND RUN ** 
[10:25:18] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:18] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:18] [Controller] -> --MODE: Mode.EXPLORING
[10:25:18] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:18] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:18] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:18] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:18] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:18] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:18] [Controller] -> --Performing action: Command.RUN

[10:25:18] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:18] [Controller] ->  ** COMMAND RUN ** 
[10:25:18] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:19] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:19] [Controller] -> --MODE: Mode.EXPLORING
[10:25:19] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:19] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:19] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:19] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:19] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:19] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:19] [Controller] -> --Performing action: Command.RUN

[10:25:19] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:19] [Controller] ->  ** COMMAND RUN ** 
[10:25:19] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:19] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:19] [Controller] -> --MODE: Mode.EXPLORING
[10:25:19] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:19] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:19] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:19] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:19] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:19] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:19] [Controller] -> --Performing action: Command.RUN

[10:25:19] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:19] [Controller] ->  ** COMMAND RUN ** 
[10:25:19] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:19] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:19] [Controller] -> --MODE: Mode.EXPLORING
[10:25:19] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:19] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:19] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:19] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:19] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:19] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:19] [Controller] -> --Performing action: Command.RUN

[10:25:19] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:19] [Controller] ->  ** COMMAND RUN ** 
[10:25:19] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:20] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:20] [Controller] -> --MODE: Mode.EXPLORING
[10:25:20] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:20] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:20] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:20] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:20] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:20] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:20] [Controller] -> --Performing action: Command.RUN

[10:25:20] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:20] [Controller] ->  ** COMMAND RUN ** 
[10:25:20] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:20] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:20] [Controller] -> --MODE: Mode.EXPLORING
[10:25:20] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:20] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:20] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:20] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:20] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:20] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:20] [Controller] -> --Performing action: Command.RUN

[10:25:20] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:20] [Controller] ->  ** COMMAND RUN ** 
[10:25:20] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:20] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:20] [Controller] -> --MODE: Mode.EXPLORING
[10:25:20] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:20] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:20] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:20] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:20] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:20] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:20] [Controller] -> --Performing action: Command.RUN

[10:25:20] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:20] [Controller] ->  ** COMMAND RUN ** 
[10:25:20] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:21] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:21] [Controller] -> --MODE: Mode.EXPLORING
[10:25:21] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:21] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:21] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:21] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:21] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:21] [Controller] -> --Performing action: Command.RUN

[10:25:21] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:21] [Controller] ->  ** COMMAND RUN ** 
[10:25:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:21] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:21] [Controller] -> --MODE: Mode.EXPLORING
[10:25:21] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:21] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:21] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:21] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:21] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:21] [Controller] -> --Performing action: Command.RUN

[10:25:21] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:21] [Controller] ->  ** COMMAND RUN ** 
[10:25:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:21] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:21] [Controller] -> --MODE: Mode.EXPLORING
[10:25:21] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:21] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:21] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:21] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:21] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:21] [Controller] -> --Performing action: Command.RUN

[10:25:21] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:21] [Controller] ->  ** COMMAND RUN ** 
[10:25:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:22] [Controller] -> --MODE: Mode.EXPLORING
[10:25:22] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:22] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:22] [Controller] -> --Performing action: Command.RUN

[10:25:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:22] [Controller] ->  ** COMMAND RUN ** 
[10:25:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:22] [Controller] -> --MODE: Mode.EXPLORING
[10:25:22] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:22] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:22] [Controller] -> --Performing action: Command.RUN

[10:25:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:22] [Controller] ->  ** COMMAND RUN ** 
[10:25:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:22] [Controller] -> --MODE: Mode.EXPLORING
[10:25:22] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:22] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:22] [Controller] -> --Performing action: Command.RUN

[10:25:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:22] [Controller] ->  ** COMMAND RUN ** 
[10:25:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:23] [Controller] -> --MODE: Mode.EXPLORING
[10:25:23] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:23] [Controller] -> --ACTIONS: [<Command.STOP: 0>]
[10:25:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , O)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:23] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:23] [Controller] -> --Available actions: [<Command.STOP: 0>]
[10:25:23] [Controller] -> --Performing action: Command.STOP

[10:25:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:23] [Controller] ->  ** COMMAND STOP ** 
[10:25:23] [Controller] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[10:25:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:23] [Controller] -> --MODE: Mode.ESCAPING
[10:25:23] [Controller] -> --CURRENT NODE: [ Name: L_n19, Type: Type.OBSERVED, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:23] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]

[10:25:23] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:25:23] [Controller] -> *** DEAD END NODE DETECTED ***
[10:25:23] [Controller] -> -- CURRENT NODE: [ Name: L_n19, Type: Type.DEAD_END, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]

[10:25:23] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:25:23] [Controller] ->  >>>> REGRESSION <<<< 
[10:25:23] [Controller] ->  --CURRENT NODE: [ Name: L_n19, Type: Type.DEAD_END, Action: 180.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:23] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:23] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[10:25:23] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:25:23] [Controller] -> --Performing action: 0.0

[10:25:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:23] [Controller] ->  ** COMMAND ROTATE ** 

[10:25:23] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:23] [Controller] ->  >> Rotate clockwise (RIGHT) of 178.9567Â°

[10:25:27] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:28] [Controller] ->  !! bad orientation !! 
[10:25:28] [Controller] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -4.8146

[10:25:28] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:25:28] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:28] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 4.9933Â°
[10:25:28] [Controller] ->  --ATTEMPT: 1 / 10
[10:25:28] [Controller] -> [Degrees_to_do, curr_g, final_g] = [4.9933, -4.9933, 0.0]

[10:25:29] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:29] [Controller] ->  ~~ perfect ~~ 
[10:25:29] [Controller] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -0.4792
[10:25:29] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[10:25:29] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:29] [Controller] -> --MODE: Mode.ESCAPING
[10:25:29] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:29] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]
[10:25:29] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:29] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:29] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[10:25:29] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:25:29] [Controller] -> --Performing action: 0.0

[10:25:29] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:29] [Controller] ->  ** COMMAND RUN ** 
[10:25:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:29] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:29] [Controller] -> --MODE: Mode.ESCAPING
[10:25:29] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:29] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:29] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:29] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:29] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:29] [Controller] -> --Performing action: Command.RUN

[10:25:29] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:29] [Controller] ->  ** COMMAND RUN ** 
[10:25:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:30] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:30] [Controller] -> --MODE: Mode.ESCAPING
[10:25:30] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:30] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:30] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:30] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:30] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:30] [Controller] -> --Performing action: Command.RUN

[10:25:30] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:30] [Controller] ->  ** COMMAND RUN ** 
[10:25:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:30] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:30] [Controller] -> --MODE: Mode.ESCAPING
[10:25:30] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:30] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:30] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:30] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:30] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:30] [Controller] -> --Performing action: Command.RUN

[10:25:30] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:30] [Controller] ->  ** COMMAND RUN ** 
[10:25:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:30] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:30] [Controller] -> --MODE: Mode.ESCAPING
[10:25:30] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:30] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:30] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:30] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:30] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:30] [Controller] -> --Performing action: Command.RUN

[10:25:30] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:30] [Controller] ->  ** COMMAND RUN ** 
[10:25:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:31] [Controller] -> --MODE: Mode.ESCAPING
[10:25:31] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:31] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:31] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:31] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:31] [Controller] -> --Performing action: Command.RUN

[10:25:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:31] [Controller] ->  ** COMMAND RUN ** 
[10:25:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:31] [Controller] -> --MODE: Mode.ESCAPING
[10:25:31] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:31] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:31] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:31] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:31] [Controller] -> --Performing action: Command.RUN

[10:25:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:31] [Controller] ->  ** COMMAND RUN ** 
[10:25:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:31] [Controller] -> --MODE: Mode.ESCAPING
[10:25:31] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:31] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:31] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:31] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:31] [Controller] -> --Performing action: Command.RUN

[10:25:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:31] [Controller] ->  ** COMMAND RUN ** 
[10:25:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:32] [Controller] -> --MODE: Mode.ESCAPING
[10:25:32] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:32] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:32] [Controller] -> --Performing action: Command.RUN

[10:25:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:32] [Controller] ->  ** COMMAND RUN ** 
[10:25:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:32] [Controller] -> --MODE: Mode.ESCAPING
[10:25:32] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:32] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:32] [Controller] -> --Performing action: Command.RUN

[10:25:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:32] [Controller] ->  ** COMMAND RUN ** 
[10:25:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:32] [Controller] -> --MODE: Mode.ESCAPING
[10:25:32] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:32] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:32] [Controller] -> --Performing action: Command.RUN

[10:25:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:32] [Controller] ->  ** COMMAND RUN ** 
[10:25:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:33] [Controller] -> --MODE: Mode.ESCAPING
[10:25:33] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:33] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:33] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:33] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:33] [Controller] -> --Performing action: Command.RUN

[10:25:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:33] [Controller] ->  ** COMMAND RUN ** 
[10:25:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:33] [Controller] -> --MODE: Mode.ESCAPING
[10:25:33] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:33] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:33] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:33] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:33] [Controller] -> --Performing action: Command.RUN

[10:25:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:33] [Controller] ->  ** COMMAND RUN ** 
[10:25:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:33] [Controller] -> --MODE: Mode.ESCAPING
[10:25:33] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:33] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:33] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:33] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:33] [Controller] -> --Performing action: Command.RUN

[10:25:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:33] [Controller] ->  ** COMMAND RUN ** 
[10:25:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:34] [Controller] -> --MODE: Mode.ESCAPING
[10:25:34] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:34] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:34] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:34] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:34] [Controller] -> --Performing action: Command.RUN

[10:25:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:34] [Controller] ->  ** COMMAND RUN ** 
[10:25:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:34] [Controller] -> --MODE: Mode.ESCAPING
[10:25:34] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:34] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:34] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:34] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:34] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:34] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:34] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:35] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:35] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:35] [Controller] -> --MODE: Mode.ESCAPING
[10:25:35] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:25:35] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]

[10:25:35] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:25:35] [Controller] -> No DEAD END children, tree'll be updated on next loop

[10:25:35] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***
[10:25:35] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:35] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:35] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:35] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:25:35] [Controller] -> --Performing action: 0.0

[10:25:35] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:35] [Controller] ->  ** COMMAND RUN ** 
[10:25:35] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:36] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:36] [Controller] -> --MODE: Mode.EXPLORING
[10:25:36] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:36] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:36] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:36] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:36] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:36] [Controller] -> --Performing action: Command.RUN

[10:25:36] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:36] [Controller] ->  ** COMMAND RUN ** 
[10:25:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:36] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:36] [Controller] -> --MODE: Mode.EXPLORING
[10:25:36] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:36] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:36] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:36] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:36] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:36] [Controller] -> --Performing action: Command.RUN

[10:25:36] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:36] [Controller] ->  ** COMMAND RUN ** 
[10:25:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:36] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:36] [Controller] -> --MODE: Mode.EXPLORING
[10:25:36] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:36] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:36] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:36] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:36] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:36] [Controller] -> --Performing action: Command.RUN

[10:25:36] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:36] [Controller] ->  ** COMMAND RUN ** 
[10:25:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:37] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:37] [Controller] -> --MODE: Mode.EXPLORING
[10:25:37] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:37] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:37] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:37] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:37] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:37] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:37] [Controller] -> --Performing action: Command.RUN

[10:25:37] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:37] [Controller] ->  ** COMMAND RUN ** 
[10:25:37] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:37] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:37] [Controller] -> --MODE: Mode.EXPLORING
[10:25:37] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:37] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:37] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , O)'}, 'L_n19': {}, 'R_n18': {}, 'R_n10': {}}
[10:25:37] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:37] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:37] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:37] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:37] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:37] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:37] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:38] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:38] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:38] [Controller] -> --MODE: Mode.EXPLORING
[10:25:38] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.OBSERVED, Action: 0.0, Parent: M_n17, Left: None, Mid: None, Right: None ]
[10:25:38] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>, <Compass.EST: 0.0>]

[10:25:38] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:38] [Controller] -> ADDED RIGHT
[10:25:38] [Controller] -> ADDED MID

[10:25:38] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:38] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , O )', 'R_n20': ' (R , S , O)'}, 'M_n21': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:38] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:38] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:38] [Controller] -> --Available actions: [<Compass.SUD: -90.0>, <Compass.EST: 0.0>]
[10:25:38] [Controller] -> --Performing action: 0.0

[10:25:38] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:38] [Controller] ->  ** COMMAND RUN ** 
[10:25:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:38] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:38] [Controller] -> --MODE: Mode.EXPLORING
[10:25:38] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:38] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:38] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , O )', 'R_n20': ' (R , S , O)'}, 'M_n21': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:38] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:38] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:38] [Controller] -> --Performing action: Command.RUN

[10:25:38] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:38] [Controller] ->  ** COMMAND RUN ** 
[10:25:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:39] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:39] [Controller] -> --MODE: Mode.EXPLORING
[10:25:39] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:39] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:39] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , O )', 'R_n20': ' (R , S , O)'}, 'M_n21': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:39] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:39] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:39] [Controller] -> --Performing action: Command.RUN

[10:25:39] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:39] [Controller] ->  ** COMMAND RUN ** 
[10:25:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:39] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:39] [Controller] -> --MODE: Mode.EXPLORING
[10:25:39] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:39] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:39] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , O )', 'R_n20': ' (R , S , O)'}, 'M_n21': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:39] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:39] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:39] [Controller] -> --Performing action: Command.RUN

[10:25:39] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:39] [Controller] ->  ** COMMAND RUN ** 
[10:25:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:39] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:39] [Controller] -> --MODE: Mode.EXPLORING
[10:25:39] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:39] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:39] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , O )', 'R_n20': ' (R , S , O)'}, 'M_n21': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:39] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:39] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:39] [Controller] -> --Performing action: Command.RUN

[10:25:39] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:39] [Controller] ->  ** COMMAND RUN ** 
[10:25:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:40] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:40] [Controller] -> --MODE: Mode.EXPLORING
[10:25:40] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:40] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:40] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , O )', 'R_n20': ' (R , S , O)'}, 'M_n21': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:40] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:40] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:40] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:40] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:40] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:40] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:41] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:41] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:41] [Controller] -> --MODE: Mode.EXPLORING
[10:25:41] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.OBSERVED, Action: 0.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:25:41] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>, <Compass.EST: 0.0>]

[10:25:41] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:41] [Controller] -> ADDED RIGHT
[10:25:41] [Controller] -> ADDED MID

[10:25:41] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:41] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , O )', 'R_n22': ' (R , S , O)'}, 'M_n23': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:41] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:41] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:41] [Controller] -> --Available actions: [<Compass.SUD: -90.0>, <Compass.EST: 0.0>]
[10:25:41] [Controller] -> --Performing action: 0.0

[10:25:41] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:41] [Controller] ->  ** COMMAND RUN ** 
[10:25:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:41] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:41] [Controller] -> --MODE: Mode.EXPLORING
[10:25:41] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:41] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:41] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , O )', 'R_n22': ' (R , S , O)'}, 'M_n23': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:41] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:41] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:41] [Controller] -> --Performing action: Command.RUN

[10:25:41] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:41] [Controller] ->  ** COMMAND RUN ** 
[10:25:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:42] [Controller] -> --MODE: Mode.EXPLORING
[10:25:42] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:42] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , O )', 'R_n22': ' (R , S , O)'}, 'M_n23': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:42] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:42] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:42] [Controller] -> --Performing action: Command.RUN

[10:25:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:42] [Controller] ->  ** COMMAND RUN ** 
[10:25:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:42] [Controller] -> --MODE: Mode.EXPLORING
[10:25:42] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:42] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , O )', 'R_n22': ' (R , S , O)'}, 'M_n23': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:42] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:42] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:42] [Controller] -> --Performing action: Command.RUN

[10:25:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:42] [Controller] ->  ** COMMAND RUN ** 
[10:25:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:42] [Controller] -> --MODE: Mode.EXPLORING
[10:25:42] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:42] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , O )', 'R_n22': ' (R , S , O)'}, 'M_n23': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:42] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:42] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:42] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:42] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:42] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:43] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:43] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:43] [Controller] -> --MODE: Mode.EXPLORING
[10:25:43] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.OBSERVED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:25:43] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]

[10:25:43] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:43] [Controller] -> ADDED RIGHT

[10:25:43] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:43] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:43] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:43] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:43] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:25:43] [Controller] -> --Performing action: -90.0

[10:25:43] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:43] [Controller] ->  ** COMMAND ROTATE ** 

[10:25:43] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:43] [Controller] ->  >> Rotate clockwise (RIGHT) of 85.2558Â°

[10:25:45] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:45] [Controller] ->  ~~ perfect ~~ 
[10:25:45] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -91.757
[10:25:45] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:25:46] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:46] [Controller] -> --MODE: Mode.EXPLORING
[10:25:46] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:46] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]
[10:25:46] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:46] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:46] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:25:46] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:25:46] [Controller] -> --Performing action: -90.0

[10:25:46] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:46] [Controller] ->  ** COMMAND RUN ** 
[10:25:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:46] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:46] [Controller] -> --MODE: Mode.EXPLORING
[10:25:46] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:46] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:46] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:46] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:46] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:46] [Controller] -> --Performing action: Command.RUN

[10:25:46] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:46] [Controller] ->  ** COMMAND RUN ** 
[10:25:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:46] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:46] [Controller] -> --MODE: Mode.EXPLORING
[10:25:46] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:46] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:46] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:46] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:46] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:46] [Controller] -> --Performing action: Command.RUN

[10:25:46] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:46] [Controller] ->  ** COMMAND RUN ** 
[10:25:46] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:47] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:47] [Controller] -> --MODE: Mode.EXPLORING
[10:25:47] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:47] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:47] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:47] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:47] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:47] [Controller] -> --Performing action: Command.RUN

[10:25:47] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:47] [Controller] ->  ** COMMAND RUN ** 
[10:25:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:47] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:47] [Controller] -> --MODE: Mode.EXPLORING
[10:25:47] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:47] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:47] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:47] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:47] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:47] [Controller] -> --Performing action: Command.RUN

[10:25:47] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:47] [Controller] ->  ** COMMAND RUN ** 
[10:25:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:47] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:47] [Controller] -> --MODE: Mode.EXPLORING
[10:25:47] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:47] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:47] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:47] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:47] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:47] [Controller] -> --Performing action: Command.RUN

[10:25:47] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:47] [Controller] ->  ** COMMAND RUN ** 
[10:25:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:48] [Controller] -> --MODE: Mode.EXPLORING
[10:25:48] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:48] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:48] [Controller] -> --Performing action: Command.RUN

[10:25:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:48] [Controller] ->  ** COMMAND RUN ** 
[10:25:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:48] [Controller] -> --MODE: Mode.EXPLORING
[10:25:48] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:48] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:48] [Controller] -> --Performing action: Command.RUN

[10:25:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:48] [Controller] ->  ** COMMAND RUN ** 
[10:25:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:48] [Controller] -> --MODE: Mode.EXPLORING
[10:25:48] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:48] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:48] [Controller] -> --Performing action: Command.RUN

[10:25:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:48] [Controller] ->  ** COMMAND RUN ** 
[10:25:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:49] [Controller] -> --MODE: Mode.EXPLORING
[10:25:49] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:49] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:49] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:49] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:49] [Controller] -> --Performing action: Command.RUN

[10:25:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:49] [Controller] ->  ** COMMAND RUN ** 
[10:25:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:49] [Controller] -> --MODE: Mode.EXPLORING
[10:25:49] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:49] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:49] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:49] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:49] [Controller] -> --Performing action: Command.RUN

[10:25:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:49] [Controller] ->  ** COMMAND RUN ** 
[10:25:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:49] [Controller] -> --MODE: Mode.EXPLORING
[10:25:49] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:49] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:49] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:49] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:49] [Controller] -> --Performing action: Command.RUN

[10:25:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:49] [Controller] ->  ** COMMAND RUN ** 
[10:25:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:50] [Controller] -> --MODE: Mode.EXPLORING
[10:25:50] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:50] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:50] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:50] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:50] [Controller] -> --Performing action: Command.RUN

[10:25:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:50] [Controller] ->  ** COMMAND RUN ** 
[10:25:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:50] [Controller] -> --MODE: Mode.EXPLORING
[10:25:50] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:50] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:50] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:50] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:50] [Controller] -> --Performing action: Command.RUN

[10:25:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:50] [Controller] ->  ** COMMAND RUN ** 
[10:25:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:50] [Controller] -> --MODE: Mode.EXPLORING
[10:25:50] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:50] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , O)'}, 'R_n24': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:50] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:50] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:50] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:50] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:51] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:51] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:51] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:51] [Controller] -> --MODE: Mode.EXPLORING
[10:25:51] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.OBSERVED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: None ]
[10:25:51] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:25:51] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:51] [Controller] -> ADDED RIGHT

[10:25:51] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:51] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , O)'}, 'R_n25': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:51] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:51] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:51] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:25:51] [Controller] -> --Performing action: 180.0

[10:25:51] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:51] [Controller] ->  ** COMMAND ROTATE ** 

[10:25:51] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:51] [Controller] ->  >> Rotate clockwise (RIGHT) of 83.929Â°

[10:25:53] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:53] [Controller] ->  ~~ perfect ~~ 
[10:25:53] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: 178.0328
[10:25:53] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:25:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:54] [Controller] -> --MODE: Mode.EXPLORING
[10:25:54] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:54] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:25:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , O)'}, 'R_n25': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:54] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:54] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:25:54] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:25:54] [Controller] -> --Performing action: 180.0

[10:25:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:54] [Controller] ->  ** COMMAND RUN ** 
[10:25:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:54] [Controller] -> --MODE: Mode.EXPLORING
[10:25:54] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:54] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , O)'}, 'R_n25': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:54] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:25:54] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:54] [Controller] -> --Performing action: Command.RUN

[10:25:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:54] [Controller] ->  ** COMMAND RUN ** 
[10:25:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:25:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:54] [Controller] -> --MODE: Mode.EXPLORING
[10:25:54] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:54] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , O)'}, 'R_n25': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:54] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:54] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:54] [Controller] -> --Performing action: Command.RUN

[10:25:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:54] [Controller] ->  ** COMMAND RUN ** 
[10:25:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:55] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:55] [Controller] -> --MODE: Mode.EXPLORING
[10:25:55] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:55] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:25:55] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , O)'}, 'R_n25': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:55] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:55] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:25:55] [Controller] -> --Performing action: Command.RUN

[10:25:55] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:55] [Controller] ->  ** COMMAND RUN ** 
[10:25:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:25:55] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:55] [Controller] -> --MODE: Mode.EXPLORING
[10:25:55] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:55] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:25:55] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , O)'}, 'R_n25': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:55] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:25:55] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:25:55] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:25:55] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:55] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:25:55] [Controller] ->  ** STATE SENSING ARISE ** 
[10:25:56] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:25:56] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:25:56] [Controller] -> --MODE: Mode.EXPLORING
[10:25:56] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.OBSERVED, Action: 180.0, Parent: R_n24, Left: None, Mid: None, Right: None ]
[10:25:56] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]

[10:25:56] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:25:56] [Controller] -> ADDED LEFT

[10:25:56] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:25:56] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:25:56] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:25:56] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:25:56] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:25:56] [Controller] -> --Performing action: -90.0

[10:25:56] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:25:56] [Controller] ->  ** COMMAND ROTATE ** 

[10:25:56] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:56] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 92.6783Â°

[10:25:58] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:58] [Controller] ->  !! bad orientation !! 
[10:25:58] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -87.3745

[10:25:58] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:25:58] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:25:58] [Controller] ->  >> Rotate clockwise (RIGHT) of 3.0169Â°
[10:25:58] [Controller] ->  --ATTEMPT: 1 / 10
[10:25:58] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-3.0169, -86.9831, -90.0]

[10:25:59] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:25:59] [Controller] ->  ~~ perfect ~~ 
[10:25:59] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -89.3963
[10:25:59] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:0] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:0] [Controller] -> --MODE: Mode.EXPLORING
[10:26:0] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:0] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]
[10:26:0] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:0] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:0] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:0] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:26:0] [Controller] -> --Performing action: -90.0

[10:26:0] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:0] [Controller] ->  ** COMMAND RUN ** 
[10:26:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:0] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:0] [Controller] -> --MODE: Mode.EXPLORING
[10:26:0] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:0] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:0] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:0] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:0] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:0] [Controller] -> --Performing action: Command.RUN

[10:26:0] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:0] [Controller] ->  ** COMMAND RUN ** 
[10:26:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:0] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:0] [Controller] -> --MODE: Mode.EXPLORING
[10:26:0] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:0] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:0] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:0] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:0] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:0] [Controller] -> --Performing action: Command.RUN

[10:26:0] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:0] [Controller] ->  ** COMMAND RUN ** 
[10:26:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:1] [Controller] -> --MODE: Mode.EXPLORING
[10:26:1] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:1] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:1] [Controller] -> --Performing action: Command.RUN

[10:26:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:1] [Controller] ->  ** COMMAND RUN ** 
[10:26:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:1] [Controller] -> --MODE: Mode.EXPLORING
[10:26:1] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:1] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:1] [Controller] -> --Performing action: Command.RUN

[10:26:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:1] [Controller] ->  ** COMMAND RUN ** 
[10:26:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:1] [Controller] -> --MODE: Mode.EXPLORING
[10:26:1] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:1] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:1] [Controller] -> --Performing action: Command.RUN

[10:26:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:1] [Controller] ->  ** COMMAND RUN ** 
[10:26:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:2] [Controller] -> --MODE: Mode.EXPLORING
[10:26:2] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:2] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:2] [Controller] -> --Performing action: Command.RUN

[10:26:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:2] [Controller] ->  ** COMMAND RUN ** 
[10:26:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:2] [Controller] -> --MODE: Mode.EXPLORING
[10:26:2] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:2] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:2] [Controller] -> --Performing action: Command.RUN

[10:26:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:2] [Controller] ->  ** COMMAND RUN ** 
[10:26:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:2] [Controller] -> --MODE: Mode.EXPLORING
[10:26:2] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:2] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:2] [Controller] -> --Performing action: Command.RUN

[10:26:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:2] [Controller] ->  ** COMMAND RUN ** 
[10:26:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:3] [Controller] -> --MODE: Mode.EXPLORING
[10:26:3] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:3] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:3] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:3] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:3] [Controller] -> --Performing action: Command.RUN

[10:26:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:3] [Controller] ->  ** COMMAND RUN ** 
[10:26:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:3] [Controller] -> --MODE: Mode.EXPLORING
[10:26:3] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:3] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , O)'}, 'L_n26': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:3] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:3] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:3] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:3] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:3] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:4] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:4] [Controller] -> --MODE: Mode.EXPLORING
[10:26:4] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.OBSERVED, Action: -90.0, Parent: R_n25, Left: None, Mid: None, Right: None ]
[10:26:4] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]

[10:26:4] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:26:4] [Controller] -> ADDED LEFT

[10:26:4] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:26:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , O)'}, 'L_n27': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:4] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:4] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:4] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:26:4] [Controller] -> --Performing action: 0.0

[10:26:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:4] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:4] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:4] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 91.9215Â°

[10:26:6] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:7] [Controller] ->  ~~ perfect ~~ 
[10:26:7] [Controller] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: 1.9886
[10:26:7] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:7] [Controller] -> --MODE: Mode.EXPLORING
[10:26:7] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:7] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]
[10:26:7] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , O)'}, 'L_n27': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:7] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:7] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:7] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:26:7] [Controller] -> --Performing action: 0.0

[10:26:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:7] [Controller] ->  ** COMMAND RUN ** 
[10:26:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:7] [Controller] -> --MODE: Mode.EXPLORING
[10:26:7] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:7] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:7] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , O)'}, 'L_n27': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:7] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:7] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:7] [Controller] -> --Performing action: Command.RUN

[10:26:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:7] [Controller] ->  ** COMMAND RUN ** 
[10:26:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:8] [Controller] -> --MODE: Mode.EXPLORING
[10:26:8] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:8] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , O)'}, 'L_n27': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:8] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:8] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:8] [Controller] -> --Performing action: Command.RUN

[10:26:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:8] [Controller] ->  ** COMMAND RUN ** 
[10:26:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:8] [Controller] -> --MODE: Mode.EXPLORING
[10:26:8] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:8] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , O)'}, 'L_n27': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:8] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:8] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:8] [Controller] -> --Performing action: Command.RUN

[10:26:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:8] [Controller] ->  ** COMMAND RUN ** 
[10:26:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:8] [Controller] -> --MODE: Mode.EXPLORING
[10:26:8] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:8] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , O)'}, 'L_n27': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:8] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:8] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:8] [Controller] -> --Performing action: Command.RUN

[10:26:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:8] [Controller] ->  ** COMMAND RUN ** 
[10:26:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:9] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:9] [Controller] -> --MODE: Mode.EXPLORING
[10:26:9] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:9] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:9] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , O)'}, 'L_n27': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:9] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:9] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:9] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:9] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:9] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:9] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:9] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:9] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:9] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:9] [Controller] -> --MODE: Mode.EXPLORING
[10:26:9] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.OBSERVED, Action: 0.0, Parent: L_n26, Left: None, Mid: None, Right: None ]
[10:26:9] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:26:9] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:26:9] [Controller] -> ADDED LEFT

[10:26:9] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:26:9] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:9] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:9] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:9] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:26:9] [Controller] -> --Performing action: 90.0

[10:26:9] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:9] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:9] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:9] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 89.7626Â°

[10:26:12] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:12] [Controller] ->  !! bad orientation !! 
[10:26:12] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 95.0977

[10:26:12] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:26:12] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:12] [Controller] ->  >> Rotate clockwise (RIGHT) of 5.1507Â°
[10:26:12] [Controller] ->  --ATTEMPT: 1 / 10
[10:26:12] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-5.1507, 95.1507, 90.0]

[10:26:13] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:14] [Controller] ->  ~~ perfect ~~ 
[10:26:14] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 90.6016
[10:26:14] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:14] [Controller] -> --MODE: Mode.EXPLORING
[10:26:14] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:14] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:26:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:14] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:14] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:14] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:26:14] [Controller] -> --Performing action: 90.0

[10:26:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:14] [Controller] ->  ** COMMAND RUN ** 
[10:26:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:14] [Controller] -> --MODE: Mode.EXPLORING
[10:26:14] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:14] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:14] [Controller] -> --Performing action: Command.RUN

[10:26:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:14] [Controller] ->  ** COMMAND RUN ** 
[10:26:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:14] [Controller] -> --MODE: Mode.EXPLORING
[10:26:14] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:14] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:14] [Controller] -> --Performing action: Command.RUN

[10:26:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:14] [Controller] ->  ** COMMAND RUN ** 
[10:26:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:15] [Controller] -> --MODE: Mode.EXPLORING
[10:26:15] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:15] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:15] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:15] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:15] [Controller] -> --Performing action: Command.RUN

[10:26:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:15] [Controller] ->  ** COMMAND RUN ** 
[10:26:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:15] [Controller] -> --MODE: Mode.EXPLORING
[10:26:15] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:15] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:15] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:15] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:15] [Controller] -> --Performing action: Command.RUN

[10:26:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:15] [Controller] ->  ** COMMAND RUN ** 
[10:26:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:15] [Controller] -> --MODE: Mode.EXPLORING
[10:26:15] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:15] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:15] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:15] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:15] [Controller] -> --Performing action: Command.RUN

[10:26:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:15] [Controller] ->  ** COMMAND RUN ** 
[10:26:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:16] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:16] [Controller] -> --MODE: Mode.EXPLORING
[10:26:16] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:16] [Controller] -> --ACTIONS: [<Command.STOP: 0>]
[10:26:16] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , O)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:16] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:16] [Controller] -> --Available actions: [<Command.STOP: 0>]
[10:26:16] [Controller] -> --Performing action: Command.STOP

[10:26:16] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:16] [Controller] ->  ** COMMAND STOP ** 
[10:26:16] [Controller] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[10:26:16] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:16] [Controller] -> --MODE: Mode.ESCAPING
[10:26:16] [Controller] -> --CURRENT NODE: [ Name: L_n28, Type: Type.OBSERVED, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:16] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]

[10:26:16] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:26:16] [Controller] -> *** DEAD END NODE DETECTED ***
[10:26:16] [Controller] -> -- CURRENT NODE: [ Name: L_n28, Type: Type.DEAD_END, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]

[10:26:16] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:26:16] [Controller] ->  >>>> REGRESSION <<<< 
[10:26:16] [Controller] ->  --CURRENT NODE: [ Name: L_n28, Type: Type.DEAD_END, Action: 90.0, Parent: L_n27, Left: None, Mid: None, Right: None ]
[10:26:16] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:16] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:16] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[10:26:16] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:26:16] [Controller] -> --Performing action: -90.0

[10:26:16] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:16] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:16] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:16] [Controller] ->  >> Rotate clockwise (RIGHT) of 178.454Â°

[10:26:20] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:20] [Controller] ->  !! bad orientation !! 
[10:26:20] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -93.3152

[10:26:20] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:26:20] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:20] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 3.3605Â°
[10:26:20] [Controller] ->  --ATTEMPT: 1 / 10
[10:26:20] [Controller] -> [Degrees_to_do, curr_g, final_g] = [3.3605, -93.3605, -90.0]

[10:26:21] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:21] [Controller] ->  ~~ perfect ~~ 
[10:26:21] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -90.4945
[10:26:21] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[10:26:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:22] [Controller] -> --MODE: Mode.ESCAPING
[10:26:22] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:22] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]
[10:26:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:22] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:22] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[10:26:22] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:26:22] [Controller] -> --Performing action: -90.0

[10:26:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:22] [Controller] ->  ** COMMAND RUN ** 
[10:26:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:22] [Controller] -> --MODE: Mode.ESCAPING
[10:26:22] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:22] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:22] [Controller] -> --Performing action: Command.RUN

[10:26:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:22] [Controller] ->  ** COMMAND RUN ** 
[10:26:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:22] [Controller] -> --MODE: Mode.ESCAPING
[10:26:22] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:22] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:22] [Controller] -> --Performing action: Command.RUN

[10:26:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:22] [Controller] ->  ** COMMAND RUN ** 
[10:26:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:23] [Controller] -> --MODE: Mode.ESCAPING
[10:26:23] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:23] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:23] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:23] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:23] [Controller] -> --Performing action: Command.RUN

[10:26:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:23] [Controller] ->  ** COMMAND RUN ** 
[10:26:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:23] [Controller] -> --MODE: Mode.ESCAPING
[10:26:23] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:23] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:23] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:23] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:23] [Controller] -> --Performing action: Command.RUN

[10:26:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:23] [Controller] ->  ** COMMAND RUN ** 
[10:26:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:23] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:23] [Controller] -> --MODE: Mode.ESCAPING
[10:26:23] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:23] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:23] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , E)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:23] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:23] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:23] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:23] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:23] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:23] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:24] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:24] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:24] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:24] [Controller] -> --MODE: Mode.ESCAPING
[10:26:24] [Controller] -> --CURRENT NODE: [ Name: L_n27, Type: Type.EXPLORED, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:24] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:26:24] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:26:24] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:26:24] [Controller] -> -- CURRENT NODE: [ Name: L_n27, Type: Type.DEAD_END, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ] IS DEAD END TOO

[10:26:24] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:26:24] [Controller] ->  >>>> REGRESSION <<<< 
[10:26:24] [Controller] ->  --CURRENT NODE: [ Name: L_n27, Type: Type.DEAD_END, Action: 0.0, Parent: L_n26, Left: L_n28, Mid: None, Right: None ]
[10:26:24] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:24] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:24] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:24] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:26:24] [Controller] -> --Performing action: 180.0

[10:26:24] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:24] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:24] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:24] [Controller] ->  >> Rotate clockwise (RIGHT) of 88.4015Â°

[10:26:27] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:27] [Controller] ->  ~~ perfect ~~ 
[10:26:27] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: 178.153
[10:26:27] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:27] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:27] [Controller] -> --MODE: Mode.ESCAPING
[10:26:27] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:27] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:26:27] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:27] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:27] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:27] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:26:27] [Controller] -> --Performing action: 180.0

[10:26:27] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:27] [Controller] ->  ** COMMAND RUN ** 
[10:26:27] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:27] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:27] [Controller] -> --MODE: Mode.ESCAPING
[10:26:27] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:27] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:27] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:27] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:27] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:27] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:27] [Controller] -> --Performing action: Command.RUN

[10:26:27] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:27] [Controller] ->  ** COMMAND RUN ** 
[10:26:27] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:28] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:28] [Controller] -> --MODE: Mode.ESCAPING
[10:26:28] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:28] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:28] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:28] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:28] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:28] [Controller] -> --Performing action: Command.RUN

[10:26:28] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:28] [Controller] ->  ** COMMAND RUN ** 
[10:26:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:28] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:28] [Controller] -> --MODE: Mode.ESCAPING
[10:26:28] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:28] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:28] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:28] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:28] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:28] [Controller] -> --Performing action: Command.RUN

[10:26:28] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:28] [Controller] ->  ** COMMAND RUN ** 
[10:26:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:28] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:28] [Controller] -> --MODE: Mode.ESCAPING
[10:26:28] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:28] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:28] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:28] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:28] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:28] [Controller] -> --Performing action: Command.RUN

[10:26:28] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:28] [Controller] ->  ** COMMAND RUN ** 
[10:26:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:29] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:29] [Controller] -> --MODE: Mode.ESCAPING
[10:26:29] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:29] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:29] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , E)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:29] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:29] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:29] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:29] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:29] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:29] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:29] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:30] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:30] [Controller] -> --MODE: Mode.ESCAPING
[10:26:30] [Controller] -> --CURRENT NODE: [ Name: L_n26, Type: Type.EXPLORED, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:30] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:26:30] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:26:30] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:26:30] [Controller] -> -- CURRENT NODE: [ Name: L_n26, Type: Type.DEAD_END, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ] IS DEAD END TOO

[10:26:30] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:26:30] [Controller] ->  >>>> REGRESSION <<<< 
[10:26:30] [Controller] ->  --CURRENT NODE: [ Name: L_n26, Type: Type.DEAD_END, Action: -90.0, Parent: R_n25, Left: L_n27, Mid: None, Right: None ]
[10:26:30] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:30] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:30] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:30] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:26:30] [Controller] -> --Performing action: 90.0

[10:26:30] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:30] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:30] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:30] [Controller] ->  >> Rotate clockwise (RIGHT) of 85.8656Â°

[10:26:32] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:32] [Controller] ->  !! bad orientation !! 
[10:26:32] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 86.1418

[10:26:32] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:26:32] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:32] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 4.0314Â°
[10:26:32] [Controller] ->  --ATTEMPT: 1 / 10
[10:26:32] [Controller] -> [Degrees_to_do, curr_g, final_g] = [4.0314, 85.9686, 90.0]

[10:26:33] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:33] [Controller] ->  ~~ perfect ~~ 
[10:26:33] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 89.488
[10:26:33] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:33] [Controller] -> --MODE: Mode.ESCAPING
[10:26:33] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:33] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:26:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:33] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:33] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:33] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:26:33] [Controller] -> --Performing action: 90.0

[10:26:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:33] [Controller] ->  ** COMMAND RUN ** 
[10:26:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:34] [Controller] -> --MODE: Mode.ESCAPING
[10:26:34] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:34] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:34] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:34] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:34] [Controller] -> --Performing action: Command.RUN

[10:26:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:34] [Controller] ->  ** COMMAND RUN ** 
[10:26:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:34] [Controller] -> --MODE: Mode.ESCAPING
[10:26:34] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:34] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:34] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:34] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:34] [Controller] -> --Performing action: Command.RUN

[10:26:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:34] [Controller] ->  ** COMMAND RUN ** 
[10:26:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:34] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:34] [Controller] -> --MODE: Mode.ESCAPING
[10:26:34] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:34] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:34] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:34] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:34] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:34] [Controller] -> --Performing action: Command.RUN

[10:26:34] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:34] [Controller] ->  ** COMMAND RUN ** 
[10:26:34] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:35] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:35] [Controller] -> --MODE: Mode.ESCAPING
[10:26:35] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:35] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:35] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:35] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:35] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:35] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:35] [Controller] -> --Performing action: Command.RUN

[10:26:35] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:35] [Controller] ->  ** COMMAND RUN ** 
[10:26:35] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:35] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:35] [Controller] -> --MODE: Mode.ESCAPING
[10:26:35] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:35] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:35] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:35] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:35] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:35] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:35] [Controller] -> --Performing action: Command.RUN

[10:26:35] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:35] [Controller] ->  ** COMMAND RUN ** 
[10:26:35] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:35] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:35] [Controller] -> --MODE: Mode.ESCAPING
[10:26:35] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:35] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:35] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:35] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:35] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:35] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:35] [Controller] -> --Performing action: Command.RUN

[10:26:35] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:35] [Controller] ->  ** COMMAND RUN ** 
[10:26:35] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:36] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:36] [Controller] -> --MODE: Mode.ESCAPING
[10:26:36] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:36] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:36] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:36] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:36] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:36] [Controller] -> --Performing action: Command.RUN

[10:26:36] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:36] [Controller] ->  ** COMMAND RUN ** 
[10:26:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:36] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:36] [Controller] -> --MODE: Mode.ESCAPING
[10:26:36] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:36] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:36] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:36] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:36] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:36] [Controller] -> --Performing action: Command.RUN

[10:26:36] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:36] [Controller] ->  ** COMMAND RUN ** 
[10:26:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:36] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:36] [Controller] -> --MODE: Mode.ESCAPING
[10:26:36] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:36] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:36] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:36] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:36] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:36] [Controller] -> --Performing action: Command.RUN

[10:26:36] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:36] [Controller] ->  ** COMMAND RUN ** 
[10:26:36] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:37] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:37] [Controller] -> --MODE: Mode.ESCAPING
[10:26:37] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:37] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:37] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , E)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:37] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:37] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:37] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:37] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:37] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:37] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:37] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:37] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:38] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:38] [Controller] -> --MODE: Mode.ESCAPING
[10:26:38] [Controller] -> --CURRENT NODE: [ Name: R_n25, Type: Type.EXPLORED, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:38] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]

[10:26:38] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:26:38] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:26:38] [Controller] -> -- CURRENT NODE: [ Name: R_n25, Type: Type.DEAD_END, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ] IS DEAD END TOO

[10:26:38] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:26:38] [Controller] ->  >>>> REGRESSION <<<< 
[10:26:38] [Controller] ->  --CURRENT NODE: [ Name: R_n25, Type: Type.DEAD_END, Action: 180.0, Parent: R_n24, Left: L_n26, Mid: None, Right: None ]
[10:26:38] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:38] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:38] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:38] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:26:38] [Controller] -> --Performing action: 0.0

[10:26:38] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:38] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:38] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:38] [Controller] ->  >> Rotate clockwise (RIGHT) of 87.096Â°

[10:26:40] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:40] [Controller] ->  !! bad orientation !! 
[10:26:40] [Controller] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -4.5477

[10:26:40] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:26:40] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:40] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 4.6043Â°
[10:26:40] [Controller] ->  --ATTEMPT: 1 / 10
[10:26:40] [Controller] -> [Degrees_to_do, curr_g, final_g] = [4.6043, -4.6043, 0.0]

[10:26:41] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:41] [Controller] ->  ~~ perfect ~~ 
[10:26:41] [Controller] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -0.3911
[10:26:41] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:42] [Controller] -> --MODE: Mode.ESCAPING
[10:26:42] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:42] [Controller] -> --ACTIONS: [<Compass.EST: 0.0>]
[10:26:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:42] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:42] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:42] [Controller] -> --Available actions: [<Compass.EST: 0.0>]
[10:26:42] [Controller] -> --Performing action: 0.0

[10:26:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:42] [Controller] ->  ** COMMAND RUN ** 
[10:26:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:42] [Controller] -> --MODE: Mode.ESCAPING
[10:26:42] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:42] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:42] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:42] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:42] [Controller] -> --Performing action: Command.RUN

[10:26:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:42] [Controller] ->  ** COMMAND RUN ** 
[10:26:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:42] [Controller] -> --MODE: Mode.ESCAPING
[10:26:42] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:42] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:42] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:42] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:42] [Controller] -> --Performing action: Command.RUN

[10:26:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:42] [Controller] ->  ** COMMAND RUN ** 
[10:26:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:43] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:43] [Controller] -> --MODE: Mode.ESCAPING
[10:26:43] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:43] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:43] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:43] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:43] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:43] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:43] [Controller] -> --Performing action: Command.RUN

[10:26:43] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:43] [Controller] ->  ** COMMAND RUN ** 
[10:26:43] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:43] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:43] [Controller] -> --MODE: Mode.ESCAPING
[10:26:43] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:43] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:43] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:43] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:43] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:43] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:43] [Controller] -> --Performing action: Command.RUN

[10:26:43] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:43] [Controller] ->  ** COMMAND RUN ** 
[10:26:43] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:43] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:43] [Controller] -> --MODE: Mode.ESCAPING
[10:26:43] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:43] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:43] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , E)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:43] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:43] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:43] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:43] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:43] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:43] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:43] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:44] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:44] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:44] [Controller] -> --MODE: Mode.ESCAPING
[10:26:44] [Controller] -> --CURRENT NODE: [ Name: R_n24, Type: Type.EXPLORED, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:44] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:26:44] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:26:44] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:26:44] [Controller] -> -- CURRENT NODE: [ Name: R_n24, Type: Type.DEAD_END, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ] IS DEAD END TOO

[10:26:44] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:26:44] [Controller] ->  >>>> REGRESSION <<<< 
[10:26:44] [Controller] ->  --CURRENT NODE: [ Name: R_n24, Type: Type.DEAD_END, Action: -90.0, Parent: M_n23, Left: None, Mid: None, Right: R_n25 ]
[10:26:44] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:44] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:44] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:44] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:26:44] [Controller] -> --Performing action: 90.0

[10:26:44] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:44] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:44] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:44] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 90.2738Â°

[10:26:47] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:47] [Controller] ->  !! bad orientation !! 
[10:26:47] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 92.8848

[10:26:47] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:26:47] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:47] [Controller] ->  >> Rotate clockwise (RIGHT) of 3.0537Â°
[10:26:47] [Controller] ->  --ATTEMPT: 1 / 10
[10:26:47] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-3.0537, 93.0537, 90.0]

[10:26:47] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:47] [Controller] ->  ~~ perfect ~~ 
[10:26:47] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 90.2805
[10:26:47] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:48] [Controller] -> --MODE: Mode.ESCAPING
[10:26:48] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:48] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:26:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:48] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:48] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:48] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:26:48] [Controller] -> --Performing action: 90.0

[10:26:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:48] [Controller] ->  ** COMMAND RUN ** 
[10:26:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:48] [Controller] -> --MODE: Mode.ESCAPING
[10:26:48] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:48] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:48] [Controller] -> --Performing action: Command.RUN

[10:26:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:48] [Controller] ->  ** COMMAND RUN ** 
[10:26:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:48] [Controller] -> --MODE: Mode.ESCAPING
[10:26:48] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:48] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:48] [Controller] -> --Performing action: Command.RUN

[10:26:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:48] [Controller] ->  ** COMMAND RUN ** 
[10:26:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:49] [Controller] -> --MODE: Mode.ESCAPING
[10:26:49] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:49] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:49] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:49] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:49] [Controller] -> --Performing action: Command.RUN

[10:26:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:49] [Controller] ->  ** COMMAND RUN ** 
[10:26:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:49] [Controller] -> --MODE: Mode.ESCAPING
[10:26:49] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:49] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:49] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:49] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:49] [Controller] -> --Performing action: Command.RUN

[10:26:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:49] [Controller] ->  ** COMMAND RUN ** 
[10:26:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:49] [Controller] -> --MODE: Mode.ESCAPING
[10:26:49] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:49] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:49] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:49] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:49] [Controller] -> --Performing action: Command.RUN

[10:26:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:49] [Controller] ->  ** COMMAND RUN ** 
[10:26:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:50] [Controller] -> --MODE: Mode.ESCAPING
[10:26:50] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:50] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:50] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:50] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:50] [Controller] -> --Performing action: Command.RUN

[10:26:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:50] [Controller] ->  ** COMMAND RUN ** 
[10:26:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:50] [Controller] -> --MODE: Mode.ESCAPING
[10:26:50] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:50] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:50] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:50] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:50] [Controller] -> --Performing action: Command.RUN

[10:26:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:50] [Controller] ->  ** COMMAND RUN ** 
[10:26:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:50] [Controller] -> --MODE: Mode.ESCAPING
[10:26:50] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:50] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:50] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:50] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:50] [Controller] -> --Performing action: Command.RUN

[10:26:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:50] [Controller] ->  ** COMMAND RUN ** 
[10:26:50] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:51] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:51] [Controller] -> --MODE: Mode.ESCAPING
[10:26:51] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:51] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:51] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:51] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:51] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:51] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:51] [Controller] -> --Performing action: Command.RUN

[10:26:51] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:51] [Controller] ->  ** COMMAND RUN ** 
[10:26:51] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:51] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:51] [Controller] -> --MODE: Mode.ESCAPING
[10:26:51] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:51] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:51] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:51] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:51] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:51] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:51] [Controller] -> --Performing action: Command.RUN

[10:26:51] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:51] [Controller] ->  ** COMMAND RUN ** 
[10:26:51] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:51] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:51] [Controller] -> --MODE: Mode.ESCAPING
[10:26:51] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:51] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:51] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:51] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:51] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:51] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:51] [Controller] -> --Performing action: Command.RUN

[10:26:51] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:51] [Controller] ->  ** COMMAND RUN ** 
[10:26:51] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:52] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:52] [Controller] -> --MODE: Mode.ESCAPING
[10:26:52] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:52] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:52] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:52] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:52] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:52] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:52] [Controller] -> --Performing action: Command.RUN

[10:26:52] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:52] [Controller] ->  ** COMMAND RUN ** 
[10:26:52] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:52] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:52] [Controller] -> --MODE: Mode.ESCAPING
[10:26:52] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:52] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:52] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:52] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:52] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:52] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:52] [Controller] -> --Performing action: Command.RUN

[10:26:52] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:52] [Controller] ->  ** COMMAND RUN ** 
[10:26:52] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:52] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:52] [Controller] -> --MODE: Mode.ESCAPING
[10:26:52] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:52] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:52] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:52] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:52] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:52] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:52] [Controller] -> --Performing action: Command.RUN

[10:26:52] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:52] [Controller] ->  ** COMMAND RUN ** 
[10:26:52] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:53] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:53] [Controller] -> --MODE: Mode.ESCAPING
[10:26:53] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:53] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:53] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:53] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:53] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:53] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:53] [Controller] -> --Performing action: Command.RUN

[10:26:53] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:53] [Controller] ->  ** COMMAND RUN ** 
[10:26:53] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:53] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:53] [Controller] -> --MODE: Mode.ESCAPING
[10:26:53] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:53] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:53] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , E )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:53] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:53] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:53] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:53] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:53] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:53] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:53] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:54] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:54] [Controller] -> --MODE: Mode.ESCAPING
[10:26:54] [Controller] -> --CURRENT NODE: [ Name: M_n23, Type: Type.EXPLORED, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:54] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:26:54] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:26:54] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:26:54] [Controller] -> -- CURRENT NODE: [ Name: M_n23, Type: Type.DEAD_END, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ] IS DEAD END TOO

[10:26:54] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:26:54] [Controller] ->  >>>> REGRESSION <<<< 
[10:26:54] [Controller] ->  --CURRENT NODE: [ Name: M_n23, Type: Type.DEAD_END, Action: 0.0, Parent: M_n21, Left: None, Mid: None, Right: R_n24 ]
[10:26:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:54] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:54] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:54] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:26:54] [Controller] -> --Performing action: 180.0

[10:26:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:54] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:54] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:54] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 89.3628Â°

[10:26:56] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:26:56] [Controller] ->  ~~ perfect ~~ 
[10:26:56] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -178.3837
[10:26:56] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:26:56] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:56] [Controller] -> --MODE: Mode.ESCAPING
[10:26:56] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:56] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:26:56] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:56] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:56] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:26:56] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:26:56] [Controller] -> --Performing action: 180.0

[10:26:56] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:56] [Controller] ->  ** COMMAND RUN ** 
[10:26:56] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:57] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:57] [Controller] -> --MODE: Mode.ESCAPING
[10:26:57] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:57] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:57] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:57] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:57] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:57] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:57] [Controller] -> --Performing action: Command.RUN

[10:26:57] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:57] [Controller] ->  ** COMMAND RUN ** 
[10:26:57] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:57] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:57] [Controller] -> --MODE: Mode.ESCAPING
[10:26:57] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:57] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:57] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:57] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:57] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:26:57] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:57] [Controller] -> --Performing action: Command.RUN

[10:26:57] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:57] [Controller] ->  ** COMMAND RUN ** 
[10:26:57] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:26:57] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:57] [Controller] -> --MODE: Mode.ESCAPING
[10:26:57] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:57] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:57] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:57] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:57] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:57] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:57] [Controller] -> --Performing action: Command.RUN

[10:26:57] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:57] [Controller] ->  ** COMMAND RUN ** 
[10:26:57] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:58] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:58] [Controller] -> --MODE: Mode.ESCAPING
[10:26:58] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:58] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:26:58] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:58] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:58] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:58] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:26:58] [Controller] -> --Performing action: Command.RUN

[10:26:58] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:58] [Controller] ->  ** COMMAND RUN ** 
[10:26:58] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:26:58] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:58] [Controller] -> --MODE: Mode.ESCAPING
[10:26:58] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:58] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:26:58] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:58] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:58] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:26:58] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:26:58] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:26:58] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:58] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:26:58] [Controller] ->  ** STATE SENSING ARISE ** 
[10:26:59] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:26:59] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:26:59] [Controller] -> --MODE: Mode.ESCAPING
[10:26:59] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:26:59] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]

[10:26:59] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:26:59] [Controller] -> No DEAD END children, tree'll be updated on next loop

[10:26:59] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***
[10:26:59] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:26:59] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:26:59] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:26:59] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:26:59] [Controller] -> --Performing action: -90.0

[10:26:59] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:26:59] [Controller] ->  ** COMMAND ROTATE ** 

[10:26:59] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:26:59] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 90.3734Â°

[10:27:2] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:2] [Controller] ->  !! bad orientation !! 
[10:27:2] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -85.1785

[10:27:2] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:27:2] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:2] [Controller] ->  >> Rotate clockwise (RIGHT) of 5.1721Â°
[10:27:2] [Controller] ->  --ATTEMPT: 1 / 10
[10:27:2] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-5.1721, -84.8279, -90.0]

[10:27:4] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:4] [Controller] ->  ~~ perfect ~~ 
[10:27:4] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -89.4959
[10:27:4] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:27:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:4] [Controller] -> --MODE: Mode.EXPLORING
[10:27:4] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:4] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]
[10:27:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:4] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:4] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:27:4] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:27:4] [Controller] -> --Performing action: -90.0

[10:27:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:4] [Controller] ->  ** COMMAND RUN ** 
[10:27:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:4] [Controller] -> --MODE: Mode.EXPLORING
[10:27:4] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:4] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:4] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:4] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:4] [Controller] -> --Performing action: Command.RUN

[10:27:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:4] [Controller] ->  ** COMMAND RUN ** 
[10:27:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:5] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:5] [Controller] -> --MODE: Mode.EXPLORING
[10:27:5] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:5] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:5] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:5] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:5] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:5] [Controller] -> --Performing action: Command.RUN

[10:27:5] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:5] [Controller] ->  ** COMMAND RUN ** 
[10:27:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:5] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:5] [Controller] -> --MODE: Mode.EXPLORING
[10:27:5] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:5] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:5] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:5] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:5] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:5] [Controller] -> --Performing action: Command.RUN

[10:27:5] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:5] [Controller] ->  ** COMMAND RUN ** 
[10:27:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:5] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:5] [Controller] -> --MODE: Mode.EXPLORING
[10:27:5] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:5] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:5] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:5] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:5] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:5] [Controller] -> --Performing action: Command.RUN

[10:27:5] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:5] [Controller] ->  ** COMMAND RUN ** 
[10:27:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:6] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:6] [Controller] -> --MODE: Mode.EXPLORING
[10:27:6] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:6] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:6] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:6] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:6] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:6] [Controller] -> --Performing action: Command.RUN

[10:27:6] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:6] [Controller] ->  ** COMMAND RUN ** 
[10:27:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:6] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:6] [Controller] -> --MODE: Mode.EXPLORING
[10:27:6] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:6] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:6] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:6] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:6] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:6] [Controller] -> --Performing action: Command.RUN

[10:27:6] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:6] [Controller] ->  ** COMMAND RUN ** 
[10:27:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:6] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:6] [Controller] -> --MODE: Mode.EXPLORING
[10:27:6] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:6] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:6] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:6] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:6] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:6] [Controller] -> --Performing action: Command.RUN

[10:27:6] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:6] [Controller] ->  ** COMMAND RUN ** 
[10:27:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:7] [Controller] -> --MODE: Mode.EXPLORING
[10:27:7] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:7] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:7] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:7] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:7] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:7] [Controller] -> --Performing action: Command.RUN

[10:27:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:7] [Controller] ->  ** COMMAND RUN ** 
[10:27:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:7] [Controller] -> --MODE: Mode.EXPLORING
[10:27:7] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:7] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:7] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:7] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:7] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:7] [Controller] -> --Performing action: Command.RUN

[10:27:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:7] [Controller] ->  ** COMMAND RUN ** 
[10:27:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:7] [Controller] -> --MODE: Mode.EXPLORING
[10:27:7] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:7] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:7] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:7] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:7] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:7] [Controller] -> --Performing action: Command.RUN

[10:27:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:7] [Controller] ->  ** COMMAND RUN ** 
[10:27:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:8] [Controller] -> --MODE: Mode.EXPLORING
[10:27:8] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:8] [Controller] -> --ACTIONS: [<Command.STOP: 0>]
[10:27:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , O)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:8] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:8] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:8] [Controller] -> --Available actions: [<Command.STOP: 0>]
[10:27:8] [Controller] -> --Performing action: Command.STOP

[10:27:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:8] [Controller] ->  ** COMMAND STOP ** 
[10:27:8] [Controller] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[10:27:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:8] [Controller] -> --MODE: Mode.ESCAPING
[10:27:8] [Controller] -> --CURRENT NODE: [ Name: R_n22, Type: Type.OBSERVED, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:8] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:27:8] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:27:8] [Controller] -> *** DEAD END NODE DETECTED ***
[10:27:8] [Controller] -> -- CURRENT NODE: [ Name: R_n22, Type: Type.DEAD_END, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]

[10:27:8] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:27:8] [Controller] ->  >>>> REGRESSION <<<< 
[10:27:8] [Controller] ->  --CURRENT NODE: [ Name: R_n22, Type: Type.DEAD_END, Action: -90.0, Parent: M_n21, Left: None, Mid: None, Right: None ]
[10:27:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:8] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:8] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[10:27:8] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:27:8] [Controller] -> --Performing action: 90.0

[10:27:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:8] [Controller] ->  ** COMMAND ROTATE ** 

[10:27:8] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:8] [Controller] ->  >> Rotate clockwise (RIGHT) of 176.6681Â°

[10:27:12] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:12] [Controller] ->  ~~ perfect ~~ 
[10:27:12] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 88.0532
[10:27:12] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[10:27:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:13] [Controller] -> --MODE: Mode.ESCAPING
[10:27:13] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:13] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:27:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:13] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:13] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[10:27:13] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:27:13] [Controller] -> --Performing action: 90.0

[10:27:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:13] [Controller] ->  ** COMMAND RUN ** 
[10:27:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:13] [Controller] -> --MODE: Mode.ESCAPING
[10:27:13] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:13] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:13] [Controller] -> --Performing action: Command.RUN

[10:27:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:13] [Controller] ->  ** COMMAND RUN ** 
[10:27:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:13] [Controller] -> --MODE: Mode.ESCAPING
[10:27:13] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:13] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:13] [Controller] -> --Performing action: Command.RUN

[10:27:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:13] [Controller] ->  ** COMMAND RUN ** 
[10:27:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:14] [Controller] -> --MODE: Mode.ESCAPING
[10:27:14] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:14] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:14] [Controller] -> --Performing action: Command.RUN

[10:27:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:14] [Controller] ->  ** COMMAND RUN ** 
[10:27:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:14] [Controller] -> --MODE: Mode.ESCAPING
[10:27:14] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:14] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:14] [Controller] -> --Performing action: Command.RUN

[10:27:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:14] [Controller] ->  ** COMMAND RUN ** 
[10:27:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:14] [Controller] -> --MODE: Mode.ESCAPING
[10:27:14] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:14] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:14] [Controller] -> --Performing action: Command.RUN

[10:27:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:14] [Controller] ->  ** COMMAND RUN ** 
[10:27:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:15] [Controller] -> --MODE: Mode.ESCAPING
[10:27:15] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:15] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:15] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:15] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:15] [Controller] -> --Performing action: Command.RUN

[10:27:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:15] [Controller] ->  ** COMMAND RUN ** 
[10:27:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:15] [Controller] -> --MODE: Mode.ESCAPING
[10:27:15] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:15] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:15] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:15] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:15] [Controller] -> --Performing action: Command.RUN

[10:27:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:15] [Controller] ->  ** COMMAND RUN ** 
[10:27:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:15] [Controller] -> --MODE: Mode.ESCAPING
[10:27:15] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:15] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:15] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:15] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:15] [Controller] -> --Performing action: Command.RUN

[10:27:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:15] [Controller] ->  ** COMMAND RUN ** 
[10:27:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:16] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:16] [Controller] -> --MODE: Mode.ESCAPING
[10:27:16] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:16] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:16] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:16] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:16] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:16] [Controller] -> --Performing action: Command.RUN

[10:27:16] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:16] [Controller] ->  ** COMMAND RUN ** 
[10:27:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:16] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:16] [Controller] -> --MODE: Mode.ESCAPING
[10:27:16] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:16] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:27:16] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , E )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:16] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:16] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:16] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:27:16] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:27:16] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:16] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:27:16] [Controller] ->  ** STATE SENSING ARISE ** 
[10:27:17] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:27:17] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:17] [Controller] -> --MODE: Mode.ESCAPING
[10:27:17] [Controller] -> --CURRENT NODE: [ Name: M_n21, Type: Type.EXPLORED, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:17] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:27:17] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:27:17] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:27:17] [Controller] -> -- CURRENT NODE: [ Name: M_n21, Type: Type.DEAD_END, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ] IS DEAD END TOO

[10:27:17] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:27:17] [Controller] ->  >>>> REGRESSION <<<< 
[10:27:17] [Controller] ->  --CURRENT NODE: [ Name: M_n21, Type: Type.DEAD_END, Action: 0.0, Parent: R_n18, Left: None, Mid: M_n23, Right: R_n22 ]
[10:27:17] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:17] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:17] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:27:17] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:27:17] [Controller] -> --Performing action: 180.0

[10:27:17] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:17] [Controller] ->  ** COMMAND ROTATE ** 

[10:27:17] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:17] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 91.9529Â°

[10:27:19] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:19] [Controller] ->  !! bad orientation !! 
[10:27:19] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -177.0604

[10:27:19] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:27:20] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:20] [Controller] ->  >> Rotate clockwise (RIGHT) of 2.993Â°
[10:27:20] [Controller] ->  --ATTEMPT: 1 / 10
[10:27:20] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-2.993, -177.007, 180.0]

[10:27:20] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:20] [Controller] ->  ~~ perfect ~~ 
[10:27:20] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.4779
[10:27:20] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:27:21] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:21] [Controller] -> --MODE: Mode.ESCAPING
[10:27:21] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:21] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:27:21] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:21] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:21] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:27:21] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:27:21] [Controller] -> --Performing action: 180.0

[10:27:21] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:21] [Controller] ->  ** COMMAND RUN ** 
[10:27:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:21] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:21] [Controller] -> --MODE: Mode.ESCAPING
[10:27:21] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:21] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:21] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:21] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:21] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:21] [Controller] -> --Performing action: Command.RUN

[10:27:21] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:21] [Controller] ->  ** COMMAND RUN ** 
[10:27:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:21] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:21] [Controller] -> --MODE: Mode.ESCAPING
[10:27:21] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:21] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:21] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:21] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:21] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:21] [Controller] -> --Performing action: Command.RUN

[10:27:21] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:21] [Controller] ->  ** COMMAND RUN ** 
[10:27:21] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:22] [Controller] -> --MODE: Mode.ESCAPING
[10:27:22] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:22] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:22] [Controller] -> --Performing action: Command.RUN

[10:27:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:22] [Controller] ->  ** COMMAND RUN ** 
[10:27:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:22] [Controller] -> --MODE: Mode.ESCAPING
[10:27:22] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:22] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:22] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:22] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:22] [Controller] -> --Performing action: Command.RUN

[10:27:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:22] [Controller] ->  ** COMMAND RUN ** 
[10:27:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:22] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:22] [Controller] -> --MODE: Mode.ESCAPING
[10:27:22] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:22] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:27:22] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:22] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:22] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:22] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:27:22] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:27:22] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:22] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:27:23] [Controller] ->  ** STATE SENSING ARISE ** 
[10:27:23] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:27:24] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:24] [Controller] -> --MODE: Mode.ESCAPING
[10:27:24] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:24] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]

[10:27:24] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:27:24] [Controller] -> No DEAD END children, tree'll be updated on next loop

[10:27:24] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***
[10:27:24] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:24] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:24] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:27:24] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:27:24] [Controller] -> --Performing action: -90.0

[10:27:24] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:24] [Controller] ->  ** COMMAND ROTATE ** 

[10:27:24] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:24] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 91.8671Â°

[10:27:26] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:26] [Controller] ->  !! bad orientation !! 
[10:27:26] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -87.132

[10:27:26] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:27:26] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:26] [Controller] ->  >> Rotate clockwise (RIGHT) of 2.9828Â°
[10:27:26] [Controller] ->  --ATTEMPT: 1 / 10
[10:27:26] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-2.9828, -87.0172, -90.0]

[10:27:27] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:27] [Controller] ->  ~~ perfect ~~ 
[10:27:27] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -89.5432
[10:27:27] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:27:28] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:28] [Controller] -> --MODE: Mode.EXPLORING
[10:27:28] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:28] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]
[10:27:28] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:28] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:28] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:27:28] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:27:28] [Controller] -> --Performing action: -90.0

[10:27:28] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:28] [Controller] ->  ** COMMAND RUN ** 
[10:27:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:28] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:28] [Controller] -> --MODE: Mode.EXPLORING
[10:27:28] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:28] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:28] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:28] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:28] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:28] [Controller] -> --Performing action: Command.RUN

[10:27:28] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:28] [Controller] ->  ** COMMAND RUN ** 
[10:27:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:28] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:28] [Controller] -> --MODE: Mode.EXPLORING
[10:27:28] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:28] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:28] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:28] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:28] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:28] [Controller] -> --Performing action: Command.RUN

[10:27:28] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:28] [Controller] ->  ** COMMAND RUN ** 
[10:27:28] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:29] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:29] [Controller] -> --MODE: Mode.EXPLORING
[10:27:29] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:29] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:29] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:29] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:29] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:29] [Controller] -> --Performing action: Command.RUN

[10:27:29] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:29] [Controller] ->  ** COMMAND RUN ** 
[10:27:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:29] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:29] [Controller] -> --MODE: Mode.EXPLORING
[10:27:29] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:29] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:29] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:29] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:29] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:29] [Controller] -> --Performing action: Command.RUN

[10:27:29] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:29] [Controller] ->  ** COMMAND RUN ** 
[10:27:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:29] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:29] [Controller] -> --MODE: Mode.EXPLORING
[10:27:29] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:29] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:29] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:29] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:29] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:29] [Controller] -> --Performing action: Command.RUN

[10:27:29] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:29] [Controller] ->  ** COMMAND RUN ** 
[10:27:29] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:30] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:30] [Controller] -> --MODE: Mode.EXPLORING
[10:27:30] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:30] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:30] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:30] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:30] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:30] [Controller] -> --Performing action: Command.RUN

[10:27:30] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:30] [Controller] ->  ** COMMAND RUN ** 
[10:27:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:30] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:30] [Controller] -> --MODE: Mode.EXPLORING
[10:27:30] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:30] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:30] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:30] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:30] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:30] [Controller] -> --Performing action: Command.RUN

[10:27:30] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:30] [Controller] ->  ** COMMAND RUN ** 
[10:27:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:30] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:30] [Controller] -> --MODE: Mode.EXPLORING
[10:27:30] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:30] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:30] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:30] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:30] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:30] [Controller] -> --Performing action: Command.RUN

[10:27:30] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:30] [Controller] ->  ** COMMAND RUN ** 
[10:27:30] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:31] [Controller] -> --MODE: Mode.EXPLORING
[10:27:31] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:31] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:31] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:31] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:31] [Controller] -> --Performing action: Command.RUN

[10:27:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:31] [Controller] ->  ** COMMAND RUN ** 
[10:27:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:31] [Controller] -> --MODE: Mode.EXPLORING
[10:27:31] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:31] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:31] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:31] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:31] [Controller] -> --Performing action: Command.RUN

[10:27:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:31] [Controller] ->  ** COMMAND RUN ** 
[10:27:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:31] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:31] [Controller] -> --MODE: Mode.EXPLORING
[10:27:31] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:31] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:31] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:31] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:31] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:31] [Controller] -> --Performing action: Command.RUN

[10:27:31] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:31] [Controller] ->  ** COMMAND RUN ** 
[10:27:31] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:32] [Controller] -> --MODE: Mode.EXPLORING
[10:27:32] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:32] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:32] [Controller] -> --Performing action: Command.RUN

[10:27:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:32] [Controller] ->  ** COMMAND RUN ** 
[10:27:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:32] [Controller] -> --MODE: Mode.EXPLORING
[10:27:32] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:32] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:32] [Controller] -> --Performing action: Command.RUN

[10:27:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:32] [Controller] ->  ** COMMAND RUN ** 
[10:27:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:32] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:32] [Controller] -> --MODE: Mode.EXPLORING
[10:27:32] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:32] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:32] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:32] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:32] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:32] [Controller] -> --Performing action: Command.RUN

[10:27:32] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:32] [Controller] ->  ** COMMAND RUN ** 
[10:27:32] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:33] [Controller] -> --MODE: Mode.EXPLORING
[10:27:33] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:33] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:33] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:33] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:33] [Controller] -> --Performing action: Command.RUN

[10:27:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:33] [Controller] ->  ** COMMAND RUN ** 
[10:27:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:33] [Controller] -> --MODE: Mode.EXPLORING
[10:27:33] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:33] [Controller] -> --ACTIONS: [<Command.STOP: 0>]
[10:27:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , O)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:33] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:33] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:33] [Controller] -> --Available actions: [<Command.STOP: 0>]
[10:27:33] [Controller] -> --Performing action: Command.STOP

[10:27:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:33] [Controller] ->  ** COMMAND STOP ** 
[10:27:33] [Controller] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[10:27:33] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:33] [Controller] -> --MODE: Mode.ESCAPING
[10:27:33] [Controller] -> --CURRENT NODE: [ Name: R_n20, Type: Type.OBSERVED, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:33] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:27:33] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:27:33] [Controller] -> *** DEAD END NODE DETECTED ***
[10:27:33] [Controller] -> -- CURRENT NODE: [ Name: R_n20, Type: Type.DEAD_END, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]

[10:27:33] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:27:33] [Controller] ->  >>>> REGRESSION <<<< 
[10:27:33] [Controller] ->  --CURRENT NODE: [ Name: R_n20, Type: Type.DEAD_END, Action: -90.0, Parent: R_n18, Left: None, Mid: None, Right: None ]
[10:27:33] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:33] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:33] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[10:27:33] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:27:33] [Controller] -> --Performing action: 90.0

[10:27:33] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:33] [Controller] ->  ** COMMAND ROTATE ** 

[10:27:33] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:33] [Controller] ->  >> Rotate clockwise (RIGHT) of 177.9528Â°

[10:27:37] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:38] [Controller] ->  ~~ perfect ~~ 
[10:27:38] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 88.9736
[10:27:38] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[10:27:38] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:38] [Controller] -> --MODE: Mode.ESCAPING
[10:27:38] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:38] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:27:38] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:38] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:38] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[10:27:38] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:27:38] [Controller] -> --Performing action: 90.0

[10:27:38] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:38] [Controller] ->  ** COMMAND RUN ** 
[10:27:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:38] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:38] [Controller] -> --MODE: Mode.ESCAPING
[10:27:38] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:38] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:38] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:38] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:38] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:38] [Controller] -> --Performing action: Command.RUN

[10:27:38] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:38] [Controller] ->  ** COMMAND RUN ** 
[10:27:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:38] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:38] [Controller] -> --MODE: Mode.ESCAPING
[10:27:38] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:38] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:38] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:38] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:38] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:38] [Controller] -> --Performing action: Command.RUN

[10:27:38] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:38] [Controller] ->  ** COMMAND RUN ** 
[10:27:38] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:39] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:39] [Controller] -> --MODE: Mode.ESCAPING
[10:27:39] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:39] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:39] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:39] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:39] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:39] [Controller] -> --Performing action: Command.RUN

[10:27:39] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:39] [Controller] ->  ** COMMAND RUN ** 
[10:27:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:39] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:39] [Controller] -> --MODE: Mode.ESCAPING
[10:27:39] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:39] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:39] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:39] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:39] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:39] [Controller] -> --Performing action: Command.RUN

[10:27:39] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:39] [Controller] ->  ** COMMAND RUN ** 
[10:27:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:39] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:39] [Controller] -> --MODE: Mode.ESCAPING
[10:27:39] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:39] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:39] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:39] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:39] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:39] [Controller] -> --Performing action: Command.RUN

[10:27:39] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:39] [Controller] ->  ** COMMAND RUN ** 
[10:27:39] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:40] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:40] [Controller] -> --MODE: Mode.ESCAPING
[10:27:40] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:40] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:40] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:40] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:40] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:40] [Controller] -> --Performing action: Command.RUN

[10:27:40] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:40] [Controller] ->  ** COMMAND RUN ** 
[10:27:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:40] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:40] [Controller] -> --MODE: Mode.ESCAPING
[10:27:40] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:40] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:40] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:40] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:40] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:40] [Controller] -> --Performing action: Command.RUN

[10:27:40] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:40] [Controller] ->  ** COMMAND RUN ** 
[10:27:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:40] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:40] [Controller] -> --MODE: Mode.ESCAPING
[10:27:40] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:40] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:40] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:40] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:40] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:40] [Controller] -> --Performing action: Command.RUN

[10:27:40] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:40] [Controller] ->  ** COMMAND RUN ** 
[10:27:40] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:41] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:41] [Controller] -> --MODE: Mode.ESCAPING
[10:27:41] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:41] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:41] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:41] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:41] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:41] [Controller] -> --Performing action: Command.RUN

[10:27:41] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:41] [Controller] ->  ** COMMAND RUN ** 
[10:27:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:41] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:41] [Controller] -> --MODE: Mode.ESCAPING
[10:27:41] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:41] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:41] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:41] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:41] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:41] [Controller] -> --Performing action: Command.RUN

[10:27:41] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:41] [Controller] ->  ** COMMAND RUN ** 
[10:27:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:41] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:41] [Controller] -> --MODE: Mode.ESCAPING
[10:27:41] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:41] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:41] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:41] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:41] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:41] [Controller] -> --Performing action: Command.RUN

[10:27:41] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:41] [Controller] ->  ** COMMAND RUN ** 
[10:27:41] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:42] [Controller] -> --MODE: Mode.ESCAPING
[10:27:42] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:42] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:42] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:42] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:42] [Controller] -> --Performing action: Command.RUN

[10:27:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:42] [Controller] ->  ** COMMAND RUN ** 
[10:27:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:42] [Controller] -> --MODE: Mode.ESCAPING
[10:27:42] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:42] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:42] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:42] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:42] [Controller] -> --Performing action: Command.RUN

[10:27:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:42] [Controller] ->  ** COMMAND RUN ** 
[10:27:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:42] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:42] [Controller] -> --MODE: Mode.ESCAPING
[10:27:42] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:42] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:42] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:42] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:42] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:42] [Controller] -> --Performing action: Command.RUN

[10:27:42] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:42] [Controller] ->  ** COMMAND RUN ** 
[10:27:42] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:43] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:43] [Controller] -> --MODE: Mode.ESCAPING
[10:27:43] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:43] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:27:43] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , E)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:43] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:43] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:43] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:27:43] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:27:43] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:43] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:27:43] [Controller] ->  ** STATE SENSING ARISE ** 
[10:27:44] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:27:44] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:44] [Controller] -> --MODE: Mode.ESCAPING
[10:27:44] [Controller] -> --CURRENT NODE: [ Name: R_n18, Type: Type.EXPLORED, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:44] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:27:44] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:27:44] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:27:44] [Controller] -> -- CURRENT NODE: [ Name: R_n18, Type: Type.DEAD_END, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ] IS DEAD END TOO

[10:27:44] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:27:44] [Controller] ->  >>>> REGRESSION <<<< 
[10:27:44] [Controller] ->  --CURRENT NODE: [ Name: R_n18, Type: Type.DEAD_END, Action: 0.0, Parent: M_n17, Left: None, Mid: M_n21, Right: R_n20 ]
[10:27:44] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:44] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:44] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:27:44] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:27:44] [Controller] -> --Performing action: 180.0

[10:27:44] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:44] [Controller] ->  ** COMMAND ROTATE ** 

[10:27:44] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:44] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 93.4576Â°

[10:27:46] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:46] [Controller] ->  !! bad orientation !! 
[10:27:46] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -177.0938

[10:27:46] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:27:46] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:46] [Controller] ->  >> Rotate clockwise (RIGHT) of 3.0017Â°
[10:27:46] [Controller] ->  --ATTEMPT: 1 / 10
[10:27:46] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-3.0017, -176.9983, 180.0]

[10:27:47] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:47] [Controller] ->  ~~ perfect ~~ 
[10:27:47] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.5796
[10:27:47] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:27:47] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:47] [Controller] -> --MODE: Mode.ESCAPING
[10:27:47] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:47] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:27:47] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:47] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:47] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:27:47] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:27:47] [Controller] -> --Performing action: 180.0

[10:27:47] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:47] [Controller] ->  ** COMMAND RUN ** 
[10:27:47] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:48] [Controller] -> --MODE: Mode.ESCAPING
[10:27:48] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:48] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:48] [Controller] -> --Performing action: Command.RUN

[10:27:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:48] [Controller] ->  ** COMMAND RUN ** 
[10:27:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:48] [Controller] -> --MODE: Mode.ESCAPING
[10:27:48] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:48] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:48] [Controller] -> --Performing action: Command.RUN

[10:27:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:48] [Controller] ->  ** COMMAND RUN ** 
[10:27:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:48] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:48] [Controller] -> --MODE: Mode.ESCAPING
[10:27:48] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:48] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:48] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:48] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:48] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:48] [Controller] -> --Performing action: Command.RUN

[10:27:48] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:48] [Controller] ->  ** COMMAND RUN ** 
[10:27:48] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:49] [Controller] -> --MODE: Mode.ESCAPING
[10:27:49] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:49] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:49] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:49] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:49] [Controller] -> --Performing action: Command.RUN

[10:27:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:49] [Controller] ->  ** COMMAND RUN ** 
[10:27:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:49] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:49] [Controller] -> --MODE: Mode.ESCAPING
[10:27:49] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:49] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:27:49] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , E )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:49] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:49] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:49] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:27:49] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:27:49] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:49] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:27:49] [Controller] ->  ** STATE SENSING ARISE ** 
[10:27:50] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:27:50] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:50] [Controller] -> --MODE: Mode.ESCAPING
[10:27:50] [Controller] -> --CURRENT NODE: [ Name: M_n17, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:50] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]

[10:27:50] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:27:50] [Controller] -> *** ALL CHILDREN ARE DEAD END NODE ***
[10:27:50] [Controller] -> -- CURRENT NODE: [ Name: M_n17, Type: Type.DEAD_END, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ] IS DEAD END TOO

[10:27:50] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[10:27:50] [Controller] ->  >>>> REGRESSION <<<< 
[10:27:50] [Controller] ->  --CURRENT NODE: [ Name: M_n17, Type: Type.DEAD_END, Action: 90.0, Parent: L_n15, Left: L_n19, Mid: None, Right: R_n18 ]
[10:27:50] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:50] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:50] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:27:50] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:27:50] [Controller] -> --Performing action: -90.0

[10:27:50] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:50] [Controller] ->  ** COMMAND ROTATE ** 

[10:27:50] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:50] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 91.4496Â°

[10:27:52] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:52] [Controller] ->  !! bad orientation !! 
[10:27:52] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -86.8257

[10:27:52] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:27:52] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:52] [Controller] ->  >> Rotate clockwise (RIGHT) of 3.2109Â°
[10:27:52] [Controller] ->  --ATTEMPT: 1 / 10
[10:27:52] [Controller] -> [Degrees_to_do, curr_g, final_g] = [-3.2109, -86.7891, -90.0]

[10:27:53] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:53] [Controller] ->  ~~ perfect ~~ 
[10:27:53] [Controller] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -89.4005
[10:27:53] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:27:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:54] [Controller] -> --MODE: Mode.ESCAPING
[10:27:54] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:54] [Controller] -> --ACTIONS: [<Compass.SUD: -90.0>]
[10:27:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:54] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:54] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:27:54] [Controller] -> --Available actions: [<Compass.SUD: -90.0>]
[10:27:54] [Controller] -> --Performing action: -90.0

[10:27:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:54] [Controller] ->  ** COMMAND RUN ** 
[10:27:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:54] [Controller] -> --MODE: Mode.ESCAPING
[10:27:54] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:54] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:54] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:54] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:54] [Controller] -> --Performing action: Command.RUN

[10:27:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:54] [Controller] ->  ** COMMAND RUN ** 
[10:27:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:54] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:54] [Controller] -> --MODE: Mode.ESCAPING
[10:27:54] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:54] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:54] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:54] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:27:54] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:54] [Controller] -> --Performing action: Command.RUN

[10:27:54] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:54] [Controller] ->  ** COMMAND RUN ** 
[10:27:54] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:27:55] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:55] [Controller] -> --MODE: Mode.ESCAPING
[10:27:55] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:55] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:55] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:55] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:55] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:55] [Controller] -> --Performing action: Command.RUN

[10:27:55] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:55] [Controller] ->  ** COMMAND RUN ** 
[10:27:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:55] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:55] [Controller] -> --MODE: Mode.ESCAPING
[10:27:55] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:55] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:27:55] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:55] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:55] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:27:55] [Controller] -> --Performing action: Command.RUN

[10:27:55] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:55] [Controller] ->  ** COMMAND RUN ** 
[10:27:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:27:55] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:55] [Controller] -> --MODE: Mode.ESCAPING
[10:27:55] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:55] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:27:55] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:55] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:55] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:27:55] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:27:55] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:27:55] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:55] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:27:56] [Controller] ->  ** STATE SENSING ARISE ** 
[10:27:56] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:27:57] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:27:57] [Controller] -> --MODE: Mode.ESCAPING
[10:27:57] [Controller] -> --CURRENT NODE: [ Name: L_n15, Type: Type.EXPLORED, Action: 90.0, Parent: R_n14, Left: L_n16, Mid: M_n17, Right: None ]
[10:27:57] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]

[10:27:57] [Controller] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[10:27:57] [Controller] -> No DEAD END children, tree'll be updated on next loop

[10:27:57] [Controller] -> *** 2) UPDATING TREE (MODE ESCAPING) ***
[10:27:57] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:27:57] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:27:57] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:27:57] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:27:57] [Controller] -> --Performing action: 180.0

[10:27:57] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:27:57] [Controller] ->  ** COMMAND ROTATE ** 

[10:27:57] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:57] [Controller] ->  >> Rotate clockwise (RIGHT) of 88.6138Â°

[10:27:59] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:27:59] [Controller] ->  !! bad orientation !! 
[10:27:59] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: 175.7099

[10:27:59] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:27:59] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:27:59] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 4.3259Â°
[10:27:59] [Controller] ->  --ATTEMPT: 1 / 10
[10:27:59] [Controller] -> [Degrees_to_do, curr_g, final_g] = [4.3259, 175.6741, 180.0]

[10:28:0] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:28:0] [Controller] ->  ~~ perfect ~~ 
[10:28:0] [Controller] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.4261
[10:28:0] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:28:0] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:0] [Controller] -> --MODE: Mode.EXPLORING
[10:28:0] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:0] [Controller] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[10:28:0] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:0] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:0] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:28:0] [Controller] -> --Available actions: [<Compass.OVEST: 180.0>]
[10:28:0] [Controller] -> --Performing action: 180.0

[10:28:0] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:0] [Controller] ->  ** COMMAND RUN ** 
[10:28:0] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:28:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:1] [Controller] -> --MODE: Mode.EXPLORING
[10:28:1] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:1] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:28:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:1] [Controller] -> --Performing action: Command.RUN

[10:28:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:1] [Controller] ->  ** COMMAND RUN ** 
[10:28:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:28:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:1] [Controller] -> --MODE: Mode.EXPLORING
[10:28:1] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:1] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:28:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:1] [Controller] -> --Performing action: Command.RUN

[10:28:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:1] [Controller] ->  ** COMMAND RUN ** 
[10:28:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:28:1] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:1] [Controller] -> --MODE: Mode.EXPLORING
[10:28:1] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:1] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:1] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:1] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:1] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:1] [Controller] -> --Performing action: Command.RUN

[10:28:1] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:1] [Controller] ->  ** COMMAND RUN ** 
[10:28:1] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:2] [Controller] -> --MODE: Mode.EXPLORING
[10:28:2] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:2] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:2] [Controller] -> --Performing action: Command.RUN

[10:28:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:2] [Controller] ->  ** COMMAND RUN ** 
[10:28:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:2] [Controller] -> --MODE: Mode.EXPLORING
[10:28:2] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:2] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:2] [Controller] -> --Performing action: Command.RUN

[10:28:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:2] [Controller] ->  ** COMMAND RUN ** 
[10:28:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:2] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:2] [Controller] -> --MODE: Mode.EXPLORING
[10:28:2] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:2] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:2] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:2] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:2] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:2] [Controller] -> --Performing action: Command.RUN

[10:28:2] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:2] [Controller] ->  ** COMMAND RUN ** 
[10:28:2] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:3] [Controller] -> --MODE: Mode.EXPLORING
[10:28:3] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:3] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:3] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:3] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:3] [Controller] -> --Performing action: Command.RUN

[10:28:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:3] [Controller] ->  ** COMMAND RUN ** 
[10:28:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:3] [Controller] -> --MODE: Mode.EXPLORING
[10:28:3] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:3] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:3] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:3] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:3] [Controller] -> --Performing action: Command.RUN

[10:28:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:3] [Controller] ->  ** COMMAND RUN ** 
[10:28:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:3] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:3] [Controller] -> --MODE: Mode.EXPLORING
[10:28:3] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:3] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:3] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:3] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:3] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:3] [Controller] -> --Performing action: Command.RUN

[10:28:3] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:3] [Controller] ->  ** COMMAND RUN ** 
[10:28:3] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:4] [Controller] -> --MODE: Mode.EXPLORING
[10:28:4] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:4] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:4] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:4] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:4] [Controller] -> --Performing action: Command.RUN

[10:28:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:4] [Controller] ->  ** COMMAND RUN ** 
[10:28:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:4] [Controller] -> --MODE: Mode.EXPLORING
[10:28:4] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:4] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:4] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:4] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:4] [Controller] -> --Performing action: Command.RUN

[10:28:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:4] [Controller] ->  ** COMMAND RUN ** 
[10:28:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:4] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:4] [Controller] -> --MODE: Mode.EXPLORING
[10:28:4] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:4] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:4] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:4] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:4] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:4] [Controller] -> --Performing action: Command.RUN

[10:28:4] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:4] [Controller] ->  ** COMMAND RUN ** 
[10:28:4] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:5] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:5] [Controller] -> --MODE: Mode.EXPLORING
[10:28:5] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:5] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:5] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:5] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:5] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:5] [Controller] -> --Performing action: Command.RUN

[10:28:5] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:5] [Controller] ->  ** COMMAND RUN ** 
[10:28:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:5] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:5] [Controller] -> --MODE: Mode.EXPLORING
[10:28:5] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:5] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:5] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:5] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:5] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:5] [Controller] -> --Performing action: Command.RUN

[10:28:5] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:5] [Controller] ->  ** COMMAND RUN ** 
[10:28:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:5] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:5] [Controller] -> --MODE: Mode.EXPLORING
[10:28:5] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:5] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:5] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:5] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:5] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:5] [Controller] -> --Performing action: Command.RUN

[10:28:5] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:5] [Controller] ->  ** COMMAND RUN ** 
[10:28:5] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:6] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:6] [Controller] -> --MODE: Mode.EXPLORING
[10:28:6] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:6] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:6] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:6] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:6] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:6] [Controller] -> --Performing action: Command.RUN

[10:28:6] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:6] [Controller] ->  ** COMMAND RUN ** 
[10:28:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:6] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:6] [Controller] -> --MODE: Mode.EXPLORING
[10:28:6] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:6] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:6] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:6] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:6] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:6] [Controller] -> --Performing action: Command.RUN

[10:28:6] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:6] [Controller] ->  ** COMMAND RUN ** 
[10:28:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:6] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:6] [Controller] -> --MODE: Mode.EXPLORING
[10:28:6] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:6] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:6] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:6] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:6] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:6] [Controller] -> --Performing action: Command.RUN

[10:28:6] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:6] [Controller] ->  ** COMMAND RUN ** 
[10:28:6] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:7] [Controller] -> --MODE: Mode.EXPLORING
[10:28:7] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:7] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:7] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:7] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:7] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:7] [Controller] -> --Performing action: Command.RUN

[10:28:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:7] [Controller] ->  ** COMMAND RUN ** 
[10:28:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:7] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:7] [Controller] -> --MODE: Mode.EXPLORING
[10:28:7] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:7] [Controller] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[10:28:7] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , O)', 'M_n17': ' (M , N , D )'}, 'L_n16': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:7] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:7] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:7] [Controller] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[10:28:7] [Controller] -> --Performing action: Command.GO_TO_JUNCTION

[10:28:7] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:7] [Controller] ->  ** JOINING THE JUNCTION ** 
[10:28:7] [Controller] ->  ** STATE SENSING ARISE ** 
[10:28:8] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[10:28:8] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:8] [Controller] -> --MODE: Mode.EXPLORING
[10:28:8] [Controller] -> --CURRENT NODE: [ Name: L_n16, Type: Type.OBSERVED, Action: 180.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[10:28:8] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]

[10:28:8] [Controller] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[10:28:8] [Controller] -> ADDED RIGHT

[10:28:8] [Controller] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[10:28:8] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:8] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:8] [Controller] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[10:28:8] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:28:8] [Controller] -> --Performing action: 90.0

[10:28:8] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:8] [Controller] ->  ** COMMAND ROTATE ** 

[10:28:8] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:28:8] [Controller] ->  >> Rotate clockwise (RIGHT) of 89.3378Â°

[10:28:10] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:28:10] [Controller] ->  !! bad orientation !! 
[10:28:10] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 85.7988

[10:28:10] [Controller] ->  ** ADJUSTING ORIENTATION ** 

[10:28:11] [Controller] ->  ** BEST ANGLE COMPUTATION ** 
[10:28:11] [Controller] ->  >> Rotate anti-clockwise (LEFT) of 4.2282Â°
[10:28:11] [Controller] ->  --ATTEMPT: 1 / 10
[10:28:11] [Controller] -> [Degrees_to_do, curr_g, final_g] = [4.2282, 85.7718, 90.0]

[10:28:12] [Controller] ->  ** ORIENTATION CHECKING ** 
[10:28:12] [Controller] ->  ~~ perfect ~~ 
[10:28:12] [Controller] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 89.4835
[10:28:12] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[10:28:12] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:12] [Controller] -> --MODE: Mode.EXPLORING
[10:28:12] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:12] [Controller] -> --ACTIONS: [<Compass.NORD: 90.0>]
[10:28:12] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:12] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:12] [Controller] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[10:28:12] [Controller] -> --Available actions: [<Compass.NORD: 90.0>]
[10:28:12] [Controller] -> --Performing action: 90.0

[10:28:12] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:12] [Controller] ->  ** COMMAND RUN ** 
[10:28:12] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:28:12] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:12] [Controller] -> --MODE: Mode.EXPLORING
[10:28:12] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:12] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:12] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:12] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:12] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:28:12] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:12] [Controller] -> --Performing action: Command.RUN

[10:28:12] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:12] [Controller] ->  ** COMMAND RUN ** 
[10:28:12] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:28:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:13] [Controller] -> --MODE: Mode.EXPLORING
[10:28:13] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:13] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[10:28:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:13] [Controller] -> --Performing action: Command.RUN

[10:28:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:13] [Controller] ->  ** COMMAND RUN ** 
[10:28:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[10:28:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:13] [Controller] -> --MODE: Mode.EXPLORING
[10:28:13] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:13] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:13] [Controller] -> --Performing action: Command.RUN

[10:28:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:13] [Controller] ->  ** COMMAND RUN ** 
[10:28:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:13] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:13] [Controller] -> --MODE: Mode.EXPLORING
[10:28:13] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:13] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:13] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:13] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:13] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:13] [Controller] -> --Performing action: Command.RUN

[10:28:13] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:13] [Controller] ->  ** COMMAND RUN ** 
[10:28:13] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:14] [Controller] -> --MODE: Mode.EXPLORING
[10:28:14] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:14] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:14] [Controller] -> --Performing action: Command.RUN

[10:28:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:14] [Controller] ->  ** COMMAND RUN ** 
[10:28:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:14] [Controller] -> --MODE: Mode.EXPLORING
[10:28:14] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:14] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:14] [Controller] -> --Performing action: Command.RUN

[10:28:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:14] [Controller] ->  ** COMMAND RUN ** 
[10:28:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:14] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:14] [Controller] -> --MODE: Mode.EXPLORING
[10:28:14] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:14] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:14] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:14] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:14] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:14] [Controller] -> --Performing action: Command.RUN

[10:28:14] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:14] [Controller] ->  ** COMMAND RUN ** 
[10:28:14] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[10:28:15] [Controller] -> !!! NEW ALGORTHM CYCLE !!!
[10:28:15] [Controller] -> --MODE: Mode.EXPLORING
[10:28:15] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:15] [Controller] -> --ACTIONS: [<Command.RUN: 1>]
[10:28:15] [Controller] -> --CURRENT TREE: {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'L_n16': ' (L , O , E)', 'M_n17': ' (M , N , D )'}, 'L_n16': {'R_n29': ' (R , N , O)'}, 'R_n29': {}, 'M_n17': {'L_n19': ' (L , O , D)', 'R_n18': ' (R , E , D)'}, 'L_n19': {}, 'R_n18': {'M_n21': ' (M , E , D )', 'R_n20': ' (R , S , D)'}, 'M_n21': {'M_n23': ' (M , E , D )', 'R_n22': ' (R , S , D)'}, 'M_n23': {'R_n24': ' (R , S , D)'}, 'R_n24': {'R_n25': ' (R , O , D)'}, 'R_n25': {'L_n26': ' (L , S , D)'}, 'L_n26': {'L_n27': ' (L , E , D)'}, 'L_n27': {'L_n28': ' (L , N , D)'}, 'L_n28': {}, 'R_n22': {}, 'R_n20': {}, 'R_n10': {}}
[10:28:15] [Controller] -> --CURRENT NODE: [ Name: R_n29, Type: Type.OBSERVED, Action: 90.0, Parent: L_n16, Left: None, Mid: None, Right: None ]
[10:28:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:15] [Controller] -> --Available actions: [<Command.RUN: 1>]
[10:28:15] [Controller] -> --Performing action: Command.RUN

[10:28:15] [Controller] ->  ~~~ [ACTION TIME] ~~~ 
[10:28:15] [Controller] ->  ** COMMAND RUN ** 
[10:28:15] [Controller] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[10:28:15] [PhysicalBody] -> Coppelia connection stopped!

