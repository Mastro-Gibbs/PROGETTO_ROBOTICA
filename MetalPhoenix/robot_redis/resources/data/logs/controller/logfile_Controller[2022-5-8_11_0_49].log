[11:0:49] [Controller][INFO] -> LOG SEVERYTY: HIGH

[11:0:49] [Controller][INFO] -> CONTROLLER LAUNCHED

[11:0:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:49] [Controller][INFO] -> --ACTIONS: [<Command.START: -1>]
[11:0:49] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[11:0:49] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:49][NOHEADER] -> {'root': {}}

[11:0:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[11:0:49] [Controller][INFO] -> --Available actions: [<Command.START: -1>]
[11:0:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)
[11:0:49] [Controller][DEBUG] -> --Performing action: Command.START

[11:0:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:49] [Controller][DEBUG] ->  ** COMMAND START ** 
[11:0:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)

[11:0:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:49] [Controller][DEBUG] -> Control policy EXPLORING
[11:0:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:49] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[11:0:49] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]

[11:0:49] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:0:49] [Controller][INFO] -> ADDED MID

[11:0:49] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:0:49] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:49][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:49] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[11:0:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[11:0:49] [Controller][DEBUG] -> --Performing action: 90.0

[11:0:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:50] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:50][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:50] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:50] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:50][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:50] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:50] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:50][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:50] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:50] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:50][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:50] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:50] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:50][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:50] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:50] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:50][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:50] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:50] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:50] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:50] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:51][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:51] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:51] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:51][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:51] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:51] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:51][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:51] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:51] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:51][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:51] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:51] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:51][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:51] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:51] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:51] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:51] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:51][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:51] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:51] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:51] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:52] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:0:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:52] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:52][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:52] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:0:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:52] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:0:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:0:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:0:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:52] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:0:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:52] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:52][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:0:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:0:52] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:0:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:0:52] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:0:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:52] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:0:52] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:0:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:0:52] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:0:52] [Controller][DEBUG] -> Control policy EXPLORING
[11:0:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:0:52] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:0:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]

[11:0:52] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:0:52] [Controller][INFO] -> ADDED LEFT

[11:0:52] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:0:52] [Controller][DEBUG] -> --CURRENT TREE:
[11:0:52][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:0:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:0:52] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:0:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:0:52] [Controller][DEBUG] -> --Performing action: 180.0

[11:0:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:0:52] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:0:52] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:52] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7473°

[11:0:55] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:55] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:55] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:55] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[11:0:55] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:55] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:0:55] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[11:0:55] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:0:55] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:55] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:55] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:55] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:55] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 14.237°
[11:0:55] [Controller][DEBUG] ->  --ATTEMPT: 2 / 20
[11:0:55] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-14.237, -165.763, 180.0]

[11:0:55] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:55] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:55] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:56] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:56] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:0:56] [Controller][DEBUG] ->  --ATTEMPT: 3 / 20
[11:0:56] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:0:56] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:56] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:56] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:56] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:56] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 11.0879°
[11:0:56] [Controller][DEBUG] ->  --ATTEMPT: 4 / 20
[11:0:56] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-11.0879, -168.9121, 180.0]

[11:0:56] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:56] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:56] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:56] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:56] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:0:56] [Controller][DEBUG] ->  --ATTEMPT: 5 / 20
[11:0:56] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:0:56] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:56] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:56] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:57] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 8.5933°
[11:0:57] [Controller][DEBUG] ->  --ATTEMPT: 6 / 20
[11:0:57] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-8.5933, -171.4067, 180.0]

[11:0:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:57] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:57] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:57] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:0:57] [Controller][DEBUG] ->  --ATTEMPT: 7 / 20
[11:0:57] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:0:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:57] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:57] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:57] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 4.8442°
[11:0:57] [Controller][DEBUG] ->  --ATTEMPT: 8 / 20
[11:0:57] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-4.8442, -175.1558, 180.0]

[11:0:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:58] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:58] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:58] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:58] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:0:58] [Controller][DEBUG] ->  --ATTEMPT: 9 / 20
[11:0:58] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:0:58] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:58] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:58] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:58] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:58] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 3.7845°
[11:0:58] [Controller][DEBUG] ->  --ATTEMPT: 10 / 20
[11:0:58] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-3.7845, -176.2155, 180.0]

[11:0:58] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:58] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:58] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:58] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:58] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:0:58] [Controller][DEBUG] ->  --ATTEMPT: 11 / 20
[11:0:58] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:0:58] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:59] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:59] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:59] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:59] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.6789°
[11:0:59] [Controller][DEBUG] ->  --ATTEMPT: 12 / 20
[11:0:59] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.6789, -177.3211, 180.0]

[11:0:59] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:59] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:59] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:59] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:59] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:0:59] [Controller][DEBUG] ->  --ATTEMPT: 13 / 20
[11:0:59] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:0:59] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:0:59] [Controller][ERROR] ->  !! bad orientation !! 
[11:0:59] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:0:59] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:0:59] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 1.4435°
[11:0:59] [Controller][DEBUG] ->  --ATTEMPT: 14 / 20
[11:0:59] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-1.4435, -178.5565, 180.0]

[11:1:0] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:0] [Controller][ERROR] ->  !! bad orientation !! 
[11:1:0] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:1:0] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:0] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 89.7623°
[11:1:0] [Controller][DEBUG] ->  --ATTEMPT: 15 / 20
[11:1:0] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [89.7623, 90.2377, 180.0]

[11:1:0] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:0] [Controller][ERROR] ->  !! bad orientation !! 
[11:1:0] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 90.2377

[11:1:0] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:0] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 0.3139°
[11:1:0] [Controller][DEBUG] ->  --ATTEMPT: 16 / 20
[11:1:0] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-0.3139, -179.6861, 180.0]

[11:1:0] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:0] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:0] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.7092
[11:1:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:0] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:0] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:0] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:0] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:0] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:0] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:1] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:1] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 0.2664°

[11:1:1] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:1] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:1] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.7594
[11:1:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:1] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:1] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:1] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:1] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:1] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:1] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:1] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 0.2147°

[11:1:1] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:1] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:1] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.8113
[11:1:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:1] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:1] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:1] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:1] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:1] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:1] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:1] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 0.1617°

[11:1:2] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:2] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:2] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.8654
[11:1:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:2] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:2] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:2] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:2] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:2] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:2] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:2] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 0.1073°

[11:1:2] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:2] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:2] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.9197
[11:1:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:2] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:2] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:2] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:2] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:2] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:2] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:2] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 0.0538°

[11:1:3] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:3] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:3] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.9732
[11:1:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:3] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:3] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:3] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:3] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:3] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:3] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:3] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 0.0001°

[11:1:3] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:3] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:3] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.9736
[11:1:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:3] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:3] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:3] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:3] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:3] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:3] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:3] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.0528°

[11:1:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:4] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:4] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.9221
[11:1:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:4] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:4] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:4] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:4] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:4] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:4] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:4] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:4] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.1034°

[11:1:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:4] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:4] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.8711
[11:1:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:4] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:4] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:4] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:4] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:4] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:4] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:4] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:4] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.1548°

[11:1:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:5] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:5] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.8195
[11:1:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:5] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:5] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:5] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:5] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:5] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:5] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:5] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:5] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.2064°

[11:1:5] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:5] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:5] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.7667
[11:1:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:5] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:5] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:5] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:5] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:5] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:5] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:5] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:5] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.2597°

[11:1:5] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:5] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:5] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.7142
[11:1:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:6] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:6] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:6] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:6] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:6] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:6] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:6] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:6] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.312°

[11:1:6] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:6] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:6] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.6607
[11:1:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:6] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:6] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:6] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:6] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:6] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:6] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:6] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:6] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:6] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.3671°

[11:1:6] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:6] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:6] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.6049
[11:1:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:7] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:7] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:7] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:7][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:7] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:7] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:7] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:7] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:7] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.4221°

[11:1:7] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:7] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:7] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.5514
[11:1:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:7] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:7] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:7] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:7] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:7][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:7] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:7] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:7] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:7] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:7] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.4755°

[11:1:7] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:7] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:7] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.4957
[11:1:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:8] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:8] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:8][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:8] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:8] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:8] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:8] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:8] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.5326°

[11:1:8] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:8] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:8] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.44
[11:1:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:8] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:8] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:8][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:8] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:8] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:8] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:8] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:8] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.5863°

[11:1:8] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:8] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:8] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.3883
[11:1:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:8] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:8] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:8] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:8] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:8] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:8][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:8] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:8] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:8] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:8] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:8] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:8] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:8] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:8] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.6363°

[11:1:9] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:9] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:9] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.3381
[11:1:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:9] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:9] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:9] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:9][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:9] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:9] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:9] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:9] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:9] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.6865°

[11:1:9] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:1:9] [Controller][INFO] ->  ~~ perfect ~~ 
[11:1:9] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 179.2893
[11:1:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:1:9] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:1:9] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:1:9] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:1:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:9] [Controller][DEBUG] -> --CURRENT TREE:
[11:1:9][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:1:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:1:9] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:1:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:1:9] [Controller][DEBUG] -> --Performing action: 180.0

[11:1:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:1:9] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:1:9] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:1:9] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 0.7332°
[11:1:10] [Controller][INFO] -> CONTROLLER STOPPED
