[18:1:50] [Controller][INFO] -> LOG SEVERYTY: HIGH

[18:1:50] [Controller][INFO] -> CONTROLLER LAUNCHED

[18:1:51] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:51] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:51] [Controller][INFO] -> --ACTIONS: [<Command.START: -1>]
[18:1:51] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[18:1:51] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:51][NOHEADER] -> {'root': {}}

[18:1:51] [Controller][DEBUG] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[18:1:51] [Controller][INFO] -> --Available actions: [<Command.START: -1>]
[18:1:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)
[18:1:51] [Controller][DEBUG] -> --Performing action: Command.START

[18:1:51] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:51] [Controller][DEBUG] ->  ** COMMAND START ** 
[18:1:51] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)

[18:1:52] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:52] [Controller][DEBUG] -> Control policy EXPLORING
[18:1:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:52] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:1:52] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]

[18:1:52] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:1:52] [Controller][INFO] -> ADDED MID

[18:1:52] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:1:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:52][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[18:1:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:52] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:1:52] [Controller][DEBUG] -> --Performing action: 90.0

[18:1:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:1:52] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:52] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:52][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[18:1:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:52] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:52] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:1:52] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:52] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:52][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[18:1:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:52] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:52] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:1:52] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:52] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:52] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:52] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:52] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:52][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[18:1:52] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:52] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:52] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:52] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:52] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:52] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:1:53] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:53] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:53] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:53][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[18:1:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:53] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:53] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:53] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:1:53] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:53] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:53] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:1:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:53][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[18:1:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[18:1:53] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:1:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:53] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:1:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:53] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:1:53] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:1:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:1:54] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:54] [Controller][DEBUG] -> Control policy EXPLORING
[18:1:54] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:54] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:1:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]

[18:1:54] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:1:54] [Controller][INFO] -> ADDED LEFT

[18:1:54] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:1:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:54][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[18:1:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:54] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:1:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:1:54] [Controller][DEBUG] -> --Performing action: 180.0

[18:1:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:54] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:1:54] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:1:54] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 90.9966°

[18:1:56] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:1:56] [Controller][ERROR] ->  !! bad orientation !! 
[18:1:56] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -177.7183

[18:1:56] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:1:56] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:1:56] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.3202°
[18:1:56] [Controller][DEBUG] ->  --ATTEMPT: 1 / 10
[18:1:56] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.3202, -177.6798, 180.0]

[18:1:56] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:1:56] [Controller][INFO] ->  ~~ perfect ~~ 
[18:1:56] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.3951
[18:1:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:1:57] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:57] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:1:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:57][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[18:1:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:1:57] [Controller][DEBUG] -> --Performing action: 180.0

[18:1:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:1:57] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:57] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:57][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[18:1:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:1:57] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:1:57] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:57] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:57][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[18:1:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:1:57] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:1:57] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:57] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:57] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:57] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:57][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[18:1:57] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:57] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:57] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:57] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:57] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:1:58] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:58] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:58] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[18:1:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:58] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:58] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:1:58] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:58] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:1:58] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[18:1:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[18:1:58] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:1:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:1:58] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:1:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:58] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:1:58] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:1:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:1:59] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:59] [Controller][DEBUG] -> Control policy EXPLORING
[18:1:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:59] [Controller][INFO] -> --ACTIONS: [<Compass.SUD: -90.0>, <Compass.OVEST: 180.0>]
[18:1:59] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]

[18:1:59] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:1:59] [Controller][INFO] -> ADDED LEFT
[18:1:59] [Controller][INFO] -> ADDED MID

[18:1:59] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:1:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[18:1:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:1:59] [Controller][INFO] -> --Available actions: [<Compass.SUD: -90.0>, <Compass.OVEST: 180.0>]
[18:1:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:1:59] [Controller][DEBUG] -> --Performing action: 180.0

[18:1:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:1:59] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:59] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:1:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[18:1:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:1:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:1:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:1:59] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:1:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:1:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:1:59] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:1:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:1:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[18:1:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:1:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:1:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:1:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:1:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:1:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:1:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:0] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:0] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:2:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[18:2:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:2:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:0] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:0] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:2:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[18:2:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:2:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:0] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:0] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:0] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:2:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[18:2:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[18:2:0] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:0] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:0] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:0] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:1] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:1] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:1] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>]
[18:2:1] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]

[18:2:1] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:1] [Controller][INFO] -> ADDED RIGHT
[18:2:1] [Controller][INFO] -> ADDED MID

[18:2:1] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:1] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>]
[18:2:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:1] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:1] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:1] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:1] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 85.9135°

[18:2:3] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:3] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:3] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 88.7175
[18:2:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:3] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:3] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:2:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:3] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:2:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:3] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:3] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:3] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:4] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:4] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:4] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:4] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:4] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:4] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:4] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:4] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:4] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:4] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:4] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:4] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:4] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:5] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:5] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:5] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:5] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:5] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:5] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:5] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:5] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:5] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:6] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:6] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[18:2:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[18:2:6] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:6] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:6] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:6] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:6] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:6] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:6] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:2:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]

[18:2:6] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:6] [Controller][INFO] -> ADDED LEFT

[18:2:6] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:6] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:2:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:6] [Controller][DEBUG] -> --Performing action: 180.0

[18:2:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:6] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:7] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:7] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 95.4249°

[18:2:9] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:9] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:9] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -178.8561
[18:2:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:9] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:9] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:9] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:2:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:9][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:9] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:2:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:9] [Controller][DEBUG] -> --Performing action: 180.0

[18:2:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:9] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:9] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:9] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:9] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:9] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:9][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:9] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:9] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:9] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:9] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:9] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:9] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:10] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:10] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:10][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:10] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:10] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:10] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:10][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:10] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:10] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:10] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:10][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:10] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:10] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:10] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:10] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:10] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:10][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:10] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:10] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:10] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:10] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:10] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:10] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:11] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:11] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:11] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:11] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:11][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:11] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:11] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:11] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:11] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:11] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:11][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:11] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:11] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:11] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:11] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:11] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:11][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:11] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:11] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:11] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:11] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:11] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:11][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[18:2:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[18:2:11] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:11] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:11] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:11] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:12] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:12] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:12] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:12] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[18:2:12] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]

[18:2:12] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:12] [Controller][INFO] -> ADDED RIGHT
[18:2:12] [Controller][INFO] -> ADDED LEFT

[18:2:12] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:12][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[18:2:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:12] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[18:2:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:12] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:12] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:12] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:12] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.8064°

[18:2:14] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:14] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:14] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 88.3516
[18:2:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:14] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:14] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:2:14] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[18:2:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:14] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:2:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:14] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:15] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[18:2:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:15] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[18:2:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:15] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[18:2:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:15] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:15] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[18:2:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:16] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:16] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[18:2:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[18:2:16] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:16] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:16] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:16] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:16] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:16] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:16] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[18:2:16] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]

[18:2:16] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:16] [Controller][INFO] -> ADDED RIGHT
[18:2:16] [Controller][INFO] -> ADDED LEFT

[18:2:16] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:16] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:16] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[18:2:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:16] [Controller][DEBUG] -> --Performing action: 180.0

[18:2:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:16] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:16] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:16] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 93.9121°

[18:2:19] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:19] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:19] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -178.6191
[18:2:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:19] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:19] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:2:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:19][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:19] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:2:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:19] [Controller][DEBUG] -> --Performing action: 180.0

[18:2:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:19] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:19] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:19] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:19] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:19][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:19] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:19] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:20] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:20] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:20][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:20] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:20] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:20] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:20][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:20] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:20] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:20] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:20][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:20] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:20] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:20] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:20][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:20] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:20] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:20] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:20] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:20] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:20][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:20] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:20] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:20] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:20] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:20] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:20] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:21] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:21] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:21][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:21] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:21] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:21] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:21][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:21] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:21] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:21] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:21][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:21] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:21] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:21] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:21] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:21] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:21] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:21][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[18:2:21] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[18:2:21] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:21] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:21] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:21] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:21] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:22] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:22] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:22] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:22] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:22] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:22] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[18:2:22] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]

[18:2:22] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:22] [Controller][INFO] -> ADDED RIGHT
[18:2:22] [Controller][INFO] -> ADDED LEFT

[18:2:22] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:22] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:22][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[18:2:22] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:22] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[18:2:22] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:22] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:22] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:22] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:22] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:22] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 87.5785°

[18:2:24] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:24] [Controller][ERROR] ->  !! bad orientation !! 
[18:2:24] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 87.9093

[18:2:24] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:2:25] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:25] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.2308°
[18:2:25] [Controller][DEBUG] ->  --ATTEMPT: 1 / 10
[18:2:25] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.2308, 87.7692, 90.0]

[18:2:25] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:25] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:25] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 89.5476
[18:2:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:25] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:25] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:2:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:25][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[18:2:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:25] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:2:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:25] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:25] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:25] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:25] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:25] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:25] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:25][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[18:2:25] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:25] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:25] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:25] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:25] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:25] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:26] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:26] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:26][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[18:2:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:26] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:26] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:26] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:26][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[18:2:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:26] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:26] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:26] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:26][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[18:2:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:26] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:26] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:26] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:26] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:26] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:26] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:26][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[18:2:26] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[18:2:26] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:26] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:26] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:26] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:26] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:26] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:27] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:27] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:27] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>]
[18:2:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]

[18:2:27] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:27] [Controller][INFO] -> ADDED RIGHT

[18:2:27] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:27] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:27][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:27] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>]
[18:2:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:27] [Controller][DEBUG] -> --Performing action: 0.0

[18:2:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:27] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:27] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:27] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 88.5013°

[18:2:29] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:29] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:29] [Controller][DEBUG] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -1.2128
[18:2:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:30] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:30] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:30] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>]
[18:2:30] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:30][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>]
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:30] [Controller][DEBUG] -> --Performing action: 0.0

[18:2:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:30] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:30] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:30] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:30] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:30] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:30][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:30] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:30] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:30] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:30] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:30] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:30] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:30][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:30] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:30] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:30] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:30] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:30] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:30] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:30][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:30] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:30] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:30] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:31] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:31] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:31][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:31] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:31] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:31] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:31][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:31] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:31] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:31] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:31][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:31] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:31] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:31] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:31] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:31] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:31][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:31] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:31] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:31] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:31] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:31] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:31] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:32] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:32] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:32][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:32] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:32] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:32] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:32][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:32] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:32] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:32] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:32][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:32] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:32] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:32] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:32] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:32][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:32] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:32] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:33] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:33] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:33] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:33] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:33] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:33] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , O)'}, 'R_n14': {}, 'R_n10': {}}

[18:2:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]
[18:2:33] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:33] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:33] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:33] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:34] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:34] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:34] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:2:34] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n14, Type: Type.OBSERVED, Action: 0.0, Parent: R_n12, Left: None, Mid: None, Right: None ]

[18:2:34] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:34] [Controller][INFO] -> ADDED LEFT

[18:2:34] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:34] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:34][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:34] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:2:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:34] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:34] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:34] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:34] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 91.8601°

[18:2:36] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:36] [Controller][ERROR] ->  !! bad orientation !! 
[18:2:36] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 94.0726

[18:2:36] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:2:36] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:36] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 4.0951°
[18:2:36] [Controller][DEBUG] ->  --ATTEMPT: 1 / 10
[18:2:36] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-4.0951, 94.0951, 90.0]

[18:2:37] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:37] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:37] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 90.5969
[18:2:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:37] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:37] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:37] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:2:37] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:37][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:37] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:2:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:37] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:37] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:37] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:37] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:37] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:37] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:37][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:37] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:37] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:37] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:37] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:37] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:37] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:38] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:38] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:38][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:38] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:38] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:38] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:38][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:38] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:38] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:38] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:38][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:38] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:38] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:38] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:38] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:38] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:38][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:38] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:38] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:38] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:38] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:38] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:38] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:39] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:39] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:39] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:39][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , O)'}, 'L_n15': {}, 'R_n10': {}}

[18:2:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]
[18:2:39] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:39] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:39] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:39] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:40] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:40] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:40] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:2:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n15, Type: Type.OBSERVED, Action: 90.0, Parent: R_n14, Left: None, Mid: None, Right: None ]

[18:2:40] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:40] [Controller][INFO] -> ADDED MID

[18:2:40] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , O )'}, 'M_n16': {}, 'R_n10': {}}

[18:2:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[18:2:40] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:2:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:40] [Controller][DEBUG] -> --Performing action: 90.0

[18:2:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:40] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:40] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[18:2:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , O )'}, 'M_n16': {}, 'R_n10': {}}

[18:2:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[18:2:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:40] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:40] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[18:2:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , O )'}, 'M_n16': {}, 'R_n10': {}}

[18:2:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[18:2:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:40] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:40] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:40] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[18:2:40] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , O )'}, 'M_n16': {}, 'R_n10': {}}

[18:2:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]
[18:2:40] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:40] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:40] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:41] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:41] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:41] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:41] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[18:2:41] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.OBSERVED, Action: 90.0, Parent: L_n15, Left: None, Mid: None, Right: None ]

[18:2:41] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:2:41] [Controller][INFO] -> ADDED RIGHT
[18:2:41] [Controller][INFO] -> ADDED LEFT

[18:2:41] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:2:41] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:41][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:41] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[18:2:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:41] [Controller][DEBUG] -> --Performing action: 180.0

[18:2:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:41] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:41] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 92.9688°

[18:2:43] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:43] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:43] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.445
[18:2:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:2:44] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:44] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:2:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:2:44] [Controller][DEBUG] -> --Performing action: 180.0

[18:2:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:44] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:44] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:44] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:45] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:45] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:45] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:45] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:46] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:46] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:46][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:46] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:46] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:46] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:46][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:46] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:46] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:46] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:46][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:46] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:46] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:46] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:46][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:46] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:46] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:47] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:47] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:47] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:47] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:48] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:48] [Controller][INFO] -> --ACTIONS: [<Command.STOP: 0>]
[18:2:48] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , O)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:48] [Controller][INFO] -> --Available actions: [<Command.STOP: 0>]
[18:2:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:48] [Controller][DEBUG] -> --Performing action: Command.STOP

[18:2:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:48] [Controller][DEBUG] ->  ** COMMAND STOP ** 
[18:2:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[18:2:48] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:48] [Controller][DEBUG] -> Control policy EXPLORING
[18:2:48] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:48] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>]
[18:2:48] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n18, Type: Type.OBSERVED, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]

[18:2:48] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[18:2:48] [Controller][INFO] -> *** DEAD END NODE DETECTED ***
[18:2:48] [Controller][DEBUG] -> -- CURRENT NODE: [ Name: L_n18, Type: Type.DEAD_END, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]

[18:2:48] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[18:2:48] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:2:48] [Controller][WARNING] ->  --CURRENT NODE: [ Name: L_n18, Type: Type.DEAD_END, Action: 180.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:48] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:48] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>]
[18:2:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:2:48] [Controller][DEBUG] -> --Performing action: 0.0

[18:2:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:48] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:2:48] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:48] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 178.2404°

[18:2:52] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:52] [Controller][ERROR] ->  !! bad orientation !! 
[18:2:52] [Controller][DEBUG] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -2.6547

[18:2:52] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:2:52] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:2:52] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.7559°
[18:2:52] [Controller][DEBUG] ->  --ATTEMPT: 1 / 10
[18:2:52] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.7559, -2.7559, 0.0]

[18:2:53] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:2:53] [Controller][INFO] ->  ~~ perfect ~~ 
[18:2:53] [Controller][DEBUG] ->  >> curr state of the sensors: [2.0, -2.0], curr_g: -0.2445
[18:2:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[18:2:53] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:53] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:53] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>]
[18:2:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:53][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:53] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>]
[18:2:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[18:2:53] [Controller][DEBUG] -> --Performing action: 0.0

[18:2:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:53] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:53] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:53] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:53] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:53][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:53] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:53] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:53] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:53] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:53] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:53] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:53] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:53] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:53][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:53] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:53] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:53] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:53] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:53] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:53] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:54] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:54] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:54] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:54][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:54] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:54] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:54] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:54] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:54][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:54] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:54] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:54] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:54] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:54][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:54] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:54] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:54] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:54] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:54] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:54][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:54] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:54] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:54] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:54] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:54] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:54] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:55] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:55] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:55] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:55][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:55] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:55] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:55] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:55] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:55][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:55] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:55] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:55] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:55] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:55][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:55] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:55] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:55] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:55] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:55] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:55][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:55] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:55] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:55] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:55] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:55] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:55] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:56] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:56] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:56] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:56][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:56] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:56] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:56] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:56] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:56][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:56] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:56] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:56] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:56] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:56][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:56] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:56] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:56] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:56] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:56][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:56] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:56] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:56] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:56] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:56] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:56] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:56][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:56] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]
[18:2:56] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:56] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:56] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:56] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:56] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:57] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:2:57] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:2:58] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:58] [Controller][DEBUG] -> Control policy ESCAPING
[18:2:58] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:2:58] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>]
[18:2:58] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n16, Type: Type.EXPLORED, Action: 90.0, Parent: L_n15, Left: L_n18, Mid: None, Right: R_n17 ]

[18:2:58] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[18:2:58] [Controller][WARNING][DEBUG] -> No DEAD END children, tree'll be updated on next loop

[18:2:58] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE ESCAPING) ***
[18:2:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>]
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:2:58] [Controller][DEBUG] -> --Performing action: 0.0

[18:2:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:58] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:58] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:58] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:58] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:58] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:2:58] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:2:58] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:58] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:58] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:58] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:58] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:2:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:58] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:58] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:2:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:2:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:2:59] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:2:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:2:59] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:2:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:59] [Controller][DEBUG] -> --CURRENT TREE:
[18:2:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , O)'}, 'L_n18': {}, 'R_n17': {}, 'R_n10': {}}

[18:2:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]
[18:2:59] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:2:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:2:59] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:2:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:2:59] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:2:59] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:3:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:3:0] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:0] [Controller][DEBUG] -> Control policy EXPLORING
[18:3:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:0] [Controller][INFO] -> --ACTIONS: [<Compass.SUD: -90.0>, <Compass.EST: 0.0>]
[18:3:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.OBSERVED, Action: 0.0, Parent: M_n16, Left: None, Mid: None, Right: None ]

[18:3:0] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:3:0] [Controller][INFO] -> ADDED RIGHT
[18:3:0] [Controller][INFO] -> ADDED MID

[18:3:0] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:3:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , O )', 'R_n19': ' (R , S , O)'}, 'M_n20': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:0] [Controller][INFO] -> --Available actions: [<Compass.SUD: -90.0>, <Compass.EST: 0.0>]
[18:3:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:3:0] [Controller][DEBUG] -> --Performing action: 0.0

[18:3:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:0] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:0] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , O )', 'R_n19': ' (R , S , O)'}, 'M_n20': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:3:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:0] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:0] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:0] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , O )', 'R_n19': ' (R , S , O)'}, 'M_n20': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:1] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:1] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:1] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , O )', 'R_n19': ' (R , S , O)'}, 'M_n20': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:1] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:1] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:1] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:1] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:3:1] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:1] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , O )', 'R_n19': ' (R , S , O)'}, 'M_n20': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]
[18:3:1] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:3:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:1] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:3:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:1] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:3:1] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:3:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:3:2] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:2] [Controller][DEBUG] -> Control policy EXPLORING
[18:3:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:2] [Controller][INFO] -> --ACTIONS: [<Compass.SUD: -90.0>]
[18:3:2] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.OBSERVED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: None ]

[18:3:2] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[18:3:2] [Controller][INFO] -> ADDED RIGHT

[18:3:2] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[18:3:2] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:2] [Controller][INFO] -> --Available actions: [<Compass.SUD: -90.0>]
[18:3:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:3:2] [Controller][DEBUG] -> --Performing action: -90.0

[18:3:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:2] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:3:2] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:3:2] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 79.3558°

[18:3:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:3:4] [Controller][ERROR] ->  !! bad orientation !! 
[18:3:4] [Controller][DEBUG] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -92.9022

[18:3:4] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:3:4] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:3:4] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 3.005°
[18:3:4] [Controller][DEBUG] ->  --ATTEMPT: 1 / 10
[18:3:4] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [3.005, -93.005, -90.0]

[18:3:4] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:3:4] [Controller][INFO] ->  ~~ perfect ~~ 
[18:3:4] [Controller][DEBUG] ->  >> curr state of the sensors: [-88.0, -92.0], curr_g: -90.5613
[18:3:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:3:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:5] [Controller][INFO] -> --ACTIONS: [<Compass.SUD: -90.0>]
[18:3:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][INFO] -> --Available actions: [<Compass.SUD: -90.0>]
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:3:5] [Controller][DEBUG] -> --Performing action: -90.0

[18:3:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:5] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:3:5] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:5] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:5] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:5] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:5] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:5] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:5] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:5] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:6] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:6] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:6] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:6] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:6] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:6] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:6] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:6] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:6] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:6] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:6] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:6] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:6] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:6][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:6] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:6] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:6] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:6] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:6] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:6] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:7] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:7] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:7][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:7] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:7] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:7] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:7] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:7] [Controller][INFO] -> --MODE: Mode.EXPLORING
[18:3:7] [Controller][INFO] -> --ACTIONS: [<Command.STOP: 0>]
[18:3:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:7][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , O)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:7] [Controller][INFO] -> --Available actions: [<Command.STOP: 0>]
[18:3:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:7] [Controller][DEBUG] -> --Performing action: Command.STOP

[18:3:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:7] [Controller][DEBUG] ->  ** COMMAND STOP ** 
[18:3:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.STOPPED, Position.CORRIDOR)

[18:3:7] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:7] [Controller][DEBUG] -> Control policy EXPLORING
[18:3:7] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:7] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:3:7] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n21, Type: Type.OBSERVED, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]

[18:3:7] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[18:3:7] [Controller][INFO] -> *** DEAD END NODE DETECTED ***
[18:3:7] [Controller][DEBUG] -> -- CURRENT NODE: [ Name: R_n21, Type: Type.DEAD_END, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]

[18:3:7] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[18:3:7] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:3:7] [Controller][WARNING] ->  --CURRENT NODE: [ Name: R_n21, Type: Type.DEAD_END, Action: -90.0, Parent: M_n20, Left: None, Mid: None, Right: None ]
[18:3:7] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:7][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:7] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:7] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:3:7] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[18:3:7] [Controller][DEBUG] -> --Performing action: 90.0

[18:3:7] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:7] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:3:7] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:3:7] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 175.3651°

[18:3:11] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:3:11] [Controller][INFO] ->  ~~ perfect ~~ 
[18:3:11] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 88.3289
[18:3:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)

[18:3:11] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:11] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:11] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[18:3:11] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:11] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:11][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:11] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:11] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[18:3:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.CORRIDOR)
[18:3:11] [Controller][DEBUG] -> --Performing action: 90.0

[18:3:11] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:11] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:11] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:12] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:12] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:12] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:12] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:12][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:12] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:12] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:12] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:12] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:12] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:12] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:12][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:12] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:12] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:12] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:12] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:12] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:12] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:12][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:12] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:12] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:12] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:12] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:12] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:12] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:12][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:12] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:12] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:12] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:12] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:12] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:12] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:13] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:13] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:13] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:13] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:13] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:13] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:13] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:13] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:13] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:13] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:13] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:13] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:14] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:14] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:14] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:14] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:14] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:14] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:14] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:14] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[18:3:14] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:14] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , E )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:14] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[18:3:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:14] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[18:3:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:14] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[18:3:14] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[18:3:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[18:3:15] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:15] [Controller][DEBUG] -> Control policy ESCAPING
[18:3:15] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:15] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:3:15] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n20, Type: Type.EXPLORED, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]

[18:3:15] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE ESCAPING) ***
[18:3:15] [Controller][INFO] -> *** ALL CHILDREN ARE DEAD END NODE ***
[18:3:15] [Controller][DEBUG] -> -- CURRENT NODE: [ Name: M_n20, Type: Type.DEAD_END, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ] IS DEAD END TOO

[18:3:15] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE ESCAPING) ***

[18:3:15] [Controller][WARNING] ->  >>>> REGRESSION <<<< 
[18:3:15] [Controller][WARNING] ->  --CURRENT NODE: [ Name: M_n20, Type: Type.DEAD_END, Action: 0.0, Parent: R_n17, Left: None, Mid: None, Right: R_n21 ]
[18:3:15] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , D )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:15] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:3:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[18:3:15] [Controller][DEBUG] -> --Performing action: 180.0

[18:3:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:15] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[18:3:15] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:3:15] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 95.0684°

[18:3:17] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:3:17] [Controller][ERROR] ->  !! bad orientation !! 
[18:3:17] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -176.9839

[18:3:17] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[18:3:17] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[18:3:17] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 3.0161°
[18:3:17] [Controller][DEBUG] ->  --ATTEMPT: 1 / 10
[18:3:17] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-3.0161, -176.9839, 180.0]

[18:3:18] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[18:3:18] [Controller][INFO] ->  ~~ perfect ~~ 
[18:3:18] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.4954
[18:3:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[18:3:18] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:18] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:18] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[18:3:18] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:18][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , D )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:18] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[18:3:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[18:3:18] [Controller][DEBUG] -> --Performing action: 180.0

[18:3:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:18] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:18] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:18] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:18] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:18][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , D )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:18] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:3:18] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:18] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:18] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:18] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:18] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:18] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:18][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , D )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:18] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:3:18] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:19] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:19] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:19] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:19][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , D )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:19] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[18:3:19] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[18:3:19] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:19] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:19] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:19][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , D )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:19] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:19] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[18:3:19] [Controller][DEBUG] -> !!! NEW ALGORTHM CYCLE !!!
[18:3:19] [Controller][INFO] -> --MODE: Mode.ESCAPING
[18:3:19] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[18:3:19] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:19] [Controller][DEBUG] -> --CURRENT TREE:
[18:3:19][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , E)'}, 'L_n13': {}, 'R_n12': {'R_n14': ' (R , E , E)'}, 'R_n14': {'L_n15': ' (L , N , E)'}, 'L_n15': {'M_n16': ' (M , N , E )'}, 'M_n16': {'L_n18': ' (L , O , D)', 'R_n17': ' (R , E , E)'}, 'L_n18': {}, 'R_n17': {'M_n20': ' (M , E , D )', 'R_n19': ' (R , S , O)'}, 'M_n20': {'R_n21': ' (R , S , D)'}, 'R_n21': {}, 'R_n19': {}, 'R_n10': {}}

[18:3:19] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n17, Type: Type.EXPLORED, Action: 0.0, Parent: M_n16, Left: None, Mid: M_n20, Right: R_n19 ]
[18:3:19] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[18:3:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:19] [Controller][DEBUG] -> --Performing action: Command.RUN

[18:3:19] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[18:3:19] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[18:3:19] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[18:3:19] [Controller][INFO] -> CONTROLLER STOPPED
