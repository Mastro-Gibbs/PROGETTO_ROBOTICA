[11:13:32] [Controller][INFO] -> LOG SEVERYTY: HIGH

[11:13:32] [Controller][INFO] -> CONTROLLER LAUNCHED

[11:13:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:32] [Controller][INFO] -> --ACTIONS: [<Command.START: -1>]
[11:13:32] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[11:13:32] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:32][NOHEADER] -> {'root': {}}

[11:13:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]
[11:13:32] [Controller][INFO] -> --Available actions: [<Command.START: -1>]
[11:13:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)
[11:13:32] [Controller][DEBUG] -> --Performing action: Command.START

[11:13:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:32] [Controller][DEBUG] ->  ** COMMAND START ** 
[11:13:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.STARTING, Position.CORRIDOR)

[11:13:32] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:32] [Controller][DEBUG] -> Control policy EXPLORING
[11:13:32] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:32] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[11:13:32] [Controller][INFO] -> --CURRENT NODE: [ Name: root, Type: Type.OBSERVED, Action: None, Parent: None, Left: None, Mid: None, Right: None ]

[11:13:32] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:13:32] [Controller][INFO] -> ADDED MID

[11:13:32] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:13:32] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:32][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:32] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:32] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[11:13:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.CORRIDOR)
[11:13:32] [Controller][DEBUG] -> --Performing action: 90.0

[11:13:32] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:32] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:32] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:33] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:33] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:33] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:33] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:33] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:33] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:33] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:33] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:33] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:33][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:33] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:33] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:33] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:33] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:33] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:33] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:34] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:34] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:34][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:34] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:34] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:34] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:34][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:34] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:34] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:34] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:34][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:34] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:34] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:34] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:34][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:34] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:34] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:34] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:34][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:34] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:34] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:34] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:34] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:34] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:34][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:34] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:34] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:34] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:34] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:34] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:34] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:35] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:35] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:35] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:35][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:35] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:35] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:35] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:35] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:35] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:35][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:35] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:35] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:35] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:35] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:35] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:35] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:13:35] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:35] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:35][NOHEADER] -> {'root': {'M_n1': ' (M , N , O )'}, 'M_n1': {}}

[11:13:35] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]
[11:13:35] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:13:35] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:35] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:13:35] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:35] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:13:35] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:13:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:13:36] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:36] [Controller][DEBUG] -> Control policy EXPLORING
[11:13:36] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:36] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:13:36] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n1, Type: Type.OBSERVED, Action: 90.0, Parent: root, Left: None, Mid: None, Right: None ]

[11:13:36] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:13:36] [Controller][INFO] -> ADDED LEFT

[11:13:36] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:13:36] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:36][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:36] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:36] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:13:36] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:13:36] [Controller][DEBUG] -> --Performing action: 180.0

[11:13:36] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:36] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:13:36] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:36] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 87.1581°

[11:13:38] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:38] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:38] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -177.6438

[11:13:38] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[11:13:38] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:38] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 2.3562°
[11:13:38] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[11:13:38] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-2.3562, -177.6438, 180.0]

[11:13:39] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:39] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:39] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -169.6153

[11:13:40] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:40] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 10.3847°
[11:13:40] [Controller][DEBUG] ->  --ATTEMPT: 2 / 20
[11:13:40] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-10.3847, -169.6153, 180.0]

[11:13:40] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:41] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:41] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 176.8333

[11:13:41] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:41] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 3.1667°
[11:13:41] [Controller][DEBUG] ->  --ATTEMPT: 3 / 20
[11:13:41] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [3.1667, 176.8333, 180.0]

[11:13:42] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:42] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:42] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 174.297

[11:13:42] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:42] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 5.703°
[11:13:42] [Controller][DEBUG] ->  --ATTEMPT: 4 / 20
[11:13:42] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [5.703, 174.297, 180.0]

[11:13:43] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:43] [Controller][INFO] ->  ~~ perfect ~~ 
[11:13:43] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.4428
[11:13:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:13:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:44] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:13:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:13:44] [Controller][DEBUG] -> --Performing action: 180.0

[11:13:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:45] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:45] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:45] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:45] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:46] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:46] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:46][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:46] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:46] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:46] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:46] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:46][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:46] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:46] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:46] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:46] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:46] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:46] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:13:46] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:46] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:46][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , O)'}, 'L_n2': {}}

[11:13:46] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]
[11:13:46] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:13:46] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:46] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:13:46] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:46] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:13:46] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:13:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:47] [Controller][DEBUG] -> Control policy EXPLORING
[11:13:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:47] [Controller][INFO] -> --ACTIONS: [<Compass.SUD: -90.0>, <Compass.OVEST: 180.0>]
[11:13:47] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n2, Type: Type.OBSERVED, Action: 180.0, Parent: M_n1, Left: None, Mid: None, Right: None ]

[11:13:47] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:13:47] [Controller][INFO] -> ADDED LEFT
[11:13:47] [Controller][INFO] -> ADDED MID

[11:13:47] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:13:47] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][INFO] -> --Available actions: [<Compass.SUD: -90.0>, <Compass.OVEST: 180.0>]
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:13:47] [Controller][DEBUG] -> --Performing action: 180.0

[11:13:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:47] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:47] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:47] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:47] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:47] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:47] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:47] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:47] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:47][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:47] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:47] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:47] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:47] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:47] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:47] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:48] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:48] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:48] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:48] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:48] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:48] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:48] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:48] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:48] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:48] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:48] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:48] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:48] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:48] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:48] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:48] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:48] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:48] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:48] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:48] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:48] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:48] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:48][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:48] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:48] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:48] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:48] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:48] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:48] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:49] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:49] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:49][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:49] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:49] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:49] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:49][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:49] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:49] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:49] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:49][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:49] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:49] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:13:49] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:49] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:49] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:13:49] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:49][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , O )'}, 'L_n3': {}, 'M_n4': {}}

[11:13:49] [Controller][DEBUG] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]
[11:13:49] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:13:49] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:13:49] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:13:49] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:49] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:13:49] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:13:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:13:50] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:50] [Controller][DEBUG] -> Control policy EXPLORING
[11:13:50] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:50] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>]
[11:13:50] [Controller][INFO] -> --CURRENT NODE: [ Name: M_n4, Type: Type.OBSERVED, Action: 180.0, Parent: L_n2, Left: None, Mid: None, Right: None ]

[11:13:50] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:13:50] [Controller][INFO] -> ADDED RIGHT
[11:13:50] [Controller][INFO] -> ADDED MID

[11:13:50] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:13:50] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:50][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:50] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:50] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.OVEST: 180.0>]
[11:13:50] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:13:50] [Controller][DEBUG] -> --Performing action: 90.0

[11:13:50] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:50] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:13:50] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:50] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 90.1256°

[11:13:53] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:53] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:53] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 82.8037

[11:13:53] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[11:13:53] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:53] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 7.1963°
[11:13:53] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[11:13:53] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [7.1963, 82.8037, 90.0]

[11:13:54] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:54] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:54] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 80.3031

[11:13:54] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:54] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 9.6969°
[11:13:54] [Controller][DEBUG] ->  --ATTEMPT: 2 / 20
[11:13:54] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [9.6969, 80.3031, 90.0]

[11:13:55] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:55] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:55] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 95.6048

[11:13:55] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:55] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 5.6048°
[11:13:55] [Controller][DEBUG] ->  --ATTEMPT: 3 / 20
[11:13:55] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-5.6048, 95.6048, 90.0]

[11:13:57] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:57] [Controller][ERROR] ->  !! bad orientation !! 
[11:13:57] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 94.3463

[11:13:57] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:13:57] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 4.3463°
[11:13:57] [Controller][DEBUG] ->  --ATTEMPT: 4 / 20
[11:13:57] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-4.3463, 94.3463, 90.0]

[11:13:58] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:13:58] [Controller][INFO] ->  ~~ perfect ~~ 
[11:13:58] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 88.6165
[11:13:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:13:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:58] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[11:13:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:58] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:58] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[11:13:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:13:58] [Controller][DEBUG] -> --Performing action: 90.0

[11:13:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:58] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:58] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:58] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:58] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:58] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:58][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:58] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:58] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:58] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:58] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:58] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:58] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:13:59] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:13:59] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:13:59] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:13:59] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][DEBUG] -> --CURRENT TREE:
[11:13:59][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:13:59] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:13:59] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:13:59] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:13:59] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:13:59] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:13:59] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:0] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:0] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:0] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:0] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:0][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:0] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:0] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:0] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:0] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:0] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:0] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:1] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:1] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:1] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:1] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:1] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:1] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:1] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:1] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:1] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:1] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:1] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:1] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:1] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:1] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:1][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:1] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:1] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:1] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:1] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:1] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:1] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:2] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:2] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:2] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:2] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:2] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:2] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:2] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:2] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:2] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:2] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:2] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:2] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:2] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:2] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:2] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:2] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:2] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:2] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:2] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:2][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:2] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:2] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:2] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:2] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:2] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:2] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:3] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:3] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:3] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:3] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:3][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:3] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:3] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:3] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:3] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:3] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:3] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:4] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:4] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:4] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:4] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:4] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:4] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:4] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:4] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:4] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:4] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:4] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:4] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:14:4] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:4] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:4][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , O)'}, 'M_n6': {}, 'R_n5': {}}

[11:14:4] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]
[11:14:4] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:14:4] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:4] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:14:4] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:4] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:14:4] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:14:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:14:5] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:5] [Controller][DEBUG] -> Control policy EXPLORING
[11:14:5] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:5] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:14:5] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n5, Type: Type.OBSERVED, Action: 90.0, Parent: M_n4, Left: None, Mid: None, Right: None ]

[11:14:5] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:14:5] [Controller][INFO] -> ADDED LEFT

[11:14:5] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:14:5] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:5][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:5] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:5] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:14:5] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:14:5] [Controller][DEBUG] -> --Performing action: 180.0

[11:14:5] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:5] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:14:5] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:5] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 93.5139°

[11:14:8] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:8] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:8] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -175.6846

[11:14:8] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[11:14:8] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:8] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 4.3154°
[11:14:8] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[11:14:8] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-4.3154, -175.6846, 180.0]

[11:14:9] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:9] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:9] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -173.5703

[11:14:9] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:9] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 6.4297°
[11:14:9] [Controller][DEBUG] ->  --ATTEMPT: 2 / 20
[11:14:9] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-6.4297, -173.5703, 180.0]

[11:14:10] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:10] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:10] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 177.5488

[11:14:10] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:10] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.4512°
[11:14:10] [Controller][DEBUG] ->  --ATTEMPT: 3 / 20
[11:14:10] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.4512, 177.5488, 180.0]

[11:14:11] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:12] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:12] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 177.127

[11:14:12] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:12] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.873°
[11:14:12] [Controller][DEBUG] ->  --ATTEMPT: 4 / 20
[11:14:12] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.873, 177.127, 180.0]

[11:14:12] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:13] [Controller][INFO] ->  ~~ perfect ~~ 
[11:14:13] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -179.2988
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:14:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:13] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:13] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:14:13] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:14:13] [Controller][DEBUG] -> --Performing action: 180.0

[11:14:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:13] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:13] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:13] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:13] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:13] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:13] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:13] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:13] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:13] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:13] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:13][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:13] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:13] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:13] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:13] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:13] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:13] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:14] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:14] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:14] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:14] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:14] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:14] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:14] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:14] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:14] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:14] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:14] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:14] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:14] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:14] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:14][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:14] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:14] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:14] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:14] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:14] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:14] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:15] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:15] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:15] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:15] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:15][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:15] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:15] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:15] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:15] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:15] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:15] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:16] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:16] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:16] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:16] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:16] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:16] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:16] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:16] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:16] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:16] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:16] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:16] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:16] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:16] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:16] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:16] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:16] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:16] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:16] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:16][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:16] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:16] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:16] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:16] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:16] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:16] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:17] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:17][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:17] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:17] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:17][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:17] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:17] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:17][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:17] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:17] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:17][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:17] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:17] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:17][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:17] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:17] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:17] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:17] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:17] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:17][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:17] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:17] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:17] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:17] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:17] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:17] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:18] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:18] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:18][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:18] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:18] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:18] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:18] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:18][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:18] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:18] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:18] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:18] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:14:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:18] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:18][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , O)'}, 'L_n7': {}}

[11:14:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]
[11:14:18] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:14:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:18] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:14:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:18] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:14:18] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:14:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:14:18] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:18] [Controller][DEBUG] -> Control policy EXPLORING
[11:14:18] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:18] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[11:14:18] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n7, Type: Type.OBSERVED, Action: 180.0, Parent: R_n5, Left: None, Mid: None, Right: None ]

[11:14:18] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:14:18] [Controller][INFO] -> ADDED RIGHT
[11:14:18] [Controller][INFO] -> ADDED LEFT

[11:14:18] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:14:18] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:18][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:18] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:18] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[11:14:18] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:14:18] [Controller][DEBUG] -> --Performing action: 90.0

[11:14:18] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:18] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:14:18] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:18] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 91.1449°

[11:14:21] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:21] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:21] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 81.3892

[11:14:21] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[11:14:22] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:22] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 8.6108°
[11:14:22] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[11:14:22] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [8.6108, 81.3892, 90.0]

[11:14:23] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:23] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:23] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 81.3741

[11:14:23] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:23] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 8.6259°
[11:14:23] [Controller][DEBUG] ->  --ATTEMPT: 2 / 20
[11:14:23] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [8.6259, 81.3741, 90.0]

[11:14:24] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:24] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:24] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 95.0423

[11:14:24] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:24] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 5.0423°
[11:14:24] [Controller][DEBUG] ->  --ATTEMPT: 3 / 20
[11:14:24] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-5.0423, 95.0423, 90.0]

[11:14:25] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:25] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:25] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 94.032

[11:14:26] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:26] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 4.032°
[11:14:26] [Controller][DEBUG] ->  --ATTEMPT: 4 / 20
[11:14:26] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-4.032, 94.032, 90.0]

[11:14:27] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:27] [Controller][INFO] ->  ~~ perfect ~~ 
[11:14:27] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 89.6233
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:14:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:27] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>]
[11:14:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:27][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>]
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:14:27] [Controller][DEBUG] -> --Performing action: 90.0

[11:14:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:27] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:27][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:27] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:27] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:27][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:27] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:27] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:27][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:27] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:27] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:27] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:27] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:27] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:27][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:27] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:27] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:27] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:27] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:27] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:27] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:28] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:28][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:28] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:28] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:28][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:28] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:28] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:28][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:28] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:28] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:28][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:28] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:28] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:28][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:28] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:28] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:28] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:28] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:28] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:28][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:28] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:28] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:28] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:28] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:28] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:28] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:29] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:29][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:29] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:29] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:29][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:29] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:29] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:29][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:29] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:29] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:29][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:29] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:29] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:29][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:29] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:29] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:29][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:29] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:29] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:29] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:29] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:29] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:14:29] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:29][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , O)'}, 'L_n9': {}, 'R_n8': {}}

[11:14:29] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]
[11:14:29] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:14:29] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:29] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:14:29] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:29] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:14:30] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:14:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:14:30] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:30] [Controller][DEBUG] -> Control policy EXPLORING
[11:14:30] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:30] [Controller][INFO] -> --ACTIONS: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[11:14:30] [Controller][INFO] -> --CURRENT NODE: [ Name: R_n8, Type: Type.OBSERVED, Action: 90.0, Parent: L_n7, Left: None, Mid: None, Right: None ]

[11:14:30] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:14:30] [Controller][INFO] -> ADDED RIGHT
[11:14:30] [Controller][INFO] -> ADDED LEFT

[11:14:30] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:14:30] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:30][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:30] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:30] [Controller][INFO] -> --Available actions: [<Compass.EST: 0.0>, <Compass.OVEST: 180.0>]
[11:14:30] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:14:30] [Controller][DEBUG] -> --Performing action: 180.0

[11:14:30] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:30] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:14:30] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:30] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 92.0116°

[11:14:33] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:34] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:34] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -174.2666

[11:14:34] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[11:14:34] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:34] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 5.7334°
[11:14:34] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[11:14:34] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-5.7334, -174.2666, 180.0]

[11:14:36] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:36] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:36] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -171.7558

[11:14:36] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:36] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 8.2442°
[11:14:36] [Controller][DEBUG] ->  --ATTEMPT: 2 / 20
[11:14:36] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [-8.2442, -171.7558, 180.0]

[11:14:37] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:37] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:37] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 177.4865

[11:14:37] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:37] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 2.5135°
[11:14:37] [Controller][DEBUG] ->  --ATTEMPT: 3 / 20
[11:14:37] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [2.5135, 177.4865, 180.0]

[11:14:38] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:38] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:38] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: 176.8892

[11:14:38] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:38] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 3.1108°
[11:14:38] [Controller][DEBUG] ->  --ATTEMPT: 4 / 20
[11:14:38] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [3.1108, 176.8892, 180.0]

[11:14:39] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:39] [Controller][INFO] ->  ~~ perfect ~~ 
[11:14:39] [Controller][DEBUG] ->  >> curr state of the sensors: [-178, 178], curr_g: -178.4151
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)

[11:14:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:39] [Controller][INFO] -> --ACTIONS: [<Compass.OVEST: 180.0>]
[11:14:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:39][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][INFO] -> --Available actions: [<Compass.OVEST: 180.0>]
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.ROTATING, Position.JUNCTION)
[11:14:39] [Controller][DEBUG] -> --Performing action: 180.0

[11:14:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:39] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:39][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:39] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:39] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:39][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:39] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:39] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:39] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:39] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:39] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:39][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:39] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:39] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:39] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:39] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:39] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:39] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:40] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:40] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:40] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:40] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:40][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:40] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:40] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:40] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:40] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:40] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:40] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:41] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:41] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:41][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:41] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:41] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:41] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:41][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:41] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:41] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:41] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:41][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:41] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:41] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:41] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:41][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)
[11:14:41] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.JUNCTION)

[11:14:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:41] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:41] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:41][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:41] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:41] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:41] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:41] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:41] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:41][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:41] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:41] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:41] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:41] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:41] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:41] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:42] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:42] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:42] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:42][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:42] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:42] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:42] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:42] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:42] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:42] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:42] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:42][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:42] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:42] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:42] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:42] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:42] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:42] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:42] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:42][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:42] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:42] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:42] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:42] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:42] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:42] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:42] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:42][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:42] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:42] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:42] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:42] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:42] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:42] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:42] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:42][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:42] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:42] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:42] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:42] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:42] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:42] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:42] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:42][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:42] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:42] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:42] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:42] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:42] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:42] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:42] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:42] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:42] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:42] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:43][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:43] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:43] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:43] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:43][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:43] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:43] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:43] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:43][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:43] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:43] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:43] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:43][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:43] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:43] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:43] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:43][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:43] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:43] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:43] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:43][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:43] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:43] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:43] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:43] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:43] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:43][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:43] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:43] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:43] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:43] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:43] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:43] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:44] [Controller][INFO] -> --ACTIONS: [<Command.RUN: 1>]
[11:14:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][INFO] -> --Available actions: [<Command.RUN: 1>]
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:44] [Controller][DEBUG] -> --Performing action: Command.RUN

[11:14:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:44] [Controller][DEBUG] ->  ** COMMAND RUN ** 
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)

[11:14:44] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:44] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:44] [Controller][INFO] -> --ACTIONS: [<Command.GO_TO_JUNCTION: 3>]
[11:14:44] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:44][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , O)', 'R_n10': ' (R , E , O)'}, 'L_n11': {}, 'R_n10': {}}

[11:14:44] [Controller][DEBUG] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]
[11:14:44] [Controller][INFO] -> --Available actions: [<Command.GO_TO_JUNCTION: 3>]
[11:14:44] [Controller][DEBUG] -> --(STATE, POSITION): (State.RUNNING, Position.CORRIDOR)
[11:14:44] [Controller][DEBUG] -> --Performing action: Command.GO_TO_JUNCTION

[11:14:44] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:44] [Controller][DEBUG] ->  ** JOINING THE JUNCTION ** 
[11:14:44] [Controller][DEBUG] ->  ** STATE SENSING ARISE ** 
[11:14:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)

[11:14:45] [Controller][INFO] ->  >>>>>> NEW ALGORITHM CYCLE <<<<<< 
[11:14:45] [Controller][DEBUG] -> Control policy EXPLORING
[11:14:45] [Controller][INFO] -> --MODE: Mode.EXPLORING
[11:14:45] [Controller][INFO] -> --ACTIONS: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[11:14:45] [Controller][INFO] -> --CURRENT NODE: [ Name: L_n11, Type: Type.OBSERVED, Action: 180.0, Parent: R_n8, Left: None, Mid: None, Right: None ]

[11:14:45] [Controller][DEBUG] -> *** 1) UPDATING TREE (MODE EXPLORING) ***
[11:14:45] [Controller][INFO] -> ADDED RIGHT
[11:14:45] [Controller][INFO] -> ADDED LEFT

[11:14:45] [Controller][DEBUG] -> *** 2) UPDATING TREE (MODE EXPLORING) ***
[11:14:45] [Controller][DEBUG] -> --CURRENT TREE:
[11:14:45][NOHEADER] -> {'root': {'M_n1': ' (M , N , E )'}, 'M_n1': {'L_n2': ' (L , O , E)'}, 'L_n2': {'L_n3': ' (L , S , O)', 'M_n4': ' (M , O , E )'}, 'L_n3': {}, 'M_n4': {'M_n6': ' (M , O , O )', 'R_n5': ' (R , N , E)'}, 'M_n6': {}, 'R_n5': {'L_n7': ' (L , O , E)'}, 'L_n7': {'L_n9': ' (L , S , O)', 'R_n8': ' (R , N , E)'}, 'L_n9': {}, 'R_n8': {'L_n11': ' (L , O , E)', 'R_n10': ' (R , E , O)'}, 'L_n11': {'L_n13': ' (L , S , O)', 'R_n12': ' (R , N , O)'}, 'L_n13': {}, 'R_n12': {}, 'R_n10': {}}

[11:14:45] [Controller][DEBUG] -> --CURRENT NODE: [ Name: R_n12, Type: Type.OBSERVED, Action: 90.0, Parent: L_n11, Left: None, Mid: None, Right: None ]
[11:14:45] [Controller][INFO] -> --Available actions: [<Compass.NORD: 90.0>, <Compass.SUD: -90.0>]
[11:14:45] [Controller][DEBUG] -> --(STATE, POSITION): (State.SENSING, Position.JUNCTION)
[11:14:45] [Controller][DEBUG] -> --Performing action: 90.0

[11:14:45] [Controller][DEBUG] ->  ~~~ [ACTION TIME] ~~~ 
[11:14:45] [Controller][DEBUG] ->  ** COMMAND ROTATE ** 

[11:14:45] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:45] [Controller][DEBUG] ->  >> Rotate clockwise (RIGHT) of 90.2146°

[11:14:48] [Controller][DEBUG] ->  ** ORIENTATION CHECKING ** 
[11:14:48] [Controller][ERROR] ->  !! bad orientation !! 
[11:14:48] [Controller][DEBUG] ->  >> curr state of the sensors: [92.0, 88.0], curr_g: 85.5449

[11:14:48] [Controller][DEBUG] ->  ** ADJUSTING ORIENTATION ** 

[11:14:48] [Controller][DEBUG] ->  ** BEST ANGLE COMPUTATION ** 
[11:14:48] [Controller][DEBUG] ->  >> Rotate anti-clockwise (LEFT) of 4.4551°
[11:14:48] [Controller][DEBUG] ->  --ATTEMPT: 1 / 20
[11:14:48] [Controller][DEBUG] -> [Degrees_to_do, curr_g, final_g] = [4.4551, 85.5449, 90.0]
[11:14:49] [Controller][INFO] -> CONTROLLER STOPPED
